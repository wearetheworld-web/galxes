(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{1113:function(e,n){},1114:function(e,n){},1216:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"RecentParticipation"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"participationInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListParticipationInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"recentParticipation"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"participationInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tx"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dao"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:530}};t.loc.source={body:"\nquery RecentParticipation($address: String!, $participationInput: ListParticipationInput!) {\n    addressInfo(address: $address) {\n        id\n        recentParticipation(input: $participationInput) {\n            list {\n                id\n                chain\n                tx\n                campaign{\n                    id\n                    name\n                    dao {\n                        id\n                        alias\n                    }\n                }\n                status\n            }\n        }\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RecentParticipation=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RecentParticipation")},1234:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceBasicWithAuthQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isFollowing"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"unclaimedBackfillLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"addressLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rank"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:394}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\nquery SpaceBasicWithAuthQuery(\n  $id: Int,\n  $alias: String,\n  $address: String!,\n) {\n  space(id: $id, alias: $alias) {\n    ...SpaceBasic\n    isFollowing\n\n    # isAdmin\n    isAdmin(address: $address)\n\n    unclaimedBackfillLoyaltyPoints(address: $address)\n\n    addressLoyaltyPoints(address: $address) {\n      id\n      points\n      rank\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){o(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){o(e,n)})),e.definitions&&e.definitions.forEach((function(e){o(e,n)}))}d.definitions=d.definitions.concat(t(903).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var l={};function m(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;o(e,n),l[e.name.value]=n}})),e.exports=d,e.exports.SpaceBasicWithAuthQuery=function(e,n){var t={kind:e.kind,definitions:[m(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=l[n]||new Set,r=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(l[e]||new Set).forEach((function(e){o.add(e)})))}))}return r.forEach((function(n){var d=m(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceBasicWithAuthQuery")},1284:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateSolanaAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateSolanaAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateSolanaAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:131}};t.loc.source={body:"mutation UpdateSolanaAddress($input: UpdateSolanaAddressInput!) {\r\n    updateSolanaAddress(input: $input) {\r\n        code\r\n    }\r\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateSolanaAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateSolanaAddress")},1285:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateEthAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEthAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateEthAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:122}};t.loc.source={body:"mutation UpdateEthAddress($input: UpdateEthAddressInput!) {\r\n    updateEthAddress(input: $input) {\r\n        code\r\n    }\r\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateEthAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateEthAddress")},1286:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateAptosAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateAptosAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateAptosAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:128}};t.loc.source={body:"mutation UpdateAptosAddress($input: UpdateAptosAddressInput!) {\r\n    updateAptosAddress(input: $input) {\r\n        code\r\n    }\r\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateAptosAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateAptosAddress")},1287:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateSeiAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateSeiAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateSeiAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:122}};t.loc.source={body:"mutation UpdateSeiAddress($input: UpdateSeiAddressInput!){\n  updateSeiAddress(input: $input) {\n    code\n    message\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateSeiAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateSeiAddress")},1288:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"AddressInfoPublic"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasEvmAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasSolanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasAptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasTwitter"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasGithub"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasTelegram"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayTwitter"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayGithub"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayTelegram"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isWhitelisted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isInvited"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerifiedTwitterOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerifiedDiscordOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"enableEmailSubs"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayNamePref"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscriptions"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"passport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pendingRedactAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"passportPendingRedactAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaces"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasicFrag"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:968}};d.loc.source={body:"#import '../fragments/SpaceBasicFrag.gql'\nquery AddressInfoPublic($address: String!, $listSpaceInput: ListSpaceInput!) {\n  addressInfo(address: $address) {\n    id\n    address\n    solanaAddress\n    aptosAddress\n    hasEvmAddress\n    hasSolanaAddress\n    hasAptosAddress\n    hasEmail\n    avatar\n    username\n    hasTwitter\n    hasGithub\n    hasDiscord\n    hasTelegram\n    displayEmail\n    displayTwitter\n    displayGithub\n    displayDiscord\n    displayTelegram\n    isWhitelisted\n    isInvited\n    email\n    twitterUserID\n    twitterUserName\n    githubUserID\n    isVerifiedTwitterOauth2\n    isVerifiedDiscordOauth2\n    enableEmailSubs\n    displayNamePref\n    githubUserName\n    discordUserID\n    discordUserName\n    telegramUserID\n    telegramUserName\n    subscriptions\n    passport {\n      status\n      pendingRedactAt\n      id\n    }\n    passportPendingRedactAt\n    isAdmin\n    spaces(input: $listSpaceInput) {\n      list {\n        ...SpaceBasicFrag\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){o(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){o(e,n)})),e.definitions&&e.definitions.forEach((function(e){o(e,n)}))}d.definitions=d.definitions.concat(t(709).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var l={};function m(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;o(e,n),l[e.name.value]=n}})),e.exports=d,e.exports.AddressInfoPublic=function(e,n){var t={kind:e.kind,definitions:[m(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=l[n]||new Set,r=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(l[e]||new Set).forEach((function(e){o.add(e)})))}))}return r.forEach((function(n){var d=m(e,n);d&&t.definitions.push(d)})),t}(d,"AddressInfoPublic")},1289:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getWhitelistSites"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"whitelistSites"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:67}};t.loc.source={body:"query getWhitelistSites {\n  whitelistSites {\n    name\n    url\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.getWhitelistSites=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"getWhitelistSites")},1290:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateEmail"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEmailInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateEmail"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:119}};t.loc.source={body:"mutation UpdateEmail($input: UpdateEmailInput!) {\n    updateEmail(input: $input) {\n        code\n        message\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateEmail=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateEmail")},1291:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RemoveEmail"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEmailInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeEmail"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:107}};t.loc.source={body:"mutation RemoveEmail($input: UpdateEmailInput!) {\n  removeEmail(input: $input) {\n    code\n    message\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RemoveEmail=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RemoveEmail")},1292:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"SendVerifyCode"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SendVerificationEmailInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sendVerificationCode"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:142}};t.loc.source={body:"mutation SendVerifyCode($input: SendVerificationEmailInput!) {\n    sendVerificationCode(input: $input) {\n        code\n        message\n    }\n} ",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SendVerifyCode=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"SendVerifyCode")},1312:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ParticipationInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"ids"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participations"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"ids"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tx"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:109}};t.loc.source={body:"query ParticipationInfo($ids: [ID!]!) {\n  participations(id: $ids) {\n    id\n    tx\n    status\n    chain\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.ParticipationInfo=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"ParticipationInfo")},1313:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"relatedCampaigns"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaigns"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CampaignSnap"},directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"discordRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"inviteLink"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"useCred"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"formula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gasType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requirementInfo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"enableWhitelist"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requireEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requireUsername"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"distributionType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numNFTMinted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardContract"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenReward"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"depositedTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardId"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"dao"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"logo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"discordRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"inviteLink"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participantsCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bountyWinnersCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"recurringType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loyaltyPoints"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:1437}};d.loc.source={body:"#import '../fragments/Campaign/CampaignSnap.gql'\n\nquery relatedCampaigns($input: ListCampaignInput!) {\n  campaigns(input: $input) {\n    list {\n      ...CampaignSnap\n      id\n      numberID\n      name\n      childrenCampaigns {\n        id\n        type\n        rewardName\n        rewardInfo {\n          discordRole {\n            guildId\n            guildName\n            roleId\n            roleName\n            inviteLink\n          }\n        }\n      }\n      info\n      useCred\n      formula\n      thumbnail\n      gasType\n      createdAt\n      requirementInfo\n      description\n      enableWhitelist\n      chain\n      startTime\n      status\n      requireEmail\n      requireUsername\n      distributionType\n      endTime\n      rewardName\n      numNFTMinted\n      cap\n      tokenRewardContract {\n        id\n        address\n        chain\n      }\n      tokenReward {\n        userTokenAmount\n        tokenAddress\n        depositedTokenAmount\n        tokenRewardId\n      }\n      dao {\n        id\n        name\n        logo\n        alias\n        isVerified\n      }\n      space {\n        id\n        name\n        thumbnail\n        alias\n        isVerified\n      }\n      rewardInfo {\n        discordRole {\n          guildId\n          guildName\n          roleId\n          roleName\n          inviteLink\n        }\n      }\n      participants {\n        participantsCount\n        bountyWinnersCount\n      }\n      recurringType\n      loyaltyPoints\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){o(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){o(e,n)})),e.definitions&&e.definitions.forEach((function(e){o(e,n)}))}d.definitions=d.definitions.concat(t(1378).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var l={};function m(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;o(e,n),l[e.name.value]=n}})),e.exports=d,e.exports.relatedCampaigns=function(e,n){var t={kind:e.kind,definitions:[m(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=l[n]||new Set,r=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(l[e]||new Set).forEach((function(e){o.add(e)})))}))}return r.forEach((function(n){var d=m(e,n);d&&t.definitions.push(d)})),t}(d,"relatedCampaigns")},1315:function(e,n,t){"use strict";t.d(n,"a",(function(){return m}));t(16);var d=t(10),r=t(442),o=t(569),l=t(1316);d.default.use(r.a);o.a,l.a;function m(e,n){var t=e;return t?n.locale!==t?Promise.resolve(function(e,n){return n.locale=e,e}(t,n)):Promise.resolve(t):Promise.reject()}},1320:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"SignIn"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NamedType",name:{kind:"Name",value:"Auth"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[]}]}}],loc:{start:0,end:58}};t.loc.source={body:"mutation SignIn($input: Auth) {\n  signin(input: $input)\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SignIn=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"SignIn")},1322:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"twitterAuthToken"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyTwitterOauth2TokenInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"VerifyTwitterOauth2Token"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:139}};t.loc.source={body:"mutation twitterAuthToken($input: VerifyTwitterOauth2TokenInput!) {\n  VerifyTwitterOauth2Token(input: $input) {\n    code\n    message\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.twitterAuthToken=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"twitterAuthToken")},1323:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyDiscord"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyDiscordAccountInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyDiscordAccount"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserName"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:157}};t.loc.source={body:"mutation VerifyDiscord ($input: VerifyDiscordAccountInput!) {\n  verifyDiscordAccount(input: $input) {\n    address\n    discordUserID\n    discordUserName\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifyDiscord=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifyDiscord")},1324:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyGithubAccount"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyGithubAccountInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyGithubAccount"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserName"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:159}};t.loc.source={body:"mutation VerifyGithubAccount($input: VerifyGithubAccountInput!) {\n  verifyGithubAccount(input: $input) {\n    address\n    githubUserID\n    githubUserName\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifyGithubAccount=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifyGithubAccount")},1325:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyTelegram"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyTelegramAccountInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyTelegramAccount"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserName"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:162}};t.loc.source={body:"mutation VerifyTelegram($input: VerifyTelegramAccountInput!) {\n  verifyTelegramAccount(input: $input) {\n    address\n    telegramUserID\n    telegramUserName\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifyTelegram=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifyTelegram")},1370:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"DaoSnap"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"DAO"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"logo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]}]}}],loc:{start:0,end:78}};t.loc.source={body:"\nfragment DaoSnap on DAO {\n    id\n    name\n    logo\n    alias\n    isVerified\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},1371:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CampaignMedia"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Campaign"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:121}};t.loc.source={body:"fragment CampaignMedia on Campaign { \n    thumbnail\n    rewardName\n    type\n    gamification{\n      id\n      type\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},1378:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CampaignSnap"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Campaign"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"CampaignMedia"},directives:[]},{kind:"Field",name:{kind:"Name",value:"dao"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"DaoSnap"},directives:[]}]}}]}}],loc:{start:0,end:166}};d.loc.source={body:"\n#import '../DaoSnap.gql'\n#import '../CampaignMedia.gql'\n\nfragment CampaignSnap on Campaign {\n    id\n    name\n    ...CampaignMedia\n    dao {\n      ...DaoSnap\n    }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}d.definitions=d.definitions.concat(o(t(1370).definitions)),d.definitions=d.definitions.concat(o(t(1371).definitions)),e.exports=d},1574:function(e,n){},1581:function(e,n){},1583:function(e,n){},1652:function(e,n){},1664:function(e,n){},1665:function(e,n){},1700:function(e,n){},1702:function(e,n){},1713:function(e,n){},1715:function(e,n){},1740:function(e,n){},1742:function(e,n){},1747:function(e,n){},1749:function(e,n){},1756:function(e,n){},1768:function(e,n){},1771:function(e,n){},2027:function(e,n){},2123:function(e,n){},2376:function(e,n){},2377:function(e,n){},2378:function(e,n){},545:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateProfile"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateProfileInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateProfile"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:125}};t.loc.source={body:"mutation UpdateProfile($input: UpdateProfileInput!) {\n    updateProfile(input: $input) {\n        code\n        message\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateProfile=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateProfile")},573:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"BasicUserInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"seiAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasEvmAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasSolanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasAptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasTwitter"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasGithub"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasTelegram"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayTwitter"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayGithub"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayTelegram"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"passport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pendingRedactAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isVerifiedTwitterOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerifiedDiscordOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayNamePref"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscriptions"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isWhitelisted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isInvited"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"passportPendingRedactAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaces"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasicFrag"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:959}};d.loc.source={body:"#import '../fragments/SpaceBasicFrag.gql'\nquery BasicUserInfo($address: String!, $listSpaceInput: ListSpaceInput!) {\n  addressInfo(address: $address) {\n    id\n    username\n    address\n    hasEmail\n    avatar\n    solanaAddress\n    aptosAddress\n    seiAddress\n    hasEvmAddress\n    hasSolanaAddress\n    hasAptosAddress\n    hasTwitter\n    hasGithub\n    hasDiscord\n    hasTelegram\n    displayEmail\n    displayTwitter\n    displayGithub\n    displayDiscord\n    displayTelegram\n    email\n    twitterUserID\n    twitterUserName\n    githubUserID\n    githubUserName\n    passport {\n      status\n      pendingRedactAt\n      id\n    }\n    isVerifiedTwitterOauth2\n    isVerifiedDiscordOauth2\n    displayNamePref\n    discordUserID\n    discordUserName\n    telegramUserID\n    telegramUserName\n    subscriptions\n    isWhitelisted\n    isInvited\n    isAdmin\n    passportPendingRedactAt\n    spaces(input: $listSpaceInput) {\n      list {\n        ...SpaceBasicFrag\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){o(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){o(e,n)})),e.definitions&&e.definitions.forEach((function(e){o(e,n)}))}d.definitions=d.definitions.concat(t(709).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var l={};function m(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;o(e,n),l[e.name.value]=n}})),e.exports=d,e.exports.BasicUserInfo=function(e,n){var t={kind:e.kind,definitions:[m(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=l[n]||new Set,r=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(l[e]||new Set).forEach((function(e){o.add(e)})))}))}return r.forEach((function(n){var d=m(e,n);d&&t.definitions.push(d)})),t}(d,"BasicUserInfo")},684:function(e){e.exports=JSON.parse('{"__schema":{"types":[{"kind":"INTERFACE","name":"VideoPB","possibleTypes":[{"name":"Video"},{"name":"PastBroadcast"}]},{"kind":"INTERFACE","name":"Post","possibleTypes":[{"name":"Video"},{"name":"PastBroadcast"},{"name":"Livestream"}]},{"kind":"INTERFACE","name":"Chat","possibleTypes":[{"name":"ChatOffline"},{"name":"ChatGift"},{"name":"ChatHost"},{"name":"ChatSubscription"},{"name":"ChatChangeMode"},{"name":"ChatText"},{"name":"ChatFollow"},{"name":"ChatLive"},{"name":"ChatDelete"}]},{"kind":"INTERFACE","name":"SenderInfo","possibleTypes":[{"name":"ChatText"},{"name":"ChatSubscription"},{"name":"ChatHost"},{"name":"ChatFollow"},{"name":"ChatGift"}]},{"kind":"UNION","name":"CarouselItem","possibleTypes":[{"name":"Livestream"},{"name":"Poster"},{"name":"User"},{"name":"Video"}]},{"kind":"UNION","name":"BankAddressDetail","possibleTypes":[{"name":"BankInfo"},{"name":"BTCAddress"},{"name":"TipaltiAddress"}]},{"kind":"UNION","name":"SearchUserResult","possibleTypes":[{"name":"User"},{"name":"Livestream"}]}]}}')},689:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"Creds"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userAddress"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"type"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listType"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListType"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"creds"},arguments:[{kind:"Argument",name:{kind:"Name",value:"userAddress"},value:{kind:"Variable",name:{kind:"Name",value:"userAddress"}}},{kind:"Argument",name:{kind:"Name",value:"type"},value:{kind:"Variable",name:{kind:"Name",value:"type"}}},{kind:"Argument",name:{kind:"Name",value:"listType"},value:{kind:"Variable",name:{kind:"Name",value:"listType"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"referenceLink"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subgraph"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endpoint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"query"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:309}};t.loc.source={body:"query Creds($userAddress: String, $type: String, $listType: ListType!) {\n  creds(userAddress: $userAddress, type: $type, listType: $listType) {\n    id\n    name\n    description\n    chain\n    credType\n    # curatorAddress\n    referenceLink\n    subgraph {\n      endpoint\n      query\n      expression\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.Creds=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"Creds")},709:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"SpaceBasicFrag"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Space"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"links"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"followersCount"},arguments:[],directives:[]}]}}],loc:{start:0,end:142}};t.loc.source={body:"\nfragment SpaceBasicFrag on Space {\n    id\n    name\n    info\n    thumbnail\n    alias\n    links\n    isVerified\n    status\n    followersCount\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},899:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceBasicQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]}]}}]}}],loc:{start:0,end:229}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\nquery SpaceBasicQuery(\n  $id: Int,\n  $alias: String,\n  $address: String!,\n) {\n  space(id: $id, alias: $alias) {\n    ...SpaceBasic\n\n    # isAdmin\n    isAdmin(address: $address)\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){o(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){o(e,n)})),e.definitions&&e.definitions.forEach((function(e){o(e,n)}))}d.definitions=d.definitions.concat(t(903).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var l={};function m(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;o(e,n),l[e.name.value]=n}})),e.exports=d,e.exports.SpaceBasicQuery=function(e,n){var t={kind:e.kind,definitions:[m(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=l[n]||new Set,r=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(l[e]||new Set).forEach((function(e){o.add(e)})))}))}return r.forEach((function(n){var d=m(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceBasicQuery")},9:function(e,n,t){"use strict";var d,r,o,l,m,c,v,f,k,N,S,h,E,y,T,F,D,A,I,w,O,V,C,U,P,R,L,G,_,M,B,x,$,W,Q,H,Y,z,K,X,J,j,Z,ee,ne,ie,ae,te,de,re,se,oe,le,ue,me,ce,ve,fe,ke,pe,Ne,Se,ge,he;t.d(n,"B",(function(){return d})),t.d(n,"n",(function(){return r})),t.d(n,"b",(function(){return o})),t.d(n,"o",(function(){return l})),t.d(n,"c",(function(){return m})),t.d(n,"s",(function(){return c})),t.d(n,"f",(function(){return f})),t.d(n,"j",(function(){return k})),t.d(n,"g",(function(){return N})),t.d(n,"e",(function(){return S})),t.d(n,"z",(function(){return E})),t.d(n,"h",(function(){return T})),t.d(n,"E",(function(){return D})),t.d(n,"D",(function(){return A})),t.d(n,"w",(function(){return I})),t.d(n,"u",(function(){return w})),t.d(n,"v",(function(){return V})),t.d(n,"K",(function(){return U})),t.d(n,"t",(function(){return _})),t.d(n,"m",(function(){return x})),t.d(n,"H",(function(){return $})),t.d(n,"A",(function(){return W})),t.d(n,"i",(function(){return Q})),t.d(n,"G",(function(){return H})),t.d(n,"x",(function(){return Y})),t.d(n,"L",(function(){return z})),t.d(n,"l",(function(){return K})),t.d(n,"a",(function(){return X})),t.d(n,"d",(function(){return J})),t.d(n,"q",(function(){return j})),t.d(n,"r",(function(){return Z})),t.d(n,"C",(function(){return ie})),t.d(n,"p",(function(){return te})),t.d(n,"k",(function(){return se})),t.d(n,"F",(function(){return oe})),t.d(n,"J",(function(){return ue})),t.d(n,"M",(function(){return ve})),t.d(n,"N",(function(){return fe})),t.d(n,"I",(function(){return ke})),t.d(n,"y",(function(){return pe})),function(e){e.NotIssued="NOT_ISSUED",e.CanIssue="CAN_ISSUE",e.PendingPrepare="PENDING_PREPARE",e.PendingSave="PENDING_SAVE",e.IssuedNotMinted="ISSUED_NOT_MINTED",e.Minted="MINTED",e.Declined="DECLINED",e.PendingRedact="PENDING_REDACT"}(d||(d={})),function(e){e.Drop="Drop",e.MysteryBox="MysteryBox",e.Forge="Forge",e.MysteryBoxWr="MysteryBoxWR",e.Airdrop="Airdrop",e.ExternalLink="ExternalLink",e.OptIn="OptIn",e.OptInEmail="OptInEmail",e.PowahDrop="PowahDrop",e.Parent="Parent",e.Oat="Oat",e.Bounty="Bounty",e.Token="Token",e.DiscordRole="DiscordRole",e.Mintlist="Mintlist",e.Points="Points",e.PointsMysteryBox="PointsMysteryBox"}(r||(r={})),function(e){e.Draft="Draft",e.Active="Active",e.NotStarted="NotStarted",e.Expired="Expired",e.CapReached="CapReached",e.Deleted="Deleted"}(o||(o={})),function(e){e.Gas="Gas",e.Gasless="Gasless"}(l||(l={})),function(e){e.Ethereum="ETHEREUM",e.Ropsten="ROPSTEN",e.Kovan="KOVAN",e.Rinkeby="RINKEBY",e.Goerli="GOERLI",e.Bsc="BSC",e.BscTestnet="BSC_TESTNET",e.Matic="MATIC",e.Mumbai="MUMBAI",e.Xdai="XDAI",e.Arbitrum="ARBITRUM",e.ArbitrumTestnet="ARBITRUM_TESTNET",e.Heco="HECO",e.HecoTestnet="HECO_TESTNET",e.Fantom="FANTOM",e.FantomTestnet="FANTOM_TESTNET",e.Avalanche="AVALANCHE",e.AvalancheTestnet="AVALANCHE_TESTNET",e.Solana="SOLANA",e.SolanaDevnet="SOLANA_DEVNET",e.Moonbeam="MOONBEAM",e.Optimism="OPTIMISM",e.Iotex="IOTEX",e.Aptos="APTOS",e.AptosTestnet="APTOS_TESTNET",e.Okc="OKC",e.BobaEth="BOBA_ETH",e.BobaAvax="BOBA_AVAX",e.BobaBnb="BOBA_BNB",e.BobaMoonbeam="BOBA_MOONBEAM",e.BobaFantom="BOBA_FANTOM",e.ZksyncEra="ZKSYNC_ERA",e.Sei="SEI",e.Atlantic2="ATLANTIC2"}(m||(m={})),function(e){e.Newest="Newest",e.Earliest="Earliest",e.Trending="Trending"}(c||(c={})),function(e){e.Private="PRIVATE",e.Public="PUBLIC"}(v||(v={})),function(e){e.Csv="CSV",e.Subgraph="SUBGRAPH",e.Graphql="GRAPHQL",e.Rest="REST",e.TwitterFollow="TWITTER_FOLLOW",e.TwitterRt="TWITTER_RT",e.TwitterLike="TWITTER_LIKE",e.TwitterSpace="TWITTER_SPACE",e.TwitterQuote="TWITTER_QUOTE",e.TwitterFollowedBy="TWITTER_FOLLOWED_BY",e.DiscordAma="DISCORD_AMA",e.DiscordMember="DISCORD_MEMBER",e.DiscordMessage="DISCORD_MESSAGE",e.GoogleSheet="GOOGLE_SHEET",e.CampaignNftHolder="CAMPAIGN_NFT_HOLDER",e.ContractNftHolder="CONTRACT_NFT_HOLDER",e.GithubContributor="GITHUB_CONTRIBUTOR",e.DynamicContractNftHolder="DYNAMIC_CONTRACT_NFT_HOLDER",e.SnapshotOrg="SNAPSHOT_ORG",e.Api="API",e.DynamicCampaignNftHolder="DYNAMIC_CAMPAIGN_NFT_HOLDER",e.VisitLink="VISIT_LINK",e.JoinTelegram="JOIN_TELEGRAM",e.Quiz="QUIZ",e.WatchYoutube="WATCH_YOUTUBE",e.WalletBalance="WALLET_BALANCE",e.SpaceUsers="SPACE_USERS",e.TwitterTweetsLike="TWITTER_TWEETS_LIKE",e.TwitterTweetsRetweet="TWITTER_TWEETS_RETWEET",e.GitcoinPassport="GITCOIN_PASSPORT"}(f||(f={})),function(e){e.Nft="NFT",e.Token="TOKEN",e.Discordrole="DISCORDROLE",e.Loyaltypoints="LOYALTYPOINTS",e.Oat="OAT",e.Custom="CUSTOM",e.Loyaltypointsmysterybox="LOYALTYPOINTSMYSTERYBOX"}(k||(k={})),function(e){e.EvmAddress="EVM_ADDRESS",e.SolanaAddress="SOLANA_ADDRESS",e.Email="EMAIL",e.Twitter="TWITTER",e.Github="GITHUB",e.Discord="DISCORD",e.Snapshot="SNAPSHOT",e.AptosAddress="APTOS_ADDRESS",e.GalxeId="GALXE_ID",e.Telegram="TELEGRAM",e.SeiAddress="SEI_ADDRESS"}(N||(N={})),function(e){e.None="NONE",e.Daily="DAILY",e.Weekly="WEEKLY",e.Monthly="MONTHLY"}(S||(S={})),function(e){e.OnChain="ON_CHAIN",e.SybilPrevention="SYBIL_PREVENTION"}(h||(h={})),function(e){e.Default="Default",e.Lower="Lower",e.Upper="Upper"}(E||(E={})),function(e){e.Synced="SYNCED",e.Syncing="SYNCING"}(y||(y={})),function(e){e.Default="Default",e.MultiDimension="MultiDimension"}(T||(T={})),function(e){e.Active="Active",e.Inactive="Inactive",e.Expired="Expired"}(F||(F={})),function(e){e.MultiChoice="MULTI_CHOICE",e.TextInputExact="TEXT_INPUT_EXACT",e.TextInputContain="TEXT_INPUT_CONTAIN"}(D||(D={})),function(e){e.Option="OPTION",e.Input="INPUT"}(A||(A={})),function(e){e.Default="DEFAULT",e.OnChainData="ON_CHAIN_DATA"}(I||(I={})),function(e){e.NativeToken="NATIVE_TOKEN",e.EventLogs="EVENT_LOGS",e.TraceLogs="TRACE_LOGS"}(w||(w={})),function(e){e.Go="GO",e.Js="JS",e.Wasm="WASM"}(O||(O={})),function(e){e.Realtime="REALTIME",e.SnapshotBlock="SNAPSHOT_BLOCK",e.SnapshotTimestamp="SNAPSHOT_TIMESTAMP"}(V||(V={})),function(e){e.Get="GET",e.Post="POST"}(C||(C={})),function(e){e.UnderReview="UnderReview",e.Active="Active",e.Inactive="Inactive",e.Rejected="Rejected",e.Standard="Standard"}(U||(U={})),function(e){e.Chain="CHAIN",e.Space="SPACE"}(P||(P={})),function(e){e.Pending="Pending",e.Success="Success",e.Failed="Failed"}(R||(R={})),function(e){e.Deposit="Deposit",e.Withdraw="Withdraw"}(L||(L={})),function(e){e.TaskTypeUnspecified="TASK_TYPE_UNSPECIFIED",e.TaskTypeSpace="TASK_TYPE_SPACE",e.TaskTypeCampaign="TASK_TYPE_CAMPAIGN",e.TaskTypeManually="TASK_TYPE_MANUALLY"}(G||(G={})),function(e){e.Points="Points",e.GalxeId="GalxeID"}(_||(_={})),function(e){e.Once="Once",e.Daily="Daily",e.Weekly="Weekly",e.Monthly="Monthly"}(M||(M={})),function(e){e.MerkleProof="MerkleProof"}(B||(B={})),function(e){e.Fcfs="FCFS",e.Raffle="RAFFLE"}(x||(x={})),function(e){e.Evm="EVM",e.Solana="SOLANA",e.Aptos="APTOS",e.Email="EMAIL"}($||($={})),function(e){e.Generated="Generated",e.Pending="Pending",e.Success="Success",e.Queueing="Queueing",e.Failed="Failed",e.Participated="Participated"}(W||(W={})),function(e){e.Any="ANY",e.All="ALL"}(Q||(Q={})),function(e){e.Once="ONCE",e.Daily="DAILY",e.Weekly="WEEKLY",e.Monthly="MONTHLY"}(H||(H={})),function(e){e.Space="Space",e.Campaign="Campaign",e.NftCore="NftCore",e.Cred="Cred",e.CredItem="CredItem",e.User="User",e.NftMetadata="NftMetadata",e.CredPoller="CredPoller",e.SendEmail="SendEmail",e.CampaignCollection="CampaignCollection",e.CampaignDislike="CampaignDislike",e.SuperAdmin="SuperAdmin"}(Y||(Y={})),function(e){e.ClaimDay_1="CLAIM_DAY_1",e.ClaimWeek_2="CLAIM_WEEK_2",e.ClaimWeek_1="CLAIM_WEEK_1",e.Recommend="RECOMMEND",e.Announcement="ANNOUNCEMENT",e.Test="TEST",e.Customize="CUSTOMIZE"}(z||(z={})),function(e){e.Username="USERNAME",e.Sid="SID",e.Ens="ENS"}(K||(K={})),function(e){e.Compatible="COMPATIBLE",e.Evm="EVM",e.Solana="SOLANA",e.Aptos="APTOS",e.Email="EMAIL",e.Discord="DISCORD",e.Sei="SEI"}(X||(X={})),function(e){e.Campaign="CAMPAIGN",e.Backfill="BACKFILL",e.Api="API",e.DiscordCommand="DISCORD_COMMAND"}(J||(J={})),function(e){e.Id="ID",e.Powah="Powah",e.CreateTime="CreateTime"}(j||(j={})),function(e){e.Desc="DESC",e.Asc="ASC"}(Z||(Z={})),function(e){e.Alive="Alive",e.Burned="Burned"}(ee||(ee={})),function(e){e.NoCampaign="NO_CAMPAIGN",e.WaitToStart="WAIT_TO_START",e.VoteToClaim="VOTE_TO_CLAIM",e.Claim="CLAIM",e.Claimed="CLAIMED",e.Ended="ENDED",e.ReachedMintingCap="REACHED_MINTING_CAP"}(ne||(ne={})),function(e){e.GoogleSheet="GoogleSheet"}(ie||(ie={})),function(e){e.Running="Running",e.Succeeded="Succeeded",e.Failed="Failed",e.Queueing="Queueing",e.Unknown="Unknown"}(ae||(ae={})),function(e){e.VoiceChannel="VoiceChannel",e.TextChannel="TextChannel",e.Role="Role"}(te||(te={})),function(e){e.Device="DEVICE",e.User="USER"}(de||(de={})),function(e){e.Draft="DRAFT",e.Active="ACTIVE",e.NotStarted="NOT_STARTED",e.Expired="EXPIRED",e.Deleted="DELETED"}(re||(re={})),function(e){e.Participation="PARTICIPATION",e.Pv="PV",e.Uv="UV",e.GeoPv="GEO_PV",e.GeoUv="GEO_UV",e.Twitter="TWITTER",e.Discord="DISCORD",e.Follower="FOLLOWER"}(se||(se={})),function(e){e.Days_2="DAYS_2",e.Days_7="DAYS_7",e.Days_30="DAYS_30"}(oe||(oe={})),function(e){e.Aes256Gcm="AES256GCM"}(le||(le={})),function(e){e.Owner="Owner",e.Admin="Admin"}(ue||(ue={})),function(e){e.Erc721="ERC721",e.Erc1155="ERC1155",e.Erc20="ERC20"}(me||(me={})),function(e){e.Dao="Dao",e.Campaign="Campaign",e.Link="Link"}(ce||(ce={})),function(e){e.Other="OTHER",e.Banner="BANNER",e.Choices="CHOICES",e.Spaces="SPACES",e.News="NEWS",e.Announcement="ANNOUNCEMENT"}(ve||(ve={})),function(e){e.Other="OTHER",e.Space="SPACE",e.Campaign="CAMPAIGN"}(fe||(fe={})),function(e){e.Twitter="TWITTER",e.Discord="DISCORD",e.Github="GITHUB",e.Telegram="TELEGRAM"}(ke||(ke={})),function(e){e.Append="APPEND",e.Remove="REMOVE",e.Replace="REPLACE",e.Create="CREATE",e.Update="UPDATE",e.Delete="DELETE"}(pe||(pe={})),function(e){e.Address="ADDRESS",e.Email="EMAIL",e.Discord="DISCORD",e.Twitter="TWITTER"}(Ne||(Ne={})),function(e){e.Pending="Pending",e.Review="Review",e.Approved="Approved",e.Failed="Failed",e.Declined="Declined"}(Se||(Se={})),function(e){e.Persona="Persona"}(ge||(ge={})),function(e){e.Username="USERNAME",e.Avatar="AVATAR",e.Email="EMAIL",e.Twitter="TWITTER",e.Discord="DISCORD",e.Github="GITHUB",e.Telegram="TELEGRAM",e.EvmAddress="EVM_ADDRESS",e.SolanaAddress="SOLANA_ADDRESS",e.AccessToken="ACCESS_TOKEN",e.AptosAddress="APTOS_ADDRESS",e.SeiAddress="SEI_ADDRESS"}(he||(he={}))},903:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"SpaceBasic"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Space"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"links"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"followersCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"backers"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"categories"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"token"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildInfo"},arguments:[],directives:[]}]}}],loc:{start:0,end:215}};t.loc.source={body:"\nfragment SpaceBasic on Space {\n    id\n    name\n    thumbnail\n    alias\n    isVerified\n    info\n    links\n    status\n    followersCount\n    backers\n    categories\n    token\n    discordGuildID\n    discordGuildInfo\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},915:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"IsUsernameExisting"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"username"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"usernameExist"},arguments:[{kind:"Argument",name:{kind:"Name",value:"username"},value:{kind:"Variable",name:{kind:"Name",value:"username"}}}],directives:[]}]}}],loc:{start:0,end:87}};t.loc.source={body:"query IsUsernameExisting($username: String!) {\n    usernameExist(username: $username)\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.IsUsernameExisting=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"IsUsernameExisting")},919:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"AddressInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"seiAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasEvmAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasSolanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasAptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasTwitter"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasGithub"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasTelegram"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayTwitter"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayGithub"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayTelegram"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isWhitelisted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isInvited"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerifiedTwitterOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerifiedDiscordOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"enableEmailSubs"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayNamePref"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscriptions"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"passport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pendingRedactAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"passportPendingRedactAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaces"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasicFrag"},directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"private"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"telegramUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"accessToken"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:1200}};d.loc.source={body:"#import '../fragments/SpaceBasicFrag.gql'\nquery AddressInfo(\n  $address: String!\n  $listSpaceInput: ListSpaceInput!\n) {\n  addressInfo(address: $address) {\n    id\n    address\n    solanaAddress\n    aptosAddress\n    seiAddress\n    hasEvmAddress\n    hasSolanaAddress\n    hasAptosAddress\n    hasEmail\n    avatar\n    username\n    hasTwitter\n    hasGithub\n    hasDiscord\n    hasTelegram\n    displayEmail\n    displayTwitter\n    displayGithub\n    displayDiscord\n    displayTelegram\n    isWhitelisted\n    isInvited\n    email\n    twitterUserID\n    twitterUserName\n    githubUserID\n    isVerifiedTwitterOauth2\n    isVerifiedDiscordOauth2\n    enableEmailSubs\n    displayNamePref\n    githubUserName\n    discordUserID\n    discordUserName\n    telegramUserID\n    telegramUserName\n    subscriptions\n    passport {\n      status\n      pendingRedactAt\n      id\n    }\n    passportPendingRedactAt\n    isAdmin\n    spaces(input: $listSpaceInput) {\n      list {\n        ...SpaceBasicFrag\n      }\n    }\n    private {\n      email\n      twitterUserName\n      twitterUserID\n      discordUserID\n      discordUserName\n      githubUserID\n      githubUserName\n      telegramUserID\n      telegramUserName\n      accessToken\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){o(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){o(e,n)})),e.definitions&&e.definitions.forEach((function(e){o(e,n)}))}d.definitions=d.definitions.concat(t(709).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var l={};function m(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;o(e,n),l[e.name.value]=n}})),e.exports=d,e.exports.AddressInfo=function(e,n){var t={kind:e.kind,definitions:[m(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=l[n]||new Set,r=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(l[e]||new Set).forEach((function(e){o.add(e)})))}))}return r.forEach((function(n){var d=m(e,n);d&&t.definitions.push(d)})),t}(d,"AddressInfo")},926:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"followSpace"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceIds"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"followSpace"},arguments:[{kind:"Argument",name:{kind:"Name",value:"spaceIds"},value:{kind:"Variable",name:{kind:"Name",value:"spaceIds"}}}],directives:[]}]}}],loc:{start:0,end:79}};t.loc.source={body:"mutation followSpace($spaceIds: [Int!]) {\n  followSpace(spaceIds: $spaceIds)\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.followSpace=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"followSpace")},930:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"unfollowSpace"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceIds"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"unfollowSpace"},arguments:[{kind:"Argument",name:{kind:"Name",value:"spaceIds"},value:{kind:"Variable",name:{kind:"Name",value:"spaceIds"}}}],directives:[]}]}}],loc:{start:0,end:83}};t.loc.source={body:"mutation unfollowSpace($spaceIds: [Int!]) {\n  unfollowSpace(spaceIds: $spaceIds)\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.unfollowSpace=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"unfollowSpace")},935:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifySpaceTwitterAccount"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifySpaceTwitterAccountInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifySpaceTwitterAccount"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:179}};t.loc.source={body:"mutation VerifySpaceTwitterAccount($input: VerifySpaceTwitterAccountInput!) {\n  verifySpaceTwitterAccount(input: $input) {\n    address\n    twitterUserID\n    twitterUserName\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifySpaceTwitterAccount=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifySpaceTwitterAccount")}}]);