(window.webpackJsonp=window.webpackJsonp||[]).push([[874,147,678,700,740],{2492:function(e,n,d){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"Credentials"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCredInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"credentials"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredBasic"},directives:[]}]}}]}}]}}],loc:{start:0,end:237}};t.loc.source={body:"#import '../fragments/Credential/CredBasic.gql'\n\nquery Credentials($input: ListCredInput!){\n    credentials(input:$input) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      list{\n          ...CredBasic\n      }\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){l(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){l(e,n)})),e.definitions&&e.definitions.forEach((function(e){l(e,n)}))}t.definitions=t.definitions.concat(d(2493).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var m={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;l(e,n),m[e.name.value]=n}})),e.exports=t,e.exports.Credentials=function(e,n){var d={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=m[n]||new Set,r=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var c=l;l=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(m[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var t=o(e,n);t&&d.definitions.push(t)})),d}(t,"Credentials")},2500:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CredHolderSearch"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"after"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"searchString"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"credential"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credentialItems"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}},{kind:"Argument",name:{kind:"Name",value:"searchString"},value:{kind:"Variable",name:{kind:"Name",value:"searchString"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:346}};d.loc.source={body:"query CredHolderSearch($id: ID!,$first: Int,$after: String ,$searchString: String){\n    credential(id:$id) {\n        id\n        credentialItems(first: $first, after: $after, searchString: $searchString) {\n            list\n            pageInfo {\n            hasNextPage\n            endCursor\n            }\n            totalCount\n        }\n    } \n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.CredHolderSearch=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"CredHolderSearch")},2501:function(e,n,d){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CredInfoForEdit"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"credential"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"referenceLink"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credDiscordAMA"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"channelId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligibleDuration"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credDiscordMessage"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"channelId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"channelName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"daysCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credDiscordMember"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roles"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"RoleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"RoleName"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"credSubgraph"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endpoint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"query"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"parameterCase"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credGoogleSheet"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sourceConfig"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"transformationConfig"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sheet"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"column"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"frequency"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credCampaignNFTHolder"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credContractNFTHolder"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"contract"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credDynamicCampaignNFTHolder"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"credDynamicContractNFTHolder"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"contract"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credTwitter"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expireAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"quoteMentionsCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"quoteHashtag"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaceListenMins"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credGithubContributor"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"repository"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"minCommitCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"multiDimensionCredConfig"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MultiDimensionCred"},directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"CredQuizFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"credQuiz"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"quizzes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"correctItems"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:1485}};t.loc.source={body:"#import '../fragments/Credential/MultiDimensionCred.gql'\n#import '../fragments/Credential/Quiz.gql'\n\nquery CredInfoForEdit($id: ID!) {\n  credential(id: $id) {\n    id\n    name\n    credType\n    credSource\n    referenceLink\n    description\n    chain\n    credDiscordAMA {\n      guildId\n      channelId\n      startTime\n      endTime\n      eligibleDuration\n    }\n    credDiscordMessage {\n      guildName\n      channelId\n      guildId\n      channelName\n      daysCount\n    }\n    credDiscordMember {\n      guildId\n      roles {\n        RoleId\n        RoleName\n      }\n    }\n    credSubgraph {\n      endpoint\n      query\n      expression\n      parameterCase\n    }\n    credGoogleSheet {\n      sourceConfig {\n        url\n      }\n      transformationConfig {\n        sheet\n        column\n        credType\n      }\n      frequency\n    }\n    credCampaignNFTHolder {\n      campaign {\n        id\n      }\n      timestamp\n    }\n    credContractNFTHolder {\n      contract\n      timestamp\n    }\n    credDynamicCampaignNFTHolder {\n      campaign {\n        id\n      }\n    }\n    credDynamicContractNFTHolder {\n      contract\n    }\n    credTwitter {\n      expireAt\n      twitterID\n      quoteMentionsCount\n      quoteHashtag\n      spaceListenMins\n    }\n    credGithubContributor {\n      repository\n      minCommitCount\n    }\n    multiDimensionCredConfig {\n      ...MultiDimensionCred\n    }\n    ...CredQuizFrag\n    credQuiz {\n      quizzes {\n        correctItems {\n          value\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}t.definitions=t.definitions.concat(l(d(2484).definitions)),t.definitions=t.definitions.concat(l(d(2494).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=t,e.exports.CredInfoForEdit=function(e,n){var d={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=o[n]||new Set,r=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var t=c(e,n);t&&d.definitions.push(t)})),d}(t,"CredInfoForEdit")},2521:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"BaseAddressInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasTwitter"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasGithub"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isWhitelisted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerifiedTwitterOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerifiedDiscordOauth2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"displayNamePref"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"githubUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscriptions"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"passport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pendingRedactAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"enableEmailSubs"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:525}};d.loc.source={body:"query BaseAddressInfo(\n  $address: String!\n) {\n  addressInfo(address: $address) {\n    id\n    address\n    solanaAddress\n    hasEmail\n    avatar\n    username\n    hasTwitter\n    hasGithub\n    hasDiscord\n    isWhitelisted\n    email\n    twitterUserID\n    twitterUserName\n    githubUserID\n    isVerifiedTwitterOauth2\n    isVerifiedDiscordOauth2\n    displayNamePref\n    githubUserName\n    discordUserID\n    discordUserName\n    subscriptions\n    passport {\n      status\n      pendingRedactAt\n      id\n    }\n    enableEmailSubs\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.BaseAddressInfo=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"BaseAddressInfo")},2523:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"TwitterOauth2Status"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"twitterOauth2Status"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"oauthRateLimited"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:86}};d.loc.source={body:"query TwitterOauth2Status {\n    twitterOauth2Status {\n        oauthRateLimited\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.TwitterOauth2Status=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"TwitterOauth2Status")},2541:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"campaignParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pfirst"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pafter"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"wfirst"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"wafter"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pDownload"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"bDownload"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isParent"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numNFTMinted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"skip"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"isParent"}}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"pfirst"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"pafter"}}},{kind:"Argument",name:{kind:"Name",value:"download"},value:{kind:"Variable",name:{kind:"Name",value:"pDownload"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"participantsCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bountyWinners"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"wfirst"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"wafter"}}},{kind:"Argument",name:{kind:"Name",value:"download"},value:{kind:"Variable",name:{kind:"Name",value:"bDownload"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aptosAddress"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"bountyWinnersCount"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:1318}};d.loc.source={body:"query campaignParticipants($id: ID!, $pfirst: Int!, $pafter: String!, $wfirst: Int!, $wafter: String!, $pDownload: Boolean!= false, $bDownload: Boolean!= false, $isParent: Boolean = false) {\n  campaign(id: $id) {\n    id\n    numberID\n    numNFTMinted\n    participants @skip(if: $isParent) {\n      participants(first: $pfirst, after: $pafter, download: $pDownload) {\n        # campaign all participants; if campaign is bounty, it will return no winner participants\n        list {\n          username\n          avatar\n          address\n          email\n          solanaAddress\n          aptosAddress\n          discordUserID\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n      participantsCount # campaign all participants count; if campaign is bounty, it will return no winner participants count\n      bountyWinners(first: $wfirst, after: $wafter, download: $bDownload) {\n        # bounty raffle campaign winner list, non-raffle campaign will return null\n        list {\n          username\n          avatar\n          address\n          email\n          solanaAddress\n          aptosAddress\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n      bountyWinnersCount # bounty raffle campaign winner count, non-raffle campaign return 0\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.campaignParticipants=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"campaignParticipants")},2687:function(e,n,d){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CampaignInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CampaignDetailFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceDetail"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isBookmarked"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"parentCampaign"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CampaignDetailFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"parentCampaign"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:576}};t.loc.source={body:"#import '../fragments/CampaignDetailFrag.gql'\n#import '../fragments/SpaceDetail.gql'\n\nquery CampaignInfo($id: ID!, $address: String!) {\n  campaign(id: $id) {\n    ...CampaignDetailFrag\n    space {\n      ...SpaceDetail\n      # isAdmin\n      isAdmin(address: $address)\n    }\n    isBookmarked(address: $address)\n    claimedLoyaltyPoints(address: $address)\n    parentCampaign {\n      id\n      isSequencial\n    }\n    isSequencial\n    # children campaigns\n    childrenCampaigns {\n      ...CampaignDetailFrag\n      parentCampaign {\n        id\n        isSequencial\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}t.definitions=t.definitions.concat(l(d(2674).definitions)),t.definitions=t.definitions.concat(l(d(2675).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=t,e.exports.CampaignInfo=function(e,n){var d={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=o[n]||new Set,r=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var t=c(e,n);t&&d.definitions.push(t)})),d}(t,"CampaignInfo")},2746:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CampaignInfoForEdit"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"formula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isPrivate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gasType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requireIntegrate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"distributionType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimEndTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numNFTMinted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardContract"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenReward"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"depositedTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasDeposited"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"withdrawnTokenAmount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nftTemplates"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"probability"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"animationURL"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isTemplate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"traits"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"discordRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"inviteLink"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"premint"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"price"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalSupply"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"banner"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"loyaltyPointsMysteryBox"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"weight"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"credentialGroups"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credentials"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credSource"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionRelation"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewards"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"recurringType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"taskConfig"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participateCondition"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cred"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionalFormula"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardConfigs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cred"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"attrs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"attrFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewards"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"arithmetics"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cred"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"arithmeticFormula"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionalFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardAttrVals"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrTitle"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrVal"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:2328}};d.loc.source={body:"query CampaignInfoForEdit($id: ID!, $address: String!) {\n  campaign(id: $id) {\n    id\n    space {\n      id\n    }\n    nftCore {\n      id\n    }\n    numberID\n    name\n    description\n    thumbnail\n    startTime\n    endTime\n    status\n    formula\n    cap\n    isPrivate\n    gasType\n    type\n    requireIntegrate\n    rewardType\n    distributionType\n    rewardName\n    chain\n    claimEndTime\n    numNFTMinted\n    tokenRewardContract {\n      id\n      address\n      chain\n    }\n    tokenReward {\n      userTokenAmount\n      tokenAddress\n      depositedTokenAmount\n      tokenRewardId\n      hasDeposited\n      withdrawnTokenAmount\n    }\n    nftTemplates {\n      id\n      name\n      image\n      probability\n      animationURL\n      isTemplate\n      traits {\n        name\n        value\n      }\n    }\n    childrenCampaigns {\n      id\n      thumbnail\n      numberID\n      name\n      status\n      type\n    }\n    rewardInfo {\n      discordRole {\n        guildId\n        guildName\n        roleId\n        roleName\n        inviteLink\n      }\n      premint {\n        startTime\n        endTime\n        chain\n        price\n        totalSupply\n        contractAddress\n        banner\n      }\n      loyaltyPointsMysteryBox {\n        points\n        weight\n      }\n    }\n    credentialGroups(address: $address) {\n      id,\n      description,\n      credentials {\n        id\n        name\n        credSource\n      },\n      conditionRelation,\n      conditions {\n        expression\n      },\n      rewards {\n        expression\n        rewardType\n      },\n      claimedLoyaltyPoints,\n    }\n    isSequencial\n    recurringType\n    taskConfig (address: $address){\n      participateCondition {\n        conditions{\n          cred{\n            id\n          }\n          eligible\n        }\n        conditionalFormula\n      }\n      rewardConfigs{\n        conditions{\n          cred{\n            id\n          }\n          attrs{\n            attrName\n          }\n          attrFormula\n          eligible\n        }\n        rewards{\n          arithmetics{\n            cred{\n              id\n              credType\n            }\n            eligible\n          }\n          rewardCount\n          arithmeticFormula\n        }\n        conditionalFormula\n        eligible\n        rewardAttrVals{\n          attrName\n          attrTitle\n          attrVal\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.CampaignInfoForEdit=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"CampaignInfoForEdit")},2747:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CampaignsBySpace"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"campaigns"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenReward"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"tokenAddress"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenRewardContract"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:594}};d.loc.source={body:"query CampaignsBySpace($id: Int!, $input: ListCampaignInput!) {\n    space(id:$id) {\n        id\n        campaigns(input:$input){\n            pageInfo{\n                endCursor\n                hasNextPage\n            }\n            list{\n                numberID\n                id\n                status\n                name\n                thumbnail\n                type\n                tokenReward{\n                    tokenAddress\n                }\n                tokenRewardContract{\n                    id\n                    chain\n                }\n            }\n               \n    }\n}\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.CampaignsBySpace=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"CampaignsBySpace")},2885:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"IsGuildMember"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"guildId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"isGuildMember"},arguments:[{kind:"Argument",name:{kind:"Name",value:"guildId"},value:{kind:"Variable",name:{kind:"Name",value:"guildId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"isGuildMember"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"failReason"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:116}};d.loc.source={body:"query IsGuildMember($guildId: String!) {\n  isGuildMember(guildId: $guildId) {\n    isGuildMember\n    failReason\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.IsGuildMember=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"IsGuildMember")},3009:function(e,n,d){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceBasic"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasicFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"unclaimedBackfillLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"addressLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rank"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:328}};t.loc.source={body:"#import '../fragments/SpaceBasicFrag.gql'\nquery SpaceBasic($id:Int,$address: String!) {\n  space(id: $id) {\n    ...SpaceBasicFrag\n\n    isAdmin(address: $address)\n\n    discordGuildID\n\n    unclaimedBackfillLoyaltyPoints(address: $address)\n\n    addressLoyaltyPoints(address: $address) {\n      id\n      points\n      rank\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){l(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){l(e,n)})),e.definitions&&e.definitions.forEach((function(e){l(e,n)}))}t.definitions=t.definitions.concat(d(709).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var m={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;l(e,n),m[e.name.value]=n}})),e.exports=t,e.exports.SpaceBasic=function(e,n){var d={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=m[n]||new Set,r=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var c=l;l=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(m[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var t=o(e,n);t&&d.definitions.push(t)})),d}(t,"SpaceBasic")},3010:function(e,n,d){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceByAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaces"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasicFrag"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:288}};t.loc.source={body:"#import '../fragments/SpaceBasicFrag.gql'\nquery SpaceByAddress($address: String!,$listSpaceInput:ListSpaceInput!) {\n    addressInfo(address: $address)  {\n        id\n        spaces(input:$listSpaceInput){\n            list{\n                 ...SpaceBasicFrag\n            }\n        }\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){l(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){l(e,n)})),e.definitions&&e.definitions.forEach((function(e){l(e,n)}))}t.definitions=t.definitions.concat(d(709).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var m={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;l(e,n),m[e.name.value]=n}})),e.exports=t,e.exports.SpaceByAddress=function(e,n){var d={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=m[n]||new Set,r=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var c=l;l=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(m[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var t=o(e,n);t&&d.definitions.push(t)})),d}(t,"SpaceByAddress")},3011:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceDepthInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaceTwitter"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"Name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"FollowerCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"spaceGuild"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"memberCount"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:222}};d.loc.source={body:"query SpaceDepthInfo($id: Int, $alias: String) {\n  space(id: $id, alias: $alias) {\n    id\n    spaceTwitter {\n      Id\n      Name\n      FollowerCount\n    }\n    spaceGuild {\n      id\n      name\n      memberCount\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.SpaceDepthInfo=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"SpaceDepthInfo")},3102:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"nftHolder"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"after"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"block"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftHolderSnapshot"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"holders"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}},{kind:"Argument",name:{kind:"Name",value:"block"},value:{kind:"Variable",name:{kind:"Name",value:"block"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasPreviousPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"holder"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:376}};d.loc.source={body:"query nftHolder($id: ID!, $first: Int!, $after: String!, $block: Int!){\n  campaign(id: $id) {\n    id\n    nftHolderSnapshot{\n      holders(first: $first, after: $after, block: $block) {\n        pageInfo{\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        list{\n          id\n          holder\n        }\n      }\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.nftHolder=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"nftHolder")},3107:function(e,n){},3108:function(e,n){},3110:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SufficientForGaslessChainQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"chains"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Chain"}}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceBalance"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sufficientForGaslessClaimOnChain"},arguments:[{kind:"Argument",name:{kind:"Name",value:"chains"},value:{kind:"Variable",name:{kind:"Name",value:"chains"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"sufficient"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:223}};d.loc.source={body:"query SufficientForGaslessChainQuery(\n  $id: Int,\n  $chains: [Chain!]!\n) {\n  space(id: $id) {\n    spaceBalance {\n      sufficientForGaslessClaimOnChain(chains: $chains) {\n        sufficient\n\t      chain\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.SufficientForGaslessChainQuery=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"SufficientForGaslessChainQuery")},3167:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"NFTTargetPowah"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"campaignID"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"nftCoreAddress"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftTargetPowah"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}},{kind:"Argument",name:{kind:"Name",value:"campaignID"},value:{kind:"Variable",name:{kind:"Name",value:"campaignID"}}},{kind:"Argument",name:{kind:"Name",value:"nftCoreAddress"},value:{kind:"Variable",name:{kind:"Name",value:"nftCoreAddress"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"target_powah"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signature"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:215}};d.loc.source={body:"query NFTTargetPowah($address: String!, $campaignID: ID!,$nftCoreAddress:String!) {\n  nftTargetPowah(address:$address,campaignID: $campaignID, nftCoreAddress: $nftCoreAddress) {\n    target_powah\n    signature\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.NFTTargetPowah=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"NFTTargetPowah")},3254:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"MyNFTsForge"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"option"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListNFTInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nfts"},arguments:[{kind:"Argument",name:{kind:"Name",value:"option"},value:{kind:"Variable",name:{kind:"Name",value:"option"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"powah"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"category"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dao"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"logo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:512}};d.loc.source={body:"query MyNFTsForge($address: String!, $option: ListNFTInput!) {\n  addressInfo(address: $address) {\n    id\n    nfts(option: $option) {\n      totalCount\n      pageInfo {\n        endCursor\n      }\n      list {\n        id\n        name\n        image\n        powah\n        category\n        nftCore {\n          id\n          name\n          symbol\n          contractAddress\n          dao {\n            id\n            name\n            logo\n            alias\n            isVerified\n          }\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.MyNFTsForge=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"MyNFTsForge")},3379:function(e,n,d){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CampaignInfoWidthAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CampaignDetailFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"userParticipants"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"1"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"premintTo"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceDetail"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"isFollowing"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"followersCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isBookmarked"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"parentCampaign"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CampaignDetailFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"userParticipants"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}},{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"IntValue",value:"1"}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"parentCampaign"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:864}};t.loc.source={body:"#import '../fragments/CampaignDetailFrag.gql'\n#import '../fragments/SpaceDetail.gql'\n\nquery CampaignInfoWidthAddress($id: ID!, $address: String!) {\n  campaign(id: $id) {\n    ...CampaignDetailFrag\n    userParticipants(address: $address, first: 1) {\n      list {\n        status\n        premintTo\n      }\n    }\n    space {\n      ...SpaceDetail\n      # isAdmin\n      isAdmin(address: $address)\n      isFollowing\n      followersCount\n    }\n    isBookmarked(address: $address)\n    claimedLoyaltyPoints(address: $address)\n    parentCampaign {\n      id\n      isSequencial\n    }\n    isSequencial\n    childrenCampaigns {\n      ...CampaignDetailFrag\n      claimedLoyaltyPoints(address: $address)\n      userParticipants(address: $address, first: 1) {\n        list {\n          status\n        }\n      }\n      parentCampaign {\n        id\n        isSequencial\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}t.definitions=t.definitions.concat(l(d(2674).definitions)),t.definitions=t.definitions.concat(l(d(2675).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=t,e.exports.CampaignInfoWidthAddress=function(e,n){var d={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=o[n]||new Set,r=new Set,l=new Set;for(t.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var t=c(e,n);t&&d.definitions.push(t)})),d}(t,"CampaignInfoWidthAddress")},3831:function(e,n){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetSecondaryAccounts"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"type"}},type:{kind:"NamedType",name:{kind:"Name",value:"AddressType"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"secondaryAccounts"},arguments:[{kind:"Argument",name:{kind:"Name",value:"type"},value:{kind:"Variable",name:{kind:"Name",value:"type"}}}],directives:[]}]}}]}}],loc:{start:0,end:151}};d.loc.source={body:"query GetSecondaryAccounts($address: String!, $type: AddressType) {\n  addressInfo(address: $address) {\n    id\n    secondaryAccounts(type: $type)\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function t(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var d=e.type;"NamedType"===d.kind&&n.add(d.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){t(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){t(e,n)})),e.definitions&&e.definitions.forEach((function(e){t(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;t(e,n),r[e.name.value]=n}})),e.exports=d,e.exports.GetSecondaryAccounts=function(e,n){var d={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(d.loc=e.loc);var t=r[n]||new Set,m=new Set,o=new Set;for(t.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var t=l(e,n);t&&d.definitions.push(t)})),d}(d,"GetSecondaryAccounts")}}]);