(window.webpackJsonp=window.webpackJsonp||[]).push([[1111],{1238:function(t,e,r){"use strict";r.d(e,"a",(function(){return w}));var n=r(424),o=r(648),h=r(308),l=r(279),d=r(649),c=r(426);class w{constructor(t){this.atlas=t}loadSequence(t,e,r){let n=r.regions;for(let i=0,o=n.length;i<o;i++){let path=r.getPath(e,i),o=this.atlas.findRegion(path);if(null==o)throw new Error("Region not found in atlas: "+path+" (sequence: "+t+")");n[i]=o}}newRegionAttachment(t,e,path,r){let n=new c.a(e,path);if(null!=r)this.loadSequence(e,path,r);else{let t=this.atlas.findRegion(path);if(!t)throw new Error("Region not found in atlas: "+path+" (region attachment: "+e+")");n.region=t}return n}newMeshAttachment(t,e,path,r){let n=new h.a(e,path);if(null!=r)this.loadSequence(e,path,r);else{let t=this.atlas.findRegion(path);if(!t)throw new Error("Region not found in atlas: "+path+" (mesh attachment: "+e+")");n.region=t}return n}newBoundingBoxAttachment(t,e){return new n.a(e)}newPathAttachment(t,e){return new l.a(e)}newPointAttachment(t,e){return new d.a(e)}newClippingAttachment(t,e){return new o.a(e)}}},1239:function(t,e,r){"use strict";r.d(e,"a",(function(){return o})),r.d(e,"b",(function(){return h}));var n=r(425);class o{constructor(t,e="",r=new h){this.pathPrefix="",this.assets={},this.errors={},this.toLoad=0,this.loaded=0,this.textureLoader=t,this.pathPrefix=e,this.downloader=r}start(path){return this.toLoad++,this.pathPrefix+path}success(t,path,e){this.toLoad--,this.loaded++,this.assets[path]=e,t&&t(path,e)}error(t,path,e){this.toLoad--,this.loaded++,this.errors[path]=e,t&&t(path,e)}loadAll(){return new Promise(((t,e)=>{let r=()=>{this.isLoadingComplete()?this.hasErrors()?e(this.errors):t(this):requestAnimationFrame(r)};requestAnimationFrame(r)}))}setRawDataURI(path,data){this.downloader.rawDataUris[this.pathPrefix+path]=data}loadBinary(path,t=(()=>{}),e=(()=>{})){path=this.start(path),this.downloader.downloadBinary(path,(data=>{this.success(t,path,data)}),((t,r)=>{this.error(e,path,`Couldn't load binary ${path}: status ${t}, ${r}`)}))}loadText(path,t=(()=>{}),e=(()=>{})){path=this.start(path),this.downloader.downloadText(path,(data=>{this.success(t,path,data)}),((t,r)=>{this.error(e,path,`Couldn't load text ${path}: status ${t}, ${r}`)}))}loadJson(path,t=(()=>{}),e=(()=>{})){path=this.start(path),this.downloader.downloadJson(path,(data=>{this.success(t,path,data)}),((t,r)=>{this.error(e,path,`Couldn't load JSON ${path}: status ${t}, ${r}`)}))}loadTexture(path,t=(()=>{}),e=(()=>{})){if(path=this.start(path),!!("undefined"==typeof window||"undefined"==typeof navigator||!window.document))fetch(path,{mode:"cors"}).then((t=>t.ok?t.blob():(this.error(e,path,`Couldn't load image: ${path}`),null))).then((t=>t?createImageBitmap(t,{premultiplyAlpha:"none",colorSpaceConversion:"none"}):null)).then((e=>{e&&this.success(t,path,this.textureLoader(e))}));else{let image=new Image;image.crossOrigin="anonymous",image.onload=()=>{this.success(t,path,this.textureLoader(image))},image.onerror=()=>{this.error(e,path,`Couldn't load image: ${path}`)},this.downloader.rawDataUris[path]&&(path=this.downloader.rawDataUris[path]),image.src=path}}loadTextureAtlas(path,t=(()=>{}),e=(()=>{}),r){let o=path.lastIndexOf("/"),h=o>=0?path.substring(0,o+1):"";path=this.start(path),this.downloader.downloadText(path,(o=>{try{let l=new n.a(o),d=l.pages.length,c=!1;for(let n of l.pages)this.loadTexture(r?r[n.name]:h+n.name,((e,r)=>{c||(n.setTexture(r),0==--d&&this.success(t,path,l))}),((t,r)=>{c||this.error(e,path,`Couldn't load texture atlas ${path} page image: ${t}`),c=!0}))}catch(t){this.error(e,path,`Couldn't parse texture atlas ${path}: ${t.message}`)}}),((t,r)=>{this.error(e,path,`Couldn't load texture atlas ${path}: status ${t}, ${r}`)}))}get(path){return this.assets[this.pathPrefix+path]}require(path){path=this.pathPrefix+path;let t=this.assets[path];if(t)return t;let e=this.errors[path];throw Error("Asset not found: "+path+(e?"\n"+e:""))}remove(path){path=this.pathPrefix+path;let t=this.assets[path];return t.dispose&&t.dispose(),delete this.assets[path],t}removeAll(){for(let t in this.assets){let e=this.assets[t];e.dispose&&e.dispose()}this.assets={}}isLoadingComplete(){return 0==this.toLoad}getToLoad(){return this.toLoad}getLoaded(){return this.loaded}dispose(){this.removeAll()}hasErrors(){return Object.keys(this.errors).length>0}getErrors(){return this.errors}}class h{constructor(){this.callbacks={},this.rawDataUris={}}dataUriToString(t){if(!t.startsWith("data:"))throw new Error("Not a data URI.");let e=t.indexOf("base64,");return-1!=e?(e+="base64,".length,atob(t.substr(e))):t.substr(t.indexOf(",")+1)}base64ToUint8Array(t){for(var e=window.atob(t),r=e.length,n=new Uint8Array(r),i=0;i<r;i++)n[i]=e.charCodeAt(i);return n}dataUriToUint8Array(t){if(!t.startsWith("data:"))throw new Error("Not a data URI.");let e=t.indexOf("base64,");if(-1==e)throw new Error("Not a binary data URI.");return e+="base64,".length,this.base64ToUint8Array(t.substr(e))}downloadText(t,e,r){if(this.start(t,e,r))return;if(this.rawDataUris[t]){try{let e=this.rawDataUris[t];this.finish(t,200,this.dataUriToString(e))}catch(e){this.finish(t,400,JSON.stringify(e))}return}let n=new XMLHttpRequest;n.overrideMimeType("text/html"),n.open("GET",t,!0);let o=()=>{this.finish(t,n.status,n.responseText)};n.onload=o,n.onerror=o,n.send()}downloadJson(t,e,r){this.downloadText(t,(data=>{e(JSON.parse(data))}),r)}downloadBinary(t,e,r){if(this.start(t,e,r))return;if(this.rawDataUris[t]){try{let e=this.rawDataUris[t];this.finish(t,200,this.dataUriToUint8Array(e))}catch(e){this.finish(t,400,JSON.stringify(e))}return}let n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer";let o=()=>{this.finish(t,n.status,n.response)};n.onload=()=>{200==n.status||0==n.status?this.finish(t,200,new Uint8Array(n.response)):o()},n.onerror=o,n.send()}start(t,e,r){let n=this.callbacks[t];try{if(n)return!0;this.callbacks[t]=n=[]}finally{n.push(e,r)}}finish(t,e,data){let r=this.callbacks[t];delete this.callbacks[t];let n=200==e||0==e?[data]:[e,data];for(let i=n.length-1,t=r.length;i<t;i+=2)r[i].apply(null,n)}}}}]);