(window.webpackJsonp=window.webpackJsonp||[]).push([[915,7],{2908:function(e,t,r){"use strict";r.d(t,"b",(function(){return j})),r.d(t,"a",(function(){return c}));r(3218);const n=globalThis.fetch,o=globalThis.FormData,c=(globalThis.Headers,globalThis.Request,globalThis.Response,globalThis.Blob),l=(globalThis.File,globalThis.ReadableStream,new URL("https://dweb.link/")),d=(e,t={})=>{const r=t.gateway||l;return"ipfs:"===(e=new URL(String(e))).protocol?new URL(`/ipfs/${e.href.slice("ipfs://".length)}`,r):e};class w{constructor(e,t,data){this.ipnft=e,this.url=t,this.data=data,Object.defineProperties(this,{ipnft:{enumerable:!0,writable:!1},url:{enumerable:!0,writable:!1},data:{enumerable:!1,writable:!1}})}embed(){return w.embed(this)}static embed({data:data}){return h(data,{gateway:l})}}const h=(input,e)=>T(input,f,y,e),f=e=>e instanceof URL,m=(e,t)=>[e,new URL(t)],y=(e,t)=>[e,d(t,e)],k=(e,t,path)=>"string"==typeof e&&t.has(path.join(".")),v=(data,e,path)=>(data.set(path.join("."),e),[data,void 0]),E=e=>e instanceof c,T=(input,p,e,t)=>{const[,output]=R(input,p,e,t,[]);return output},R=(input,p,e,t,path)=>{return p(input,t,path)?e(t,input,path):Array.isArray(input)?S(input,p,e,t,path):"object"==typeof(r=input)&&null!=r?L(input,p,e,t,path):[t,input];var r},L=(input,p,e,t,path)=>{let r=t;const output={};for(const[t,n]of Object.entries(input)){const[o,c]=R(n,p,e,r,[...path,t]);output[t]=c,r=o}return[r,output]},S=(input,p,e,t,path)=>{const output=[];let r=t;for(const[t,element]of input.entries()){const[n,o]=R(element,p,e,r,[...path,t]);output[t]=o,r=n}return[r,output]};class j{constructor({token:e,endpoint:t=new URL("https://api.nft.storage")}){this.token=e,this.endpoint=t}static auth(e){if(!e)throw new Error("missing token");return{Authorization:`Bearer ${e}`}}static async storeBlob({endpoint:e,token:t},r){const o=new URL("/upload",e);if(0===r.size)throw new Error("Content size is 0, make sure to provide some content");const c=await n(o.toString(),{method:"POST",headers:j.auth(t),body:r}),l=await c.json();if(l.ok)return l.value.cid;throw new Error(l.error.message)}static async storeCar({endpoint:e,token:t},r){const n="application/car"!==r.type?r.slice(0,r.size,"application/car"):r;return j.storeBlob({endpoint:e,token:t},n)}static async storeDirectory({endpoint:e,token:t},r){const c=new URL("/upload",e),body=new o;let l=0;for(const e of r)body.append("file",e,e.name),l+=e.size;if(0===l)throw new Error("Total size of files should exceed 0, make sure to provide some content");const d=await n(c.toString(),{method:"POST",headers:j.auth(t),body:body}),w=await d.json();if(w.ok)return w.value.cid;throw new Error(w.error.message)}static async store({endpoint:e,token:t},r){U(r);const c=new URL("/store",e),body=(input=>{const[form,meta]=R(input,E,v,new o,[]);return form.set("meta",JSON.stringify(meta)),form})(r),l=new Set(body.keys()),d=await n(c.toString(),{method:"POST",headers:j.auth(t),body:body}),h=await d.json();if(!0===h.ok){const{value:e}=h;return(({ipnft:e,url:t,data:data},r)=>new w(e,t,T(data,k,m,r)))(e,l)}throw new Error(h.error.message)}static async status({endpoint:e,token:t},r){const o=new URL(`/${r}`,e),c=await n(o.toString(),{method:"GET",headers:j.auth(t)}),l=await c.json();if(l.ok)return{cid:l.value.cid,deals:D(l.value.deals),size:l.value.size,pin:z(l.value.pin),created:new Date(l.value.created)};throw new Error(l.error.message)}static async check({endpoint:e},t){const r=new URL(`/check/${t}`,e),o=await n(r.toString()),c=await o.json();if(c.ok)return{cid:c.value.cid,deals:D(c.value.deals),pin:c.value.pin};throw new Error(c.error.message)}static async delete({endpoint:e,token:t},r){const o=new URL(`/${r}`,e),c=await n(o.toString(),{method:"DELETE",headers:j.auth(t)}),l=await c.json();if(!l.ok)throw new Error(l.error.message)}storeBlob(e){return j.storeBlob(this,e)}storeCar(e){return j.storeCar(this,e)}storeDirectory(e){return j.storeDirectory(this,e)}status(e){return j.status(this,e)}delete(e){return j.delete(this,e)}check(e){return j.check(this,e)}store(e){return j.store(this,e)}}const U=({name:e,description:t,image:image,decimals:r})=>{if("string"!=typeof e)throw new TypeError("string property `name` identifying the asset is required");if("string"!=typeof t)throw new TypeError("string property `description` describing asset is required");if(!(image instanceof c&&image.type.startsWith("image/")))throw new TypeError("proprety `image` must be a Blob or File object with `image/*` mime type");if(void 0!==r&&"number"!=typeof r)throw new TypeError("proprety `decimals` must be an integer value")},D=e=>e.map((e=>{const{dealActivation:t,dealExpiration:r,lastChanged:n}={dealExpiration:null,dealActivation:null,...e};return{...e,lastChanged:new Date(n),...t&&{dealActivation:new Date(t)},...r&&{dealExpiration:new Date(r)}}})),z=e=>({...e,created:new Date(e.created)})},3218:function(e,t){}}]);