(window.webpackJsonp=window.webpackJsonp||[]).push([[1188],{1250:function(e,t,r){(function(e){const n=this,o=r(2231),l="UTF8",c="UTF16",d="UTF16BE",h="UTF16LE",m="UTF32",f="UTF32BE",y="UTF32LE",x="UINT7",k="ASCII",E="BINARY",w="UINT8",T="UINT16",C="UINT16LE",A="UINT16BE",O="UINT32",S="UINT32LE",B="UINT32BE",$="ESCAPED",M="STRING",R=function(t,data){if("string"!=typeof t||""===t)throw new TypeError(`type: "${t}" not recognized`);const r=function(e){const t={type:"",base64:!1},r=/^(base64:)?([a-zA-Z0-9]+)$/i.exec(e);return r&&(r[2]&&(t.type=r[2].toUpperCase()),r[1]&&(t.base64=!0)),t}(t.toUpperCase());if(r.base64){if(r.type===M)throw new TypeError(`type: "${t} "BASE64:" prefix not allowed with type ${M}`);if(e.isBuffer(data))r.data=o.base64.decode(data);else{if("string"!=typeof data)throw new TypeError(`type: "${t} unrecognized data type: typeof(data): ${typeof data}`);{const t=e.from(data,"ascii");r.data=o.base64.decode(t)}}}else r.data=data;switch(r.type){case l:!function(e){e.type=l;const t=e.data;e.bom=0,t.length>=3&&239===t[0]&&187===t[1]&&191===t[2]&&(e.bom=3)}(r);break;case c:case d:case h:!function(e){const t=e.data;switch(e.bom=0,e.type){case c:e.type=d,t.length>=2&&(254===t[0]&&255===t[1]?e.bom=2:255===t[0]&&254===t[1]&&(e.type=h,e.bom=2));break;case d:if(e.type=d,t.length>=2)if(254===t[0]&&255===t[1])e.bom=2;else if(255===t[0]&&254===t[1])throw new TypeError(`src type: "${d}" specified but BOM is for "${h}"`);break;case h:if(e.type=h,t.length>=0){if(254===t[0]&&255===t[1])throw new TypeError(`src type: "${h}" specified but BOM is for "${d}"`);255===t[0]&&254===t[1]&&(e.bom=2)}break;default:throw new TypeError(`UTF16 BOM: src type "${e.type}" unrecognized`)}}(r);break;case m:case f:case y:!function(e){const t=e.data;switch(e.bom=0,e.type){case m:e.type=f,t.length>=4&&(0===t[0]&&0===t[1]&&254===t[2]&&255===t[3]&&(e.bom=4),255===t[0]&&254===t[1]&&0===t[2]&&0===t[3]&&(e.type=y,e.bom=4));break;case f:if(e.type=f,t.length>=4&&(0===t[0]&&0===t[1]&&254===t[2]&&255===t[3]&&(e.bom=4),255===t[0]&&254===t[1]&&0===t[2]&&0===t[3]))throw new TypeError(`src type: ${f} specified but BOM is for ${y}"`);break;case y:if(e.type=y,t.length>=4){if(0===t[0]&&0===t[1]&&254===t[2]&&255===t[3])throw new TypeError(`src type: "${y}" specified but BOM is for "${f}"`);255===t[0]&&254===t[1]&&0===t[2]&&0===t[3]&&(e.bom=4)}break;default:throw new TypeError(`UTF32 BOM: src type "${e.type}" unrecognized`)}}(r);break;case T:r.type=A;break;case O:r.type=B;break;case k:r.type=x;break;case E:r.type=w;break;case x:case w:case C:case A:case S:case B:case M:case $:break;default:throw new TypeError(`type: "${t}" not recognized`)}if(r.type===M){if("string"!=typeof r.data)throw new TypeError(`type: "${t}" but data is not a string`)}else if(!e.isBuffer(r.data))throw new TypeError(`type: "${t}" but data is not a Buffer`);return r},N=function(e,t){switch(e){case l:return o.utf8.encode(t);case d:return o.utf16be.encode(t);case h:return o.utf16le.encode(t);case f:return o.utf32be.encode(t);case y:return o.utf32le.encode(t);case x:return o.uint7.encode(t);case w:return o.uint8.encode(t);case A:return o.uint16be.encode(t);case C:return o.uint16le.encode(t);case B:return o.uint32be.encode(t);case S:return o.uint32le.encode(t);case M:return o.string.encode(t);case $:return o.escaped.encode(t);default:throw new TypeError(`encode type "${e}" not recognized`)}};t.decode=function(e,data){return function(e){switch(e.type){case l:return o.utf8.decode(e.data,e.bom);case h:return o.utf16le.decode(e.data,e.bom);case d:return o.utf16be.decode(e.data,e.bom);case f:return o.utf32be.decode(e.data,e.bom);case y:return o.utf32le.decode(e.data,e.bom);case x:return o.uint7.decode(e.data);case w:return o.uint8.decode(e.data);case A:return o.uint16be.decode(e.data);case C:return o.uint16le.decode(e.data);case B:return o.uint32be.decode(e.data);case S:return o.uint32le.decode(e.data);case M:return o.string.decode(e.data);case $:return o.escaped.decode(e.data);default:throw new TypeError(`decode type "${e.type}" not recognized`)}}(R(e,data))},t.encode=function(e,t){let r,n;const R=function(e,t){if(!Array.isArray(t))throw new TypeError('dst chars: not array: "'+typeof t);if("string"!=typeof e)throw new TypeError('dst type: not string: "'+typeof e);const r=function(e){let t,r;const n={crlf:!1,lf:!1,base64:!1,type:""};for(;;){if(r=e,t=e.slice(0,5),"CRLF:"===t){n.crlf=!0,r=e.slice(5);break}if(t=e.slice(0,3),"LF:"===t){n.lf=!0,r=e.slice(3);break}break}return t=r.split(":"),1===t.length?n.type=t[0]:2===t.length&&"BASE64"===t[1]&&(n.base64=!0,n.type=t[0]),n}(e.toUpperCase());switch(r.type){case l:case d:case h:case f:case y:case x:case w:case C:case A:case S:case B:case $:break;case M:if(r.base64)throw new TypeError(`":BASE64" suffix not allowed with type ${M}`);break;case k:r.type=x;break;case E:r.type=w;break;case c:r.type=d;break;case m:r.type=f;break;case T:r.type=A;break;case O:r.type=B;break;default:throw new TypeError(`dst type unrecognized: "${e}" : must have form [crlf:|lf:]type[:base64]`)}return r}(e,t);return R.crlf?(r=o.lineEnds.crlf(t),n=N(R.type,r)):R.lf?(r=o.lineEnds.lf(t),n=N(R.type,r)):n=N(R.type,t),R.base64&&(n=o.base64.encode(n)),n},t.convert=function(e,t,r){return n.encode(r,n.decode(e,t))}}).call(this,r(20).Buffer)},2229:function(e,t,r){(function(t){e.exports=function(e){const n="api.js: ",o=this,l=r(409),c=r(1250),d=r(2235),h=new(r(2238)),{attributes:m,showAttributes:f,showAttributeErrors:y,showRuleDependencies:x}=r(2242),k=r(2245),E=function(e,t,r){const n=`<span class="${l.style.CLASS_CTRLCHAR}">`,o="</span>",c=`<span class="${l.style.CLASS_NOMATCH}">`,d="</span>";let h,html="";for(;Array.isArray(e)&&0!==e.length;){if("number"!=typeof t)throw new Error("abnfToHtml: beg must be type number");if(t>=e.length)break;h="number"!=typeof r||t+r>=e.length?e.length:t+r;let m=0;for(let i=t;i<h;i+=1){const t=e[i];if(t>=32&&t<=126)switch(1===m?(html+=o,m=0):2===m&&(html+=d,m=0),t){case 32:html+="&nbsp;";break;case 60:html+="&lt;";break;case 62:html+="&gt;";break;case 38:html+="&amp;";break;case 34:html+="&quot;";break;case 39:html+="&#039;";break;case 92:html+="&#092;";break;default:html+=String.fromCharCode(t)}else 9===t||10===t||13===t?(0===m?(html+=n,m=1):2===m&&(html+=d+n,m=1),9===t&&(html+="TAB"),10===t&&(html+="LF"),13===t&&(html+="CR")):(0===m?(html+=c,m=2):1===m&&(html+=o+c,m=2),html+=`\\x${l.utils.charToHex(t)}`)}2===m&&(html+=d),1===m&&(html+=o);break}return html},w=function(e,t,r){let n="";for(let i=t;i<t+r;i+=1){const t=e[i];if(t>=32&&t<=126)n+=String.fromCharCode(t);else switch(t){case 9:n+="\\t";break;case 10:n+="\\n";break;case 13:n+="\\r";break;default:n+="\\unknown"}}return n};let T,C=!1,A=!1,O=!1,S=!1,B=0;if(this.errors=[],t.isBuffer(e))this.chars=c.decode("BINARY",e);else if(Array.isArray(e))this.chars=e.slice();else{if("string"!=typeof e)throw new Error(`${n}input source is not a string, byte Buffer or character array`);this.chars=c.decode("STRING",e)}this.sabnf=c.encode("STRING",this.chars),this.scan=function(e,t){this.lines=d(this.chars,this.errors,e,t),C=!0},this.parse=function(e,t){if(!C)throw new Error(`${n}grammar not scanned`);h.syntax(this.chars,this.lines,this.errors,e,t),A=!0},this.translate=function(){if(!A)throw new Error(`${n}grammar not scanned and parsed`);const e=h.semantic(this.chars,this.lines,this.errors);0===this.errors.length&&(this.rules=e.rules,this.udts=e.udts,T=e.lineMap,O=!0)},this.attributes=function(){if(!O)throw new Error(`${n}grammar not scanned, parsed and translated`);return B=m(this.rules,this.udts,T,this.errors),S=!0,B},this.generate=function(e){if(this.lines=d(this.chars,this.errors,e),this.errors.length)return;if(h.syntax(this.chars,this.lines,this.errors,e),this.errors.length)return;const t=h.semantic(this.chars,this.lines,this.errors);this.errors.length||(this.rules=t.rules,this.udts=t.udts,T=t.lineMap,B=m(this.rules,this.udts,T,this.errors),S=!0)},this.displayRules=function(e="index"){if(!O)throw new Error(`${n}grammar not scanned, parsed and translated`);return k(this.rules,this.udts,e)},this.displayRuleDependencies=function(e="index"){if(!S)throw new Error(`${n}no attributes - must be preceeded by call to attributes()`);return x(e)},this.displayAttributes=function(e="index"){if(!S)throw new Error(`${n}no attributes - must be preceeded by call to attributes()`);return B&&y(e),f(e)},this.displayAttributeErrors=function(){if(!S)throw new Error(`${n}no attributes - must be preceeded by call to attributes()`);return y()},this.toSource=function(e){if(!S)throw new Error(`${n}can't generate parser source - must be preceeded by call to attributes()`);if(B)throw new Error(`${n}can't generate parser source - attributes have ${B} errors`);return h.generateSource(this.chars,this.lines,this.rules,this.udts,e)},this.toObject=function(){if(!S)throw new Error(`${n}can't generate parser source - must be preceeded by call to attributes()`);if(B)throw new Error(`${n}can't generate parser source - attributes have ${B} errors`);return h.generateObject(this.sabnf,this.rules,this.udts)},this.errorsToAscii=function(){return function(e,t,r){let n,line,o,l;return n="",e.forEach((e=>{line=t[e.line],n+=`${line.lineNo}: `,n+=`${line.beginChar}: `,n+=e.char-line.beginChar+": ",o=line.beginChar,l=e.char-line.beginChar,n+=w(r,o,l),n+=" >> ",o=e.char,l=line.beginChar+line.length-e.char,n+=w(r,o,l),n+="\n",n+=`${line.lineNo}: `,n+=`${line.beginChar}: `,n+=e.char-line.beginChar+": ",n+="error: ",n+=e.msg,n+="\n"})),n}(this.errors,this.lines,this.chars)},this.errorsToHtml=function(title){return function(e,t,r,title){const[style]=l;let html="";const n=`<span class="${style.CLASS_NOMATCH}">&raquo;</span>`;return html+=`<p><table class="${style.CLASS_GRAMMAR}">\n`,title&&"string"==typeof title&&(html+=`<caption>${title}</caption>\n`),html+="<tr><th>line<br>no.</th><th>line<br>offset</th><th>error<br>offset</th><th><br>text</th></tr>\n",e.forEach((e=>{let line,o,c,d,text,h="",m="";0===t.length?(text=n,o=0):(line=t[e.line],c=line.beginChar,e.char>c&&(h=E(r,c,e.char-c)),c=e.char,d=line.beginChar+line.length,c<d&&(m=E(r,c,d-c)),text=h+n+m,o=e.char-line.beginChar,html+="<tr>",html+=`<td>${e.line}</td><td>${line.beginChar}</td><td>${o}</td><td>${text}</td>`,html+="</tr>\n",html+="<tr>",html+=`<td colspan="3"></td><td>&uarr;:&nbsp;${l.utils.stringToAsciiHtml(e.msg)}</td>`,html+="</tr>\n")})),html+="</table></p>\n",html}(this.errors,this.lines,this.chars,title)},this.linesToAscii=function(){return function(e){let t="Annotated Input Grammar";return e.forEach((e=>{t+="\n",t+=`line no: ${e.lineNo}`,t+=` : char index: ${e.beginChar}`,t+=` : length: ${e.length}`,t+=` : abnf: ${w(o.chars,e.beginChar,e.length)}`})),t+="\n",t}(this.lines)},this.linesToHtml=function(){return function(e){let html="";return html+=`<table class="${l.style.CLASS_GRAMMAR}">\n`,html+="<caption>Annotated Input Grammar</caption>\n",html+="<tr>",html+="<th>line<br>no.</th><th>first<br>char</th><th><br>length</th><th><br>text</th>",html+="</tr>\n",e.forEach((e=>{html+="<tr>",html+=`<td>${e.lineNo}`,html+=`</td><td>${e.beginChar}`,html+=`</td><td>${e.length}`,html+=`</td><td>${E(o.chars,e.beginChar,e.length)}`,html+="</td>",html+="</tr>\n"})),html+="</table>\n",html}(this.lines)}}}).call(this,r(20).Buffer)},2231:function(e,t,r){(function(e){const r=this,n=4294967292,o=4294967293,l=4294967294,c=4294967295,mask=[0,1,3,7,15,31,63,127,255,511,1023],d=["00","01","02","03","04","05","06","07","08","09","0A","0B","0C","0D","0E","0F","10","11","12","13","14","15","16","17","18","19","1A","1B","1C","1D","1E","1F","20","21","22","23","24","25","26","27","28","29","2A","2B","2C","2D","2E","2F","30","31","32","33","34","35","36","37","38","39","3A","3B","3C","3D","3E","3F","40","41","42","43","44","45","46","47","48","49","4A","4B","4C","4D","4E","4F","50","51","52","53","54","55","56","57","58","59","5A","5B","5C","5D","5E","5F","60","61","62","63","64","65","66","67","68","69","6A","6B","6C","6D","6E","6F","70","71","72","73","74","75","76","77","78","79","7A","7B","7C","7D","7E","7F","80","81","82","83","84","85","86","87","88","89","8A","8B","8C","8D","8E","8F","90","91","92","93","94","95","96","97","98","99","9A","9B","9C","9D","9E","9F","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","AA","AB","AC","AD","AE","AF","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","BA","BB","BC","BD","BE","BF","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","CA","CB","CC","CD","CE","CF","D0","D1","D2","D3","D4","D5","D6","D7","D8","D9","DA","DB","DC","DD","DE","DF","E0","E1","E2","E3","E4","E5","E6","E7","E8","E9","EA","EB","EC","ED","EE","EF","F0","F1","F2","F3","F4","F5","F6","F7","F8","F9","FA","FB","FC","FD","FE","FF"],h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".split(""),m=[];h.forEach((e=>{m.push(e.charCodeAt(0))})),t.utf8={encode(t){const r=[];return t.forEach((e=>{if(e>=0&&e<=127)r.push(e);else if(e<=2047)r.push(192+(e>>6&mask[5])),r.push(128+(e&mask[6]));else if(e<55296||e>57343&&e<=65535)r.push(224+(e>>12&mask[4])),r.push(128+(e>>6&mask[6])),r.push(128+(e&mask[6]));else{if(!(e>=65536&&e<=1114111))throw new RangeError(`utf8.encode: character out of range: char: ${e}`);{const u=e>>16&mask[5];r.push(240+(u>>2)),r.push(128+((u&mask[2])<<4)+(e>>12&mask[4])),r.push(128+(e>>6&mask[6])),r.push(128+(e&mask[6]))}}})),e.from(r)},decode(e,t){function r(e,t){if(128!=(192&t))return o;const r=((e&mask[5])<<6)+(t&mask[6]);return r<128?n:r}function d(e,t,r){if(128!=(192&r)||128!=(192&t))return o;const c=((e&mask[4])<<12)+((t&mask[6])<<6)+(r&mask[6]);return c<2048?n:c>=55296&&c<=57343?l:c}function h(e,t,r,c){if(128!=(192&c)||128!=(192&r)||128!=(192&t))return o;const d=(((e&mask[3])<<2)+(t>>4&mask[2])<<16)+((t&mask[4])<<12)+((r&mask[6])<<6)+(c&mask[6]);return d<65536?n:d>1114111?l:d}let m,f,y,x,k,E;const w=e.length;let i=t?3:0;const T=[];for(;i<w;){f=e[i],m=c;const t=!0;for(;t;){if(f>=0&&f<=127){m=f,E=1;break}if(y=i+1,y<w&&f>=194&&f<=223){m=r(f,e[y]),E=2;break}if(x=i+2,x<w&&f>=224&&f<=239){m=d(f,e[y],e[x]),E=3;break}if(k=i+3,k<w&&f>=240&&f<=244){m=h(f,e[y],e[x],e[k]),E=4;break}break}if(m>1114111){const e=`byte[${i}]`;if(m===c)throw new RangeError(`utf8.decode: ill-formed UTF8 byte sequence found at: ${e}`);if(m===o)throw new RangeError(`utf8.decode: illegal trailing byte found at: ${e}`);if(m===l)throw new RangeError(`utf8.decode: code point out of range found at: ${e}`);if(m===n)throw new RangeError(`utf8.decode: non-shortest form found at: ${e}`);throw new RangeError(`utf8.decode: unrecognized error found at: ${e}`)}T.push(m),i+=E}return T}},t.utf16be={encode(t){const r=[];let n,o,l;for(let i=0;i<t.length;i+=1)if(n=t[i],n>=0&&n<=55295||n>=57344&&n<=65535)r.push(n>>8&mask[8]),r.push(n&mask[8]);else{if(!(n>=65536&&n<=1114111))throw new RangeError(`utf16be.encode: UTF16BE value out of range: char[${i}]: ${n}`);l=n-65536,o=55296+(l>>10),l=56320+(l&mask[10]),r.push(o>>8&mask[8]),r.push(o&mask[8]),r.push(l>>8&mask[8]),r.push(l&mask[8])}return e.from(r)},decode(e,t){if(e.length%2>0)throw new RangeError(`utf16be.decode: data length must be even multiple of 2: length: ${e.length}`);const r=[],n=e.length;let o,l,c,d,h,m,i=t?2:0,f=0;for(;i<n;){const t=!0;for(;t;){if(c=i+1,c<n){if(h=(e[i]<<8)+e[c],h<55296||h>57343){o=h,l=2;break}if(d=i+3,d<n&&(m=(e[i+2]<<8)+e[d],h<=56319&&m>=56320&&m<=57343)){o=65536+(h-55296<<10)+(m-56320),l=4;break}}throw new RangeError(`utf16be.decode: ill-formed UTF16BE byte sequence found: byte[${i}]`)}r[f++]=o,i+=l}return r}},t.utf16le={encode(t){const r=[];let n,o,l;for(let i=0;i<t.length;i+=1)if(n=t[i],n>=0&&n<=55295||n>=57344&&n<=65535)r.push(n&mask[8]),r.push(n>>8&mask[8]);else{if(!(n>=65536&&n<=1114111))throw new RangeError(`utf16le.encode: UTF16LE value out of range: char[${i}]: ${n}`);l=n-65536,o=55296+(l>>10),l=56320+(l&mask[10]),r.push(o&mask[8]),r.push(o>>8&mask[8]),r.push(l&mask[8]),r.push(l>>8&mask[8])}return e.from(r)},decode(e,t){if(e.length%2>0)throw new RangeError(`utf16le.decode: data length must be even multiple of 2: length: ${e.length}`);const r=[],n=e.length;let o,l,c,d,h,m,i=t?2:0,f=0;for(;i<n;){const t=!0;for(;t;){if(c=i+1,c<n){if(h=(e[c]<<8)+e[i],h<55296||h>57343){o=h,l=2;break}if(d=i+3,d<n&&(m=(e[d]<<8)+e[i+2],h<=56319&&m>=56320&&m<=57343)){o=65536+(h-55296<<10)+(m-56320),l=4;break}}throw new RangeError(`utf16le.decode: ill-formed UTF16LE byte sequence found: byte[${i}]`)}r[f++]=o,i+=l}return r}},t.utf32be={encode(t){const r=e.alloc(4*t.length);let i=0;return t.forEach((e=>{if(e>=55296&&e<=57343||e>1114111)throw new RangeError(`utf32be.encode: UTF32BE character code out of range: char[${i/4}]: ${e}`);r[i++]=e>>24&mask[8],r[i++]=e>>16&mask[8],r[i++]=e>>8&mask[8],r[i++]=e&mask[8]})),r},decode(e,t){if(e.length%4>0)throw new RangeError(`utf32be.decode: UTF32BE byte length must be even multiple of 4: length: ${e.length}`);const r=[];let i=t?4:0;for(;i<e.length;i+=4){const t=(e[i]<<24)+(e[i+1]<<16)+(e[i+2]<<8)+e[i+3];if(t>=55296&&t<=57343||t>1114111)throw new RangeError(`utf32be.decode: UTF32BE character code out of range: char[${i/4}]: ${t}`);r.push(t)}return r}},t.utf32le={encode(t){const r=e.alloc(4*t.length);let i=0;return t.forEach((e=>{if(e>=55296&&e<=57343||e>1114111)throw new RangeError(`utf32le.encode: UTF32LE character code out of range: char[${i/4}]: ${e}`);r[i++]=e&mask[8],r[i++]=e>>8&mask[8],r[i++]=e>>16&mask[8],r[i++]=e>>24&mask[8]})),r},decode(e,t){if(e.length%4>0)throw new RangeError(`utf32be.decode: UTF32LE byte length must be even multiple of 4: length: ${e.length}`);const r=[];let i=t?4:0;for(;i<e.length;i+=4){const t=(e[i+3]<<24)+(e[i+2]<<16)+(e[i+1]<<8)+e[i];if(t>=55296&&t<=57343||t>1114111)throw new RangeError(`utf32le.encode: UTF32LE character code out of range: char[${i/4}]: ${t}`);r.push(t)}return r}},t.uint7={encode(t){const r=e.alloc(t.length);for(let i=0;i<t.length;i+=1){if(t[i]>127)throw new RangeError(`uint7.encode: UINT7 character code out of range: char[${i}]: ${t[i]}`);r[i]=t[i]}return r},decode(e){const t=[];for(let i=0;i<e.length;i+=1){if(e[i]>127)throw new RangeError(`uint7.decode: UINT7 character code out of range: byte[${i}]: ${e[i]}`);t[i]=e[i]}return t}},t.uint8={encode(t){const r=e.alloc(t.length);for(let i=0;i<t.length;i+=1){if(t[i]>255)throw new RangeError(`uint8.encode: UINT8 character code out of range: char[${i}]: ${t[i]}`);r[i]=t[i]}return r},decode(e){const t=[];for(let i=0;i<e.length;i+=1)t[i]=e[i];return t}},t.uint16be={encode(t){const r=e.alloc(2*t.length);let i=0;return t.forEach((e=>{if(e>65535)throw new RangeError(`uint16be.encode: UINT16BE character code out of range: char[${i/2}]: ${e}`);r[i++]=e>>8&mask[8],r[i++]=e&mask[8]})),r},decode(e){if(e.length%2>0)throw new RangeError(`uint16be.decode: UINT16BE byte length must be even multiple of 2: length: ${e.length}`);const t=[];for(let i=0;i<e.length;i+=2)t.push((e[i]<<8)+e[i+1]);return t}},t.uint16le={encode(t){const r=e.alloc(2*t.length);let i=0;return t.forEach((e=>{if(e>65535)throw new RangeError(`uint16le.encode: UINT16LE character code out of range: char[${i/2}]: ${e}`);r[i++]=e&mask[8],r[i++]=e>>8&mask[8]})),r},decode(e){if(e.length%2>0)throw new RangeError(`uint16le.decode: UINT16LE byte length must be even multiple of 2: length: ${e.length}`);const t=[];for(let i=0;i<e.length;i+=2)t.push((e[i+1]<<8)+e[i]);return t}},t.uint32be={encode(t){const r=e.alloc(4*t.length);let i=0;return t.forEach((e=>{r[i++]=e>>24&mask[8],r[i++]=e>>16&mask[8],r[i++]=e>>8&mask[8],r[i++]=e&mask[8]})),r},decode(e){if(e.length%4>0)throw new RangeError(`uint32be.decode: UINT32BE byte length must be even multiple of 4: length: ${e.length}`);const t=[];for(let i=0;i<e.length;i+=4)t.push((e[i]<<24)+(e[i+1]<<16)+(e[i+2]<<8)+e[i+3]);return t}},t.uint32le={encode(t){const r=e.alloc(4*t.length);let i=0;return t.forEach((e=>{r[i++]=e&mask[8],r[i++]=e>>8&mask[8],r[i++]=e>>16&mask[8],r[i++]=e>>24&mask[8]})),r},decode(e){if(e.length%4>0)throw new RangeError(`uint32le.decode: UINT32LE byte length must be even multiple of 4: length: ${e.length}`);const t=[];for(let i=0;i<e.length;i+=4)t.push((e[i+3]<<24)+(e[i+2]<<16)+(e[i+1]<<8)+e[i]);return t}},t.string={encode:e=>r.utf16le.encode(e).toString("utf16le"),decode:t=>r.utf16le.decode(e.from(t,"utf16le"),0)},t.escaped={encode(t){const r=[];for(let i=0;i<t.length;i+=1){const n=t[i];if(96===n)r.push(n),r.push(n);else if(10===n)r.push(n);else if(n>=32&&n<=126)r.push(n);else{let t="";if(n>=0&&n<=31)t+=`\`x${d[n]}`;else if(n>=127&&n<=255)t+=`\`x${d[n]}`;else if(n>=256&&n<=65535)t+=`\`u${d[n>>8&mask[8]]}${d[n&mask[8]]}`;else{if(!(n>=65536&&n<=4294967295))throw new Error("escape.encode(char): char > 0xffffffff not allowed");{t+="`u{";const e=n>>24&mask[8];e>0&&(t+=d[e]),t+=`${d[n>>16&mask[8]]+d[n>>8&mask[8]]+d[n&mask[8]]}}`}}e.from(t).forEach((b=>{r.push(b)}))}}return e.from(r)},decode(e){function t(e){return e>=48&&e<=57||e>=65&&e<=70||e>=97&&e<=102}function r(i,e,r){const n={char:null,nexti:i+2,error:!0};if(i+1<e&&t(r[i])&&t(r[i+1])){const e=String.fromCodePoint(r[i],r[i+1]);n.char=parseInt(e,16),Number.isNaN(n.char)||(n.error=!1)}return n}function n(i,e,r){const n={char:null,nexti:i+4,error:!0};if(i+3<e&&t(r[i])&&t(r[i+1])&&t(r[i+2])&&t(r[i+3])){const e=String.fromCodePoint(r[i],r[i+1],r[i+2],r[i+3]);n.char=parseInt(e,16),Number.isNaN(n.char)||(n.error=!1)}return n}function o(i,e,r){const n={char:null,nexti:i+4,error:!0};let o="";for(;i<e&&t(r[i]);)o+=String.fromCodePoint(r[i]),i+=1;return n.char=parseInt(o,16),125!==r[i]||Number.isNaN(n.char)||(n.error=!1),n.nexti=i+1,n}const l=[],c=e.length;let d,h,m,i=0;for(;i<c;){const t=!0;for(;t;){if(m=!0,96!==e[i]){l.push(e[i]),i+=1,m=!1;break}if(d=i+1,d>=c)break;if(96===e[d]){l.push(96),i+=2,m=!1;break}if(120===e[d]){if(h=r(d+1,c,e),h.error)break;l.push(h.char),i=h.nexti,m=!1;break}if(117===e[d]){if(123===e[d+1]){if(h=o(d+2,c,e),h.error)break;l.push(h.char),i=h.nexti,m=!1;break}if(h=n(d+1,c,e),h.error)break;l.push(h.char),i=h.nexti,m=!1;break}break}if(m)throw new Error(`escaped.decode: ill-formed escape sequence at buf[${i}]`)}return l}};const f=10;t.lineEnds={crlf(e){const t=[];let i=0;for(;i<e.length;)switch(e[i]){case 13:i+1<e.length&&e[i+1]===f?i+=2:i+=1,t.push(13),t.push(f);break;case f:t.push(13),t.push(f),i+=1;break;default:t.push(e[i]),i+=1}return t.length>0&&t[t.length-1]!==f&&(t.push(13),t.push(f)),t},lf(e){const t=[];let i=0;for(;i<e.length;)switch(e[i]){case 13:i+1<e.length&&e[i+1]===f?i+=2:i+=1,t.push(f);break;case f:t.push(f),i+=1;break;default:t.push(e[i]),i+=1}return t.length>0&&t[t.length-1]!==f&&t.push(f),t}},t.base64={encode(t){if(0===t.length)return e.alloc(0);let i,r,n,o=t.length%3;o=o>0?3-o:0;let l=(t.length+o)/3;const c=e.alloc(4*l);o>0&&(l-=1),i=0,r=0;for(let u=0;u<l;u+=1)n=t[i++]<<16,n+=t[i++]<<8,n+=t[i++],c[r++]=m[n>>18&mask[6]],c[r++]=m[n>>12&mask[6]],c[r++]=m[n>>6&mask[6]],c[r++]=m[n&mask[6]];return 0===o?c:1===o?(n=t[i++]<<16,n+=t[i]<<8,c[r++]=m[n>>18&mask[6]],c[r++]=m[n>>12&mask[6]],c[r++]=m[n>>6&mask[6]],c[r]=m[64],c):2===o?(n=t[i]<<16,c[r++]=m[n>>18&mask[6]],c[r++]=m[n>>12&mask[6]],c[r++]=m[64],c[r]=m[64],c):void 0},decode(t){if(0===t.length)return e.alloc(0);const r=function(t){const r=[];let n=0;for(let i=0;i<t.length;i+=1){const e=t[i],o=!0;for(;o&&32!==e&&9!==e&&10!==e&&13!==e;){if(e>=65&&e<=90){r.push(e-65);break}if(e>=97&&e<=122){r.push(e-71);break}if(e>=48&&e<=57){r.push(e+4);break}if(43===e){r.push(62);break}if(47===e){r.push(63);break}if(61===e){r.push(64),n+=1;break}throw new RangeError(`base64.decode: invalid character buf[${i}]: ${e}`)}}if(r.length%4>0)throw new RangeError(`base64.decode: string length not integral multiple of 4: ${r.length}`);switch(n){case 0:break;case 1:if(64!==r[r.length-1])throw new RangeError("base64.decode: one tail character found: not last character");break;case 2:if(64!==r[r.length-1]||64!==r[r.length-2])throw new RangeError("base64.decode: two tail characters found: not last characters");break;default:throw new RangeError(`base64.decode: more than two tail characters found: ${n}`)}return{tail:n,buf:e.from(r)}}(t),{tail:n}=r,o=r.buf;let i,l,c,d=o.length/4;const h=e.alloc(3*d-n);n>0&&(d-=1),l=0,i=0;for(let u=0;u<d;u+=1)c=o[i++]<<18,c+=o[i++]<<12,c+=o[i++]<<6,c+=o[i++],h[l++]=c>>16&mask[8],h[l++]=c>>8&mask[8],h[l++]=c&mask[8];return 1===n&&(c=o[i++]<<18,c+=o[i++]<<12,c+=o[i]<<6,h[l++]=c>>16&mask[8],h[l]=c>>8&mask[8]),2===n&&(c=o[i++]<<18,c+=o[i++]<<12,h[l]=c>>16&mask[8]),h},toString(e){if(e.length%4>0)throw new RangeError(`base64.toString: input buffer length not multiple of 4: ${e.length}`);let t="",r=0;function n(e,n,o,l){switch(r){case 76:t+=`\r\n${e}${n}${o}${l}`,r=4;break;case 75:t+=`${e}\r\n${n}${o}${l}`,r=3;break;case 74:t+=`${e+n}\r\n${o}${l}`,r=2;break;case 73:t+=`${e+n+o}\r\n${l}`,r=1;break;default:t+=e+n+o+l,r+=4}}for(let i=0;i<e.length;i+=4){for(let t=i;t<i+4;t+=1)if(!((o=e[t])>=65&&o<=90||o>=97&&o<=122||o>=48&&o<=57||43===o||47===o||61===o))throw new RangeError(`base64.toString: buf[${t}]: ${e[t]} : not valid base64 character code`);n(String.fromCharCode(e[i]),String.fromCharCode(e[i+1]),String.fromCharCode(e[i+2]),String.fromCharCode(e[i+3]))}var o;return t}}}).call(this,r(20).Buffer)},2235:function(e,t,r){e.exports=function(e,t,n,o){const l=r(409),c=new(r(2236)),{callbacks:d}=r(2237),h=[],m=new l.parser;if(m.ast=new l.ast,m.ast.callbacks=d,o){if("traceObject"!==o.traceObject)throw new TypeError("scanner.js: trace argument is not a trace object");m.trace=o}if(!0!==m.parse(c,"file",e).success)return void t.push({line:0,char:0,msg:"syntax analysis error analyzing input SABNF grammar"});const data={lines:h,lineNo:0,errors:t,strict:!!n};return m.ast.translate(data),h}},2236:function(e,t){e.exports=function(){this.grammarObject="grammarObject",this.rules=[],this.rules[0]={name:"file",lower:"file",index:0,isBkr:!1},this.rules[1]={name:"line",lower:"line",index:1,isBkr:!1},this.rules[2]={name:"line-text",lower:"line-text",index:2,isBkr:!1},this.rules[3]={name:"last-line",lower:"last-line",index:3,isBkr:!1},this.rules[4]={name:"valid",lower:"valid",index:4,isBkr:!1},this.rules[5]={name:"invalid",lower:"invalid",index:5,isBkr:!1},this.rules[6]={name:"end",lower:"end",index:6,isBkr:!1},this.rules[7]={name:"CRLF",lower:"crlf",index:7,isBkr:!1},this.rules[8]={name:"LF",lower:"lf",index:8,isBkr:!1},this.rules[9]={name:"CR",lower:"cr",index:9,isBkr:!1},this.udts=[],this.rules[0].opcodes=[],this.rules[0].opcodes[0]={type:2,children:[1,3]},this.rules[0].opcodes[1]={type:3,min:0,max:1/0},this.rules[0].opcodes[2]={type:4,index:1},this.rules[0].opcodes[3]={type:3,min:0,max:1},this.rules[0].opcodes[4]={type:4,index:3},this.rules[1].opcodes=[],this.rules[1].opcodes[0]={type:2,children:[1,2]},this.rules[1].opcodes[1]={type:4,index:2},this.rules[1].opcodes[2]={type:4,index:6},this.rules[2].opcodes=[],this.rules[2].opcodes[0]={type:3,min:0,max:1/0},this.rules[2].opcodes[1]={type:1,children:[2,3]},this.rules[2].opcodes[2]={type:4,index:4},this.rules[2].opcodes[3]={type:4,index:5},this.rules[3].opcodes=[],this.rules[3].opcodes[0]={type:3,min:1,max:1/0},this.rules[3].opcodes[1]={type:1,children:[2,3]},this.rules[3].opcodes[2]={type:4,index:4},this.rules[3].opcodes[3]={type:4,index:5},this.rules[4].opcodes=[],this.rules[4].opcodes[0]={type:1,children:[1,2]},this.rules[4].opcodes[1]={type:5,min:32,max:126},this.rules[4].opcodes[2]={type:6,string:[9]},this.rules[5].opcodes=[],this.rules[5].opcodes[0]={type:1,children:[1,2,3,4]},this.rules[5].opcodes[1]={type:5,min:0,max:8},this.rules[5].opcodes[2]={type:5,min:11,max:12},this.rules[5].opcodes[3]={type:5,min:14,max:31},this.rules[5].opcodes[4]={type:5,min:127,max:4294967295},this.rules[6].opcodes=[],this.rules[6].opcodes[0]={type:1,children:[1,2,3]},this.rules[6].opcodes[1]={type:4,index:7},this.rules[6].opcodes[2]={type:4,index:8},this.rules[6].opcodes[3]={type:4,index:9},this.rules[7].opcodes=[],this.rules[7].opcodes[0]={type:6,string:[13,10]},this.rules[8].opcodes=[],this.rules[8].opcodes[0]={type:6,string:[10]},this.rules[9].opcodes=[],this.rules[9].opcodes[0]={type:6,string:[13]},this.toString=function(){let e="";return e+="file = *line [last-line]\n",e+="line = line-text end\n",e+="line-text = *(valid/invalid)\n",e+="last-line = 1*(valid/invalid)\n",e+="valid = %d32-126 / %d9\n",e+="invalid = %d0-8 / %d11-12 /%d14-31 / %x7f-ffffffff\n",e+="end = CRLF / LF / CR\n",e+="CRLF = %d13.10\n",e+="LF = %d10\n",e+="CR = %d13\n","file = *line [last-line]\nline = line-text end\nline-text = *(valid/invalid)\nlast-line = 1*(valid/invalid)\nvalid = %d32-126 / %d9\ninvalid = %d0-8 / %d11-12 /%d14-31 / %x7f-ffffffff\nend = CRLF / LF / CR\nCRLF = %d13.10\nLF = %d10\nCR = %d13\n"}}},2237:function(e,t,r){const n=r(247),o=r(410);const l=[];l.line=function(e,t,r,o,data){return e===n.SEM_PRE?(data.endLength=0,data.textLength=0,data.invalidCount=0):data.lines.push({lineNo:data.lines.length,beginChar:r,length:o,textLength:data.textLength,endType:data.endType,invalidChars:data.invalidCount}),n.SEM_OK},l["line-text"]=function(e,t,r,o,data){return e===n.SEM_PRE&&(data.textLength=o),n.SEM_OK},l["last-line"]=function(e,t,r,o,data){return e===n.SEM_PRE?(data.endLength=0,data.textLength=0,data.invalidCount=0):data.strict?(data.lines.push({lineNo:data.lines.length,beginChar:r,length:o,textLength:o,endType:"none",invalidChars:data.invalidCount}),data.errors.push({line:data.lineNo,char:r+o,msg:"no line end on last line - strict ABNF specifies CRLF(\\r\\n, \\x0D\\x0A)"})):(t.push(10),data.lines.push({lineNo:data.lines.length,beginChar:r,length:o+1,textLength:o,endType:"LF",invalidChars:data.invalidCount})),n.SEM_OK},l.invalid=function(e,t,r,l,data){return e===n.SEM_PRE&&data.errors.push({line:data.lineNo,char:r,msg:`invalid character found '\\x${o.charToHex(t[r])}'`}),n.SEM_OK},l.end=function(e,t,r,o,data){return e===n.SEM_POST&&(data.lineNo+=1),n.SEM_OK},l.lf=function(e,t,r,o,data){return e===n.SEM_PRE&&(data.endType="LF",data.strict&&data.errors.push({line:data.lineNo,char:r,msg:"line end character LF(\\n, \\x0A) - strict ABNF specifies CRLF(\\r\\n, \\x0D\\x0A)"})),n.SEM_OK},l.cr=function(e,t,r,o,data){return e===n.SEM_PRE&&(data.endType="CR",data.strict&&data.errors.push({line:data.lineNo,char:r,msg:"line end character CR(\\r, \\x0D) - strict ABNF specifies CRLF(\\r\\n, \\x0D\\x0A)"})),n.SEM_OK},l.crlf=function(e,t,r,o,data){return e===n.SEM_PRE&&(data.endType="CRLF"),n.SEM_OK},t.callbacks=l},2238:function(e,t,r){e.exports=function(){const e=r(409),t=e.ids,n=new(r(2239)),o=new(r(2240)),l=new(r(2241)),c=new e.parser;c.ast=new e.ast,c.callbacks=n.callbacks,c.ast.callbacks=o.callbacks;const d=function(e,t,r){if(t<0||t>=r)return-1;for(let i=0;i<e.length;i+=1)if(t>=e[i].beginChar&&t<e[i].beginChar+e[i].length)return i;return-1},h=function(map,e){let t=-1;if(e<map.length)for(let i=e;i<map.length;i+=1)if(null!==map[i]){t=map[i];break}return t};this.syntax=function(e,t,r,n,o){if(o){if("traceObject"!==o.traceObject)throw new TypeError("parser: trace argument is not a trace object");c.trace=o}const data={};data.errors=r,data.strict=!!n,data.lines=t,data.findLine=d,data.charsLength=e.length,data.ruleCount=0;c.parse(l,"file",e,data).success||r.push({line:0,char:0,msg:"syntax analysis of input grammar failed"})},this.semantic=function(e,r,n){const data={};return data.errors=n,data.lines=r,data.findLine=d,data.charsLength=e.length,c.ast.translate(data),n.length?null:(data.rules.forEach((e=>{const r=[],map=[];let n=0;e.opcodes.forEach((e=>{e.type===t.ALT&&1===e.children.length||e.type===t.CAT&&1===e.children.length||e.type===t.REP&&1===e.min&&1===e.max?map.push(null):(map.push(n),r.push(e),n+=1)})),map.push(n),r.forEach((e=>{if(e.type===t.ALT||e.type===t.CAT)for(let i=0;i<e.children.length;i+=1)e.children[i]=h(map,e.children[i])})),e.opcodes=r})),{rules:data.rules,udts:data.udts,lineMap:data.rulesLineMap})},this.generateSource=function(e,r,n,o,l){let i,c,d,source="",h=0,m=1/0,f=0;const y=[],x=[];let k=0,E=0,w=0,T=0,C=0,A=0,O=0,S=0,B=0,$=0,M=0,R=0,N=0,L=0,v=0;n.forEach((e=>{y.push(e.lower),h+=e.opcodes.length,e.opcodes.forEach((e=>{switch(e.type){case t.ALT:k+=1;break;case t.CAT:E+=1;break;case t.RNM:w+=1;break;case t.UDT:T+=1;break;case t.REP:C+=1;break;case t.AND:A+=1;break;case t.NOT:O+=1;break;case t.BKA:R+=1;break;case t.BKN:N+=1;break;case t.BKR:M+=1;break;case t.ABG:L+=1;break;case t.AEN:v+=1;break;case t.TLS:for(S+=1,i=0;i<e.string.length;i+=1)e.string[i]<m&&(m=e.string[i]),e.string[i]>f&&(f=e.string[i]);break;case t.TBS:for(B+=1,i=0;i<e.string.length;i+=1)e.string[i]<m&&(m=e.string[i]),e.string[i]>f&&(f=e.string[i]);break;case t.TRG:$+=1,e.min<m&&(m=e.min),e.max>f&&(f=e.max);break;default:throw new Error("generateSource: unrecognized opcode")}}))})),y.sort(),o.length>0&&(o.forEach((e=>{x.push(e.lower)})),x.sort());let _,F="module.exports";return l&&"string"==typeof l&&(F=`let ${l}`),source+="// copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved<br>\n",source+="//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>\n",source+="//\n",source+="// Generated by apg-js, Version 4.0.0 [apg-js](https://github.com/ldthomas/apg-js)\n",source+=`${F} = function grammar(){\n`,source+="  // ```\n",source+="  // SUMMARY\n",source+=`  //      rules = ${n.length}\n`,source+=`  //       udts = ${o.length}\n`,source+=`  //    opcodes = ${h}\n`,source+="  //        ---   ABNF original opcodes\n",source+=`  //        ALT = ${k}\n`,source+=`  //        CAT = ${E}\n`,source+=`  //        REP = ${C}\n`,source+=`  //        RNM = ${w}\n`,source+=`  //        TLS = ${S}\n`,source+=`  //        TBS = ${B}\n`,source+=`  //        TRG = ${$}\n`,source+="  //        ---   SABNF superset opcodes\n",source+=`  //        UDT = ${T}\n`,source+=`  //        AND = ${A}\n`,source+=`  //        NOT = ${O}\n`,source+=`  //        BKA = ${R}\n`,source+=`  //        BKN = ${N}\n`,source+=`  //        BKR = ${M}\n`,source+=`  //        ABG = ${L}\n`,source+=`  //        AEN = ${v}\n`,source+="  // characters = [",source+=S+B+$===0?" none defined ]":`${m} - ${f}]`,T>0&&(source+=" + user defined"),source+="\n",source+="  // ```\n",source+="  /* OBJECT IDENTIFIER (for internal parser use) */\n",source+="  this.grammarObject = 'grammarObject';\n",source+="\n",source+="  /* RULES */\n",source+="  this.rules = [];\n",n.forEach(((e,t)=>{let r="  this.rules[";r+=t,r+="] = {name: '",r+=e.name,r+="', lower: '",r+=e.lower,r+="', index: ",r+=e.index,r+=", isBkr: ",r+=e.isBkr,r+="};\n",source+=r})),source+="\n",source+="  /* UDTS */\n",source+="  this.udts = [];\n",o.length>0&&o.forEach(((e,t)=>{let r="  this.udts[";r+=t,r+="] = {name: '",r+=e.name,r+="', lower: '",r+=e.lower,r+="', index: ",r+=e.index,r+=", empty: ",r+=e.empty,r+=", isBkr: ",r+=e.isBkr,r+="};\n",source+=r})),source+="\n",source+="  /* OPCODES */\n",n.forEach(((e,r)=>{r>0&&(source+="\n"),source+=`  /* ${e.name} */\n`,source+=`  this.rules[${r}].opcodes = [];\n`,e.opcodes.forEach(((e,l)=>{let h;switch(e.type){case t.ALT:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, children: [${e.children.toString()}]};// ALT\n`;break;case t.CAT:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, children: [${e.children.toString()}]};// CAT\n`;break;case t.RNM:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, index: ${e.index}};// RNM(${n[e.index].name})\n`;break;case t.BKR:e.index>=n.length?(c=o[e.index-n.length].name,d=o[e.index-n.length].lower):(c=n[e.index].name,d=n[e.index].lower),h="%i",e.bkrCase===t.BKR_MODE_CS&&(h="%s"),e.bkrMode===t.BKR_MODE_UM?h+="%u":h+="%p",c=h+c,source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, index: ${e.index}, lower: '${d}', bkrCase: ${e.bkrCase}, bkrMode: ${e.bkrMode}};// BKR(\\${c})\n`;break;case t.UDT:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, empty: ${e.empty}, index: ${e.index}};// UDT(${o[e.index].name})\n`;break;case t.REP:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, min: ${e.min}, max: ${e.max}};// REP\n`;break;case t.AND:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}};// AND\n`;break;case t.NOT:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}};// NOT\n`;break;case t.ABG:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}};// ABG(%^)\n`;break;case t.AEN:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}};// AEN(%$)\n`;break;case t.BKA:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}};// BKA\n`;break;case t.BKN:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}};// BKN\n`;break;case t.TLS:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, string: [${e.string.toString()}]};// TLS\n`;break;case t.TBS:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, string: [${e.string.toString()}]};// TBS\n`;break;case t.TRG:source+=`  this.rules[${r}].opcodes[${l}] = {type: ${e.type}, min: ${e.min}, max: ${e.max}};// TRG\n`;break;default:throw new Error("parser.js: ~143: unrecognized opcode")}}))})),source+="\n",source+="  // The `toString()` function will display the original grammar file(s) that produced these opcodes.\n",source+="  this.toString = function toString(){\n",source+='    let str = "";\n',r.forEach((line=>{const t=line.beginChar+line.length;_="",source+='    str += "';for(let r=line.beginChar;r<t;r+=1){switch(e[r]){case 9:_=" ";break;case 10:_="\\n";break;case 13:_="\\r";break;case 34:_='\\"';break;case 92:_="\\\\";break;default:_=String.fromCharCode(e[r])}source+=_}source+='";\n'})),source+="    return str;\n",source+="  }\n",source+="}\n",source},this.generateObject=function(e,t,r){const n={},o=[],l=[],c=e.slice(0);return n.grammarObject="grammarObject",t.forEach((e=>{o.push(e.lower)})),o.sort(),r.length>0&&(r.forEach((e=>{l.push(e.lower)})),l.sort()),n.callbacks=[],o.forEach((e=>{n.callbacks[e]=!1})),r.length>0&&l.forEach((e=>{n.callbacks[e]=!1})),n.rules=t,n.udts=r,n.toString=function(){return c},n}}},2239:function(e,t,r){e.exports=function(){const e="syntax-callbacks.js: ",t=r(409),n=t.ids;let o;this.callbacks=[],this.callbacks.andop=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.strict&&data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"AND operator(&) found - strict ABNF specified."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.basicelementerr=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:!1===o.basicError&&data.errors.push({line:data.findLine(data.lines,l,data.charsLength),char:l,msg:"Unrecognized SABNF element."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.clsclose=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:break;case n.NOMATCH:data.errors.push({line:data.findLine(data.lines,o.clsOpen),char:o.clsOpen,msg:"Case-sensitive literal string('...') opened but not closed."}),o.clsOpen=null,o.basicError=!0;break;case n.MATCH:data.strict&&data.errors.push({line:data.findLine(data.lines,o.clsOpen),char:o.clsOpen,msg:"Case-sensitive string operator('...') found - strict ABNF specified."}),o.clsOpen=null;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.clsopen=function(t,r,l){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:o.clsOpen=l;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.clsstring=function(t,r,o,data){switch(t.state){case n.ACTIVE:data.stringTabChar=!1;break;case n.EMPTY:case n.NOMATCH:break;case n.MATCH:!1!==data.stringTabChar&&data.errors.push({line:data.findLine(data.lines,data.stringTabChar),char:data.stringTabChar,msg:"Tab character (\\t, x09) not allowed in literal string."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.definedaserror=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"Expected '=' or '=/'. Not found."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.file=function(t,r,o,data){switch(t.state){case n.ACTIVE:data.altStack=[],data.repCount=0;break;case n.EMPTY:data.errors.push({line:0,char:0,msg:"grammar file is empty"});break;case n.MATCH:0===data.ruleCount&&data.errors.push({line:0,char:0,msg:"no rules defined"});break;case n.NOMATCH:throw new Error(`${e}synFile: grammar file NOMATCH: design error: should never happen.`);default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.groupclose=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:break;case n.NOMATCH:data.errors.push({line:data.findLine(data.lines,o.groupOpen),char:o.groupOpen,msg:'Group "(...)" opened but not closed.'}),o=data.altStack.pop(),o.groupError=!0;break;case n.MATCH:o=data.altStack.pop();break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.groupopen=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:o={groupOpen:l,groupError:!1,optionOpen:null,optionError:!1,tlsOpen:null,clsOpen:null,prosValOpen:null,basicError:!1},data.altStack.push(o);break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.lineenderror=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"Unrecognized grammar element or characters."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.lineend=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:if(1===t.phraseLength&&data.strict){const e=13===r[o]?"CR":"LF";data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:`Line end '${e}' found - strict ABNF specified, only CRLF allowed.`})}break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.notop=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.strict&&data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"NOT operator(!) found - strict ABNF specified."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.optionclose=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:break;case n.NOMATCH:data.errors.push({line:data.findLine(data.lines,o.optionOpen),char:o.optionOpen,msg:'Option "[...]" opened but not closed.'}),o=data.altStack.pop(),o.optionError=!0;break;case n.MATCH:o=data.altStack.pop();break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.optionopen=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:o={groupOpen:null,groupError:!1,optionOpen:l,optionError:!1,tlsOpen:null,clsOpen:null,prosValOpen:null,basicError:!1},data.altStack.push(o);break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.prosvalclose=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:break;case n.NOMATCH:data.errors.push({line:data.findLine(data.lines,o.prosValOpen),char:o.prosValOpen,msg:"Prose value operator(<...>) opened but not closed."}),o.basicError=!0,o.prosValOpen=null;break;case n.MATCH:data.errors.push({line:data.findLine(data.lines,o.prosValOpen),char:o.prosValOpen,msg:"Prose value operator(<...>) found. The ABNF syntax is valid, but a parser cannot be generated from this grammar."}),o.prosValOpen=null;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.prosvalopen=function(t,r,l){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:o.prosValOpen=l;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.prosvalstring=function(t,r,o,data){switch(t.state){case n.ACTIVE:data.stringTabChar=!1;break;case n.EMPTY:case n.NOMATCH:break;case n.MATCH:!1!==data.stringTabChar&&data.errors.push({line:data.findLine(data.lines,data.stringTabChar),char:data.stringTabChar,msg:"Tab character (\\t, x09) not allowed in prose value string."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.repetition=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:break;case n.NOMATCH:case n.MATCH:data.repCount+=1;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.rule=function(t,r,l,data){switch(t.state){case n.ACTIVE:data.altStack.length=0,o={groupOpen:null,groupError:!1,optionOpen:null,optionError:!1,tlsOpen:null,clsOpen:null,prosValOpen:null,basicError:!1},data.altStack.push(o);break;case n.EMPTY:throw new Error(`${e}synRule: EMPTY: rule cannot be empty`);case n.NOMATCH:break;case n.MATCH:data.ruleCount+=1;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.ruleerror=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"Unrecognized SABNF line. Invalid rule, comment or blank line."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.rulenameerror=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"Rule names must be alphanum and begin with alphabetic character."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.stringtab=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.stringTabChar=o;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.tlsclose=function(t,r,l,data){switch(t.state){case n.ACTIVE:case n.EMPTY:break;case n.NOMATCH:data.errors.push({line:data.findLine(data.lines,o.tlsOpen),char:o.tlsOpen,msg:'Case-insensitive literal string("...") opened but not closed.'}),o.basicError=!0,o.tlsOpen=null;break;case n.MATCH:o.tlsOpen=null;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.tlsopen=function(t,r,l){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:o.tlsOpen=l;break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.tlsstring=function(t,r,o,data){switch(t.state){case n.ACTIVE:data.stringTabChar=!1;break;case n.EMPTY:case n.NOMATCH:break;case n.MATCH:!1!==data.stringTabChar&&data.errors.push({line:data.findLine(data.lines,data.stringTabChar),char:data.stringTabChar,msg:"Tab character (\\t, x09) not allowed in literal string (see 'quoted-string' definition, RFC 7405.)"});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.udtop=function(r,o,l,data){switch(r.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:if(data.strict){const e=t.utils.charsToString(o,l,r.phraseLength);data.errors.push({line:data.findLine(data.lines,l,data.charsLength),char:l,msg:`UDT operator found(${e}) - strict ABNF specified.`})}break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.bkaop=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.strict&&data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"Positive look-behind operator(&&) found - strict ABNF specified."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.bknop=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.strict&&data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"Negative look-behind operator(!!) found - strict ABNF specified."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.bkrop=function(r,o,l,data){switch(r.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:if(data.strict){const e=t.utils.charsToString(o,l,r.phraseLength);data.errors.push({line:data.findLine(data.lines,l,data.charsLength),char:l,msg:`Back reference operator(${e}) found - strict ABNF specified.`})}break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.abgop=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.strict&&data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"Beginning of string anchor(%^) found - strict ABNF specified."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}},this.callbacks.aenop=function(t,r,o,data){switch(t.state){case n.ACTIVE:case n.EMPTY:case n.NOMATCH:break;case n.MATCH:data.strict&&data.errors.push({line:data.findLine(data.lines,o,data.charsLength),char:o,msg:"End of string anchor(%$) found - strict ABNF specified."});break;default:throw new Error(`${e}synFile: unrecognized case.`)}}}},2240:function(e,t,r){e.exports=function(){const e=r(409),t=e.ids,n=function(){this.names=[],this.add=function(e){let t=-1;return-1===this.get(e)&&(t={name:e,lower:e.toLowerCase(),index:this.names.length},this.names.push(t)),t},this.get=function(e){let t=-1;const r=e.toLowerCase();for(let i=0;i<this.names.length;i+=1)if(this.names[i].lower===r){t=this.names[i];break}return t}},o=function(e,t,r){let n=0;for(let i=t;i<t+r;i+=1)n=10*n+e[i]-48;return n},l=function(e,t,r){let n=0;for(let i=t;i<t+r;i+=1)n=2*n+e[i]-48;return n},c=function(e,t,r){let n=0;for(let i=t;i<t+r;i+=1){let t=e[i];if(t>=48&&t<=57)t-=48;else if(t>=65&&t<=70)t-=55;else{if(!(t>=97&&t<=102))throw new Error("hexnum out of range");t-=87}n=16*n+t}return n};this.callbacks=[],this.callbacks.abgop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.opcodes.push({type:t.ABG}),l},this.callbacks.aenop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.opcodes.push({type:t.AEN}),l},this.callbacks.alternation=function(e,r,n,o,data){let l=t.SEM_OK;if(e===t.SEM_PRE){const e=!0;for(;e;){if(null===data.definedas){l=t.SEM_SKIP;break}if(null===data.topStack){if("="===data.definedas){data.topStack={alt:{type:t.ALT,children:[]},cat:null},data.altStack.push(data.topStack),data.opcodes.push(data.topStack.alt);break}data.topStack={alt:data.opcodes[0],cat:null},data.altStack.push(data.topStack);break}data.topStack={alt:{type:t.ALT,children:[]},cat:null},data.altStack.push(data.topStack),data.opcodes.push(data.topStack.alt);break}}else e===t.SEM_POST&&(data.altStack.pop(),data.altStack.length>0?data.topStack=data.altStack[data.altStack.length-1]:data.topStack=null);return l},this.callbacks.andop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.opcodes.push({type:t.AND}),l},this.callbacks.bmax=function(e,r,n,o,data){const c=t.SEM_OK;return e===t.SEM_POST&&(data.max=l(r,n,o)),c},this.callbacks.bmin=function(e,r,n,o,data){const c=t.SEM_OK;return e===t.SEM_POST&&(data.min=l(r,n,o)),c},this.callbacks.bkaop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.opcodes.push({type:t.BKA}),l},this.callbacks.bknop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.opcodes.push({type:t.BKN}),l},this.callbacks.bkrop=function(r,n,o,l,data){const c=t.SEM_OK;return r===t.SEM_PRE?(data.ci=!0,data.cs=!1,data.um=!0,data.pm=!1):r===t.SEM_POST&&data.opcodes.push({type:t.BKR,bkrCase:!0===data.cs?t.BKR_MODE_CS:t.BKR_MODE_CI,bkrMode:!0===data.pm?t.BKR_MODE_PM:t.BKR_MODE_UM,index:{phraseIndex:data.bkrname.phraseIndex,name:e.utils.charsToString(n,data.bkrname.phraseIndex,data.bkrname.phraseLength)}}),c},this.callbacks["bkr-name"]=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.bkrname={phraseIndex:n,phraseLength:o}),l},this.callbacks.bstring=function(e,r,n,o,data){const c=t.SEM_OK;return e===t.SEM_POST&&data.tbsstr.push(l(r,n,o)),c},this.callbacks.clsop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(o<=2?data.opcodes.push({type:t.TLS,string:[]}):data.opcodes.push({type:t.TBS,string:r.slice(n+1,n+o-1)})),l},this.callbacks.ci=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.ci=!0),l},this.callbacks.cs=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.cs=!0),l},this.callbacks.um=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.um=!0),l},this.callbacks.pm=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.pm=!0),l},this.callbacks.concatenation=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_PRE?(data.topStack.alt.children.push(data.opcodes.length),data.topStack.cat={type:t.CAT,children:[]},data.opcodes.push(data.topStack.cat)):e===t.SEM_POST&&(data.topStack.cat=null),l},this.callbacks.defined=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.definedas="="),l},this.callbacks.dmax=function(e,r,n,l,data){const c=t.SEM_OK;return e===t.SEM_POST&&(data.max=o(r,n,l)),c},this.callbacks.dmin=function(e,r,n,l,data){const c=t.SEM_OK;return e===t.SEM_POST&&(data.min=o(r,n,l)),c},this.callbacks.dstring=function(e,r,n,l,data){const c=t.SEM_OK;return e===t.SEM_POST&&data.tbsstr.push(o(r,n,l)),c},this.callbacks.file=function(e,r,o,l,data){const c=t.SEM_OK;if(e===t.SEM_PRE)data.ruleNames=new n,data.udtNames=new n,data.rules=[],data.udts=[],data.rulesLineMap=[],data.opcodes=[],data.altStack=[],data.topStack=null,data.topRule=null;else if(e===t.SEM_POST){let e;data.rules.forEach((r=>{r.isBkr=!1,r.opcodes.forEach((r=>{r.type===t.RNM&&(e=data.ruleNames.get(r.index.name),-1===e?(data.errors.push({line:data.findLine(data.lines,r.index.phraseIndex,data.charsLength),char:r.index.phraseIndex,msg:`Rule name '${r.index.name}' used but not defined.`}),r.index=-1):r.index=e.index)}))})),data.udts.forEach((e=>{e.isBkr=!1})),data.rules.forEach((r=>{r.opcodes.forEach((n=>{n.type===t.BKR&&(r.hasBkr=!0,e=data.ruleNames.get(n.index.name),-1!==e?(data.rules[e.index].isBkr=!0,n.index=e.index):(e=data.udtNames.get(n.index.name),-1!==e?(data.udts[e.index].isBkr=!0,n.index=data.rules.length+e.index):(data.errors.push({line:data.findLine(data.lines,n.index.phraseIndex,data.charsLength),char:n.index.phraseIndex,msg:`Back reference name '${n.index.name}' refers to undefined rule or unamed UDT.`}),n.index=-1)))}))}))}return c},this.callbacks.incalt=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.definedas="=/"),l},this.callbacks.notop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.opcodes.push({type:t.NOT}),l},this.callbacks.optionopen=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.opcodes.push({type:t.REP,min:0,max:1,char:n}),l},this.callbacks["rep-max"]=function(e,r,n,l,data){const c=t.SEM_OK;return e===t.SEM_POST&&(data.max=o(r,n,l)),c},this.callbacks["rep-min"]=function(e,r,n,l,data){const c=t.SEM_OK;return e===t.SEM_POST&&(data.min=o(r,n,l)),c},this.callbacks["rep-min-max"]=function(e,r,n,l,data){const c=t.SEM_OK;return e===t.SEM_POST&&(data.max=o(r,n,l),data.min=data.max),c},this.callbacks.repetition=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_PRE&&data.topStack.cat.children.push(data.opcodes.length),l},this.callbacks.repop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_PRE?(data.min=0,data.max=1/0,data.topRep={type:t.REP,min:0,max:1/0},data.opcodes.push(data.topRep)):e===t.SEM_POST&&(data.min>data.max&&data.errors.push({line:data.findLine(data.lines,n,data.charsLength),char:n,msg:`repetition min cannot be greater than max: min: ${data.min}: max: ${data.max}`}),data.topRep.min=data.min,data.topRep.max=data.max),l},this.callbacks.rnmop=function(r,n,o,l,data){const c=t.SEM_OK;return r===t.SEM_POST&&data.opcodes.push({type:t.RNM,index:{phraseIndex:o,name:e.utils.charsToString(n,o,l)}}),c},this.callbacks.rule=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_PRE&&(data.altStack.length=0,data.topStack=null,data.rulesLineMap.push({line:data.findLine(data.lines,n,data.charsLength),char:n})),l},this.callbacks.rulelookup=function(e,r,n,o,data){const l=t.SEM_OK;if(e===t.SEM_PRE)data.ruleName="",data.definedas="";else if(e===t.SEM_POST){let e;"="===data.definedas?(e=data.ruleNames.add(data.ruleName),-1===e?(data.definedas=null,data.errors.push({line:data.findLine(data.lines,n,data.charsLength),char:n,msg:`Rule name '${data.ruleName}' previously defined.`})):(data.topRule={name:e.name,lower:e.lower,opcodes:[],index:e.index},data.rules.push(data.topRule),data.opcodes=data.topRule.opcodes)):(e=data.ruleNames.get(data.ruleName),-1===e?(data.definedas=null,data.errors.push({line:data.findLine(data.lines,n,data.charsLength),char:n,msg:`Rule name '${data.ruleName}' for incremental alternate not previously defined.`})):(data.topRule=data.rules[e.index],data.opcodes=data.topRule.opcodes))}return l},this.callbacks.rulename=function(r,n,o,l,data){const c=t.SEM_OK;return r===t.SEM_PRE&&(data.ruleName=e.utils.charsToString(n,o,l)),c},this.callbacks.tbsop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_PRE?data.tbsstr=[]:e===t.SEM_POST&&data.opcodes.push({type:t.TBS,string:data.tbsstr}),l},this.callbacks.tlscase=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&o>0&&(83===r[n+1]||115===r[n+1])&&(data.tlscase=!1),l},this.callbacks.tlsstring=function(e,r,n,o,data){const l=t.SEM_OK;if(e===t.SEM_POST)if(data.tlscase){const e=r.slice(n,n+o);for(let i=0;i<e.length;i+=1)e[i]>=65&&e[i]<=90&&(e[i]+=32);data.opcodes.push({type:t.TLS,string:e})}else data.opcodes.push({type:t.TBS,string:r.slice(n,n+o)});return l},this.callbacks.tlsop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_PRE&&(data.tlscase=!0),l},this.callbacks.trgop=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_PRE?(data.min=0,data.max=0):e===t.SEM_POST&&(data.min>data.max&&data.errors.push({line:data.findLine(data.lines,n,data.charsLength),char:n,msg:`TRG, (%dmin-max), min cannot be greater than max: min: ${data.min}: max: ${data.max}`}),data.opcodes.push({type:t.TRG,min:data.min,max:data.max})),l},this.callbacks["udt-empty"]=function(r,n,o,l,data){const c=t.SEM_OK;if(r===t.SEM_POST){const r=e.utils.charsToString(n,o,l);let c=data.udtNames.add(r);if(-1===c){if(c=data.udtNames.get(r),-1===c)throw new Error("semUdtEmpty: name look up error")}else data.udts.push({name:c.name,lower:c.lower,index:c.index,empty:!0});data.opcodes.push({type:t.UDT,empty:!0,index:c.index})}return c},this.callbacks["udt-non-empty"]=function(r,n,o,l,data){const c=t.SEM_OK;if(r===t.SEM_POST){const r=e.utils.charsToString(n,o,l);let c=data.udtNames.add(r);if(-1===c){if(c=data.udtNames.get(r),-1===c)throw new Error("semUdtNonEmpty: name look up error")}else data.udts.push({name:c.name,lower:c.lower,index:c.index,empty:!1});data.opcodes.push({type:t.UDT,empty:!1,index:c.index,syntax:null,semantic:null})}return c},this.callbacks.xmax=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.max=c(r,n,o)),l},this.callbacks.xmin=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&(data.min=c(r,n,o)),l},this.callbacks.xstring=function(e,r,n,o,data){const l=t.SEM_OK;return e===t.SEM_POST&&data.tbsstr.push(c(r,n,o)),l}}},2241:function(e,t){e.exports=function(){this.grammarObject="grammarObject",this.rules=[],this.rules[0]={name:"File",lower:"file",index:0,isBkr:!1},this.rules[1]={name:"BlankLine",lower:"blankline",index:1,isBkr:!1},this.rules[2]={name:"Rule",lower:"rule",index:2,isBkr:!1},this.rules[3]={name:"RuleLookup",lower:"rulelookup",index:3,isBkr:!1},this.rules[4]={name:"RuleNameTest",lower:"rulenametest",index:4,isBkr:!1},this.rules[5]={name:"RuleName",lower:"rulename",index:5,isBkr:!1},this.rules[6]={name:"RuleNameError",lower:"rulenameerror",index:6,isBkr:!1},this.rules[7]={name:"DefinedAsTest",lower:"definedastest",index:7,isBkr:!1},this.rules[8]={name:"DefinedAsError",lower:"definedaserror",index:8,isBkr:!1},this.rules[9]={name:"DefinedAs",lower:"definedas",index:9,isBkr:!1},this.rules[10]={name:"Defined",lower:"defined",index:10,isBkr:!1},this.rules[11]={name:"IncAlt",lower:"incalt",index:11,isBkr:!1},this.rules[12]={name:"RuleError",lower:"ruleerror",index:12,isBkr:!1},this.rules[13]={name:"LineEndError",lower:"lineenderror",index:13,isBkr:!1},this.rules[14]={name:"Alternation",lower:"alternation",index:14,isBkr:!1},this.rules[15]={name:"Concatenation",lower:"concatenation",index:15,isBkr:!1},this.rules[16]={name:"Repetition",lower:"repetition",index:16,isBkr:!1},this.rules[17]={name:"Modifier",lower:"modifier",index:17,isBkr:!1},this.rules[18]={name:"Predicate",lower:"predicate",index:18,isBkr:!1},this.rules[19]={name:"BasicElement",lower:"basicelement",index:19,isBkr:!1},this.rules[20]={name:"BasicElementErr",lower:"basicelementerr",index:20,isBkr:!1},this.rules[21]={name:"Group",lower:"group",index:21,isBkr:!1},this.rules[22]={name:"GroupError",lower:"grouperror",index:22,isBkr:!1},this.rules[23]={name:"GroupOpen",lower:"groupopen",index:23,isBkr:!1},this.rules[24]={name:"GroupClose",lower:"groupclose",index:24,isBkr:!1},this.rules[25]={name:"Option",lower:"option",index:25,isBkr:!1},this.rules[26]={name:"OptionError",lower:"optionerror",index:26,isBkr:!1},this.rules[27]={name:"OptionOpen",lower:"optionopen",index:27,isBkr:!1},this.rules[28]={name:"OptionClose",lower:"optionclose",index:28,isBkr:!1},this.rules[29]={name:"RnmOp",lower:"rnmop",index:29,isBkr:!1},this.rules[30]={name:"BkrOp",lower:"bkrop",index:30,isBkr:!1},this.rules[31]={name:"bkrModifier",lower:"bkrmodifier",index:31,isBkr:!1},this.rules[32]={name:"cs",lower:"cs",index:32,isBkr:!1},this.rules[33]={name:"ci",lower:"ci",index:33,isBkr:!1},this.rules[34]={name:"um",lower:"um",index:34,isBkr:!1},this.rules[35]={name:"pm",lower:"pm",index:35,isBkr:!1},this.rules[36]={name:"bkr-name",lower:"bkr-name",index:36,isBkr:!1},this.rules[37]={name:"rname",lower:"rname",index:37,isBkr:!1},this.rules[38]={name:"uname",lower:"uname",index:38,isBkr:!1},this.rules[39]={name:"ename",lower:"ename",index:39,isBkr:!1},this.rules[40]={name:"UdtOp",lower:"udtop",index:40,isBkr:!1},this.rules[41]={name:"udt-non-empty",lower:"udt-non-empty",index:41,isBkr:!1},this.rules[42]={name:"udt-empty",lower:"udt-empty",index:42,isBkr:!1},this.rules[43]={name:"RepOp",lower:"repop",index:43,isBkr:!1},this.rules[44]={name:"AltOp",lower:"altop",index:44,isBkr:!1},this.rules[45]={name:"CatOp",lower:"catop",index:45,isBkr:!1},this.rules[46]={name:"StarOp",lower:"starop",index:46,isBkr:!1},this.rules[47]={name:"AndOp",lower:"andop",index:47,isBkr:!1},this.rules[48]={name:"NotOp",lower:"notop",index:48,isBkr:!1},this.rules[49]={name:"BkaOp",lower:"bkaop",index:49,isBkr:!1},this.rules[50]={name:"BknOp",lower:"bknop",index:50,isBkr:!1},this.rules[51]={name:"AbgOp",lower:"abgop",index:51,isBkr:!1},this.rules[52]={name:"AenOp",lower:"aenop",index:52,isBkr:!1},this.rules[53]={name:"TrgOp",lower:"trgop",index:53,isBkr:!1},this.rules[54]={name:"TbsOp",lower:"tbsop",index:54,isBkr:!1},this.rules[55]={name:"TlsOp",lower:"tlsop",index:55,isBkr:!1},this.rules[56]={name:"TlsCase",lower:"tlscase",index:56,isBkr:!1},this.rules[57]={name:"TlsOpen",lower:"tlsopen",index:57,isBkr:!1},this.rules[58]={name:"TlsClose",lower:"tlsclose",index:58,isBkr:!1},this.rules[59]={name:"TlsString",lower:"tlsstring",index:59,isBkr:!1},this.rules[60]={name:"StringTab",lower:"stringtab",index:60,isBkr:!1},this.rules[61]={name:"ClsOp",lower:"clsop",index:61,isBkr:!1},this.rules[62]={name:"ClsOpen",lower:"clsopen",index:62,isBkr:!1},this.rules[63]={name:"ClsClose",lower:"clsclose",index:63,isBkr:!1},this.rules[64]={name:"ClsString",lower:"clsstring",index:64,isBkr:!1},this.rules[65]={name:"ProsVal",lower:"prosval",index:65,isBkr:!1},this.rules[66]={name:"ProsValOpen",lower:"prosvalopen",index:66,isBkr:!1},this.rules[67]={name:"ProsValString",lower:"prosvalstring",index:67,isBkr:!1},this.rules[68]={name:"ProsValClose",lower:"prosvalclose",index:68,isBkr:!1},this.rules[69]={name:"rep-min",lower:"rep-min",index:69,isBkr:!1},this.rules[70]={name:"rep-min-max",lower:"rep-min-max",index:70,isBkr:!1},this.rules[71]={name:"rep-max",lower:"rep-max",index:71,isBkr:!1},this.rules[72]={name:"rep-num",lower:"rep-num",index:72,isBkr:!1},this.rules[73]={name:"dString",lower:"dstring",index:73,isBkr:!1},this.rules[74]={name:"xString",lower:"xstring",index:74,isBkr:!1},this.rules[75]={name:"bString",lower:"bstring",index:75,isBkr:!1},this.rules[76]={name:"Dec",lower:"dec",index:76,isBkr:!1},this.rules[77]={name:"Hex",lower:"hex",index:77,isBkr:!1},this.rules[78]={name:"Bin",lower:"bin",index:78,isBkr:!1},this.rules[79]={name:"dmin",lower:"dmin",index:79,isBkr:!1},this.rules[80]={name:"dmax",lower:"dmax",index:80,isBkr:!1},this.rules[81]={name:"bmin",lower:"bmin",index:81,isBkr:!1},this.rules[82]={name:"bmax",lower:"bmax",index:82,isBkr:!1},this.rules[83]={name:"xmin",lower:"xmin",index:83,isBkr:!1},this.rules[84]={name:"xmax",lower:"xmax",index:84,isBkr:!1},this.rules[85]={name:"dnum",lower:"dnum",index:85,isBkr:!1},this.rules[86]={name:"bnum",lower:"bnum",index:86,isBkr:!1},this.rules[87]={name:"xnum",lower:"xnum",index:87,isBkr:!1},this.rules[88]={name:"alphanum",lower:"alphanum",index:88,isBkr:!1},this.rules[89]={name:"owsp",lower:"owsp",index:89,isBkr:!1},this.rules[90]={name:"wsp",lower:"wsp",index:90,isBkr:!1},this.rules[91]={name:"space",lower:"space",index:91,isBkr:!1},this.rules[92]={name:"comment",lower:"comment",index:92,isBkr:!1},this.rules[93]={name:"LineEnd",lower:"lineend",index:93,isBkr:!1},this.rules[94]={name:"LineContinue",lower:"linecontinue",index:94,isBkr:!1},this.udts=[],this.rules[0].opcodes=[],this.rules[0].opcodes[0]={type:3,min:0,max:1/0},this.rules[0].opcodes[1]={type:1,children:[2,3,4]},this.rules[0].opcodes[2]={type:4,index:1},this.rules[0].opcodes[3]={type:4,index:2},this.rules[0].opcodes[4]={type:4,index:12},this.rules[1].opcodes=[],this.rules[1].opcodes[0]={type:2,children:[1,5,7]},this.rules[1].opcodes[1]={type:3,min:0,max:1/0},this.rules[1].opcodes[2]={type:1,children:[3,4]},this.rules[1].opcodes[3]={type:6,string:[32]},this.rules[1].opcodes[4]={type:6,string:[9]},this.rules[1].opcodes[5]={type:3,min:0,max:1},this.rules[1].opcodes[6]={type:4,index:92},this.rules[1].opcodes[7]={type:4,index:93},this.rules[2].opcodes=[],this.rules[2].opcodes[0]={type:2,children:[1,2,3,4]},this.rules[2].opcodes[1]={type:4,index:3},this.rules[2].opcodes[2]={type:4,index:89},this.rules[2].opcodes[3]={type:4,index:14},this.rules[2].opcodes[4]={type:1,children:[5,8]},this.rules[2].opcodes[5]={type:2,children:[6,7]},this.rules[2].opcodes[6]={type:4,index:89},this.rules[2].opcodes[7]={type:4,index:93},this.rules[2].opcodes[8]={type:2,children:[9,10]},this.rules[2].opcodes[9]={type:4,index:13},this.rules[2].opcodes[10]={type:4,index:93},this.rules[3].opcodes=[],this.rules[3].opcodes[0]={type:2,children:[1,2,3]},this.rules[3].opcodes[1]={type:4,index:4},this.rules[3].opcodes[2]={type:4,index:89},this.rules[3].opcodes[3]={type:4,index:7},this.rules[4].opcodes=[],this.rules[4].opcodes[0]={type:1,children:[1,2]},this.rules[4].opcodes[1]={type:4,index:5},this.rules[4].opcodes[2]={type:4,index:6},this.rules[5].opcodes=[],this.rules[5].opcodes[0]={type:4,index:88},this.rules[6].opcodes=[],this.rules[6].opcodes[0]={type:3,min:1,max:1/0},this.rules[6].opcodes[1]={type:1,children:[2,3]},this.rules[6].opcodes[2]={type:5,min:33,max:60},this.rules[6].opcodes[3]={type:5,min:62,max:126},this.rules[7].opcodes=[],this.rules[7].opcodes[0]={type:1,children:[1,2]},this.rules[7].opcodes[1]={type:4,index:9},this.rules[7].opcodes[2]={type:4,index:8},this.rules[8].opcodes=[],this.rules[8].opcodes[0]={type:3,min:1,max:2},this.rules[8].opcodes[1]={type:5,min:33,max:126},this.rules[9].opcodes=[],this.rules[9].opcodes[0]={type:1,children:[1,2]},this.rules[9].opcodes[1]={type:4,index:11},this.rules[9].opcodes[2]={type:4,index:10},this.rules[10].opcodes=[],this.rules[10].opcodes[0]={type:6,string:[61]},this.rules[11].opcodes=[],this.rules[11].opcodes[0]={type:6,string:[61,47]},this.rules[12].opcodes=[],this.rules[12].opcodes[0]={type:2,children:[1,6]},this.rules[12].opcodes[1]={type:3,min:1,max:1/0},this.rules[12].opcodes[2]={type:1,children:[3,4,5]},this.rules[12].opcodes[3]={type:5,min:32,max:126},this.rules[12].opcodes[4]={type:6,string:[9]},this.rules[12].opcodes[5]={type:4,index:94},this.rules[12].opcodes[6]={type:4,index:93},this.rules[13].opcodes=[],this.rules[13].opcodes[0]={type:3,min:1,max:1/0},this.rules[13].opcodes[1]={type:1,children:[2,3,4]},this.rules[13].opcodes[2]={type:5,min:32,max:126},this.rules[13].opcodes[3]={type:6,string:[9]},this.rules[13].opcodes[4]={type:4,index:94},this.rules[14].opcodes=[],this.rules[14].opcodes[0]={type:2,children:[1,2]},this.rules[14].opcodes[1]={type:4,index:15},this.rules[14].opcodes[2]={type:3,min:0,max:1/0},this.rules[14].opcodes[3]={type:2,children:[4,5,6]},this.rules[14].opcodes[4]={type:4,index:89},this.rules[14].opcodes[5]={type:4,index:44},this.rules[14].opcodes[6]={type:4,index:15},this.rules[15].opcodes=[],this.rules[15].opcodes[0]={type:2,children:[1,2]},this.rules[15].opcodes[1]={type:4,index:16},this.rules[15].opcodes[2]={type:3,min:0,max:1/0},this.rules[15].opcodes[3]={type:2,children:[4,5]},this.rules[15].opcodes[4]={type:4,index:45},this.rules[15].opcodes[5]={type:4,index:16},this.rules[16].opcodes=[],this.rules[16].opcodes[0]={type:2,children:[1,3]},this.rules[16].opcodes[1]={type:3,min:0,max:1},this.rules[16].opcodes[2]={type:4,index:17},this.rules[16].opcodes[3]={type:1,children:[4,5,6,7]},this.rules[16].opcodes[4]={type:4,index:21},this.rules[16].opcodes[5]={type:4,index:25},this.rules[16].opcodes[6]={type:4,index:19},this.rules[16].opcodes[7]={type:4,index:20},this.rules[17].opcodes=[],this.rules[17].opcodes[0]={type:1,children:[1,5]},this.rules[17].opcodes[1]={type:2,children:[2,3]},this.rules[17].opcodes[2]={type:4,index:18},this.rules[17].opcodes[3]={type:3,min:0,max:1},this.rules[17].opcodes[4]={type:4,index:43},this.rules[17].opcodes[5]={type:4,index:43},this.rules[18].opcodes=[],this.rules[18].opcodes[0]={type:1,children:[1,2,3,4]},this.rules[18].opcodes[1]={type:4,index:49},this.rules[18].opcodes[2]={type:4,index:50},this.rules[18].opcodes[3]={type:4,index:47},this.rules[18].opcodes[4]={type:4,index:48},this.rules[19].opcodes=[],this.rules[19].opcodes[0]={type:1,children:[1,2,3,4,5,6,7,8,9,10]},this.rules[19].opcodes[1]={type:4,index:40},this.rules[19].opcodes[2]={type:4,index:29},this.rules[19].opcodes[3]={type:4,index:53},this.rules[19].opcodes[4]={type:4,index:54},this.rules[19].opcodes[5]={type:4,index:55},this.rules[19].opcodes[6]={type:4,index:61},this.rules[19].opcodes[7]={type:4,index:30},this.rules[19].opcodes[8]={type:4,index:51},this.rules[19].opcodes[9]={type:4,index:52},this.rules[19].opcodes[10]={type:4,index:65},this.rules[20].opcodes=[],this.rules[20].opcodes[0]={type:3,min:1,max:1/0},this.rules[20].opcodes[1]={type:1,children:[2,3,4,5]},this.rules[20].opcodes[2]={type:5,min:33,max:40},this.rules[20].opcodes[3]={type:5,min:42,max:46},this.rules[20].opcodes[4]={type:5,min:48,max:92},this.rules[20].opcodes[5]={type:5,min:94,max:126},this.rules[21].opcodes=[],this.rules[21].opcodes[0]={type:2,children:[1,2,3]},this.rules[21].opcodes[1]={type:4,index:23},this.rules[21].opcodes[2]={type:4,index:14},this.rules[21].opcodes[3]={type:1,children:[4,5]},this.rules[21].opcodes[4]={type:4,index:24},this.rules[21].opcodes[5]={type:4,index:22},this.rules[22].opcodes=[],this.rules[22].opcodes[0]={type:3,min:1,max:1/0},this.rules[22].opcodes[1]={type:1,children:[2,3,4,5]},this.rules[22].opcodes[2]={type:5,min:33,max:40},this.rules[22].opcodes[3]={type:5,min:42,max:46},this.rules[22].opcodes[4]={type:5,min:48,max:92},this.rules[22].opcodes[5]={type:5,min:94,max:126},this.rules[23].opcodes=[],this.rules[23].opcodes[0]={type:2,children:[1,2]},this.rules[23].opcodes[1]={type:6,string:[40]},this.rules[23].opcodes[2]={type:4,index:89},this.rules[24].opcodes=[],this.rules[24].opcodes[0]={type:2,children:[1,2]},this.rules[24].opcodes[1]={type:4,index:89},this.rules[24].opcodes[2]={type:6,string:[41]},this.rules[25].opcodes=[],this.rules[25].opcodes[0]={type:2,children:[1,2,3]},this.rules[25].opcodes[1]={type:4,index:27},this.rules[25].opcodes[2]={type:4,index:14},this.rules[25].opcodes[3]={type:1,children:[4,5]},this.rules[25].opcodes[4]={type:4,index:28},this.rules[25].opcodes[5]={type:4,index:26},this.rules[26].opcodes=[],this.rules[26].opcodes[0]={type:3,min:1,max:1/0},this.rules[26].opcodes[1]={type:1,children:[2,3,4,5]},this.rules[26].opcodes[2]={type:5,min:33,max:40},this.rules[26].opcodes[3]={type:5,min:42,max:46},this.rules[26].opcodes[4]={type:5,min:48,max:92},this.rules[26].opcodes[5]={type:5,min:94,max:126},this.rules[27].opcodes=[],this.rules[27].opcodes[0]={type:2,children:[1,2]},this.rules[27].opcodes[1]={type:6,string:[91]},this.rules[27].opcodes[2]={type:4,index:89},this.rules[28].opcodes=[],this.rules[28].opcodes[0]={type:2,children:[1,2]},this.rules[28].opcodes[1]={type:4,index:89},this.rules[28].opcodes[2]={type:6,string:[93]},this.rules[29].opcodes=[],this.rules[29].opcodes[0]={type:4,index:88},this.rules[30].opcodes=[],this.rules[30].opcodes[0]={type:2,children:[1,2,4]},this.rules[30].opcodes[1]={type:6,string:[92]},this.rules[30].opcodes[2]={type:3,min:0,max:1},this.rules[30].opcodes[3]={type:4,index:31},this.rules[30].opcodes[4]={type:4,index:36},this.rules[31].opcodes=[],this.rules[31].opcodes[0]={type:1,children:[1,7,13,19]},this.rules[31].opcodes[1]={type:2,children:[2,3]},this.rules[31].opcodes[2]={type:4,index:32},this.rules[31].opcodes[3]={type:3,min:0,max:1},this.rules[31].opcodes[4]={type:1,children:[5,6]},this.rules[31].opcodes[5]={type:4,index:34},this.rules[31].opcodes[6]={type:4,index:35},this.rules[31].opcodes[7]={type:2,children:[8,9]},this.rules[31].opcodes[8]={type:4,index:33},this.rules[31].opcodes[9]={type:3,min:0,max:1},this.rules[31].opcodes[10]={type:1,children:[11,12]},this.rules[31].opcodes[11]={type:4,index:34},this.rules[31].opcodes[12]={type:4,index:35},this.rules[31].opcodes[13]={type:2,children:[14,15]},this.rules[31].opcodes[14]={type:4,index:34},this.rules[31].opcodes[15]={type:3,min:0,max:1},this.rules[31].opcodes[16]={type:1,children:[17,18]},this.rules[31].opcodes[17]={type:4,index:32},this.rules[31].opcodes[18]={type:4,index:33},this.rules[31].opcodes[19]={type:2,children:[20,21]},this.rules[31].opcodes[20]={type:4,index:35},this.rules[31].opcodes[21]={type:3,min:0,max:1},this.rules[31].opcodes[22]={type:1,children:[23,24]},this.rules[31].opcodes[23]={type:4,index:32},this.rules[31].opcodes[24]={type:4,index:33},this.rules[32].opcodes=[],this.rules[32].opcodes[0]={type:6,string:[37,115]},this.rules[33].opcodes=[],this.rules[33].opcodes[0]={type:6,string:[37,105]},this.rules[34].opcodes=[],this.rules[34].opcodes[0]={type:6,string:[37,117]},this.rules[35].opcodes=[],this.rules[35].opcodes[0]={type:6,string:[37,112]},this.rules[36].opcodes=[],this.rules[36].opcodes[0]={type:1,children:[1,2,3]},this.rules[36].opcodes[1]={type:4,index:38},this.rules[36].opcodes[2]={type:4,index:39},this.rules[36].opcodes[3]={type:4,index:37},this.rules[37].opcodes=[],this.rules[37].opcodes[0]={type:4,index:88},this.rules[38].opcodes=[],this.rules[38].opcodes[0]={type:2,children:[1,2]},this.rules[38].opcodes[1]={type:6,string:[117,95]},this.rules[38].opcodes[2]={type:4,index:88},this.rules[39].opcodes=[],this.rules[39].opcodes[0]={type:2,children:[1,2]},this.rules[39].opcodes[1]={type:6,string:[101,95]},this.rules[39].opcodes[2]={type:4,index:88},this.rules[40].opcodes=[],this.rules[40].opcodes[0]={type:1,children:[1,2]},this.rules[40].opcodes[1]={type:4,index:42},this.rules[40].opcodes[2]={type:4,index:41},this.rules[41].opcodes=[],this.rules[41].opcodes[0]={type:2,children:[1,2]},this.rules[41].opcodes[1]={type:6,string:[117,95]},this.rules[41].opcodes[2]={type:4,index:88},this.rules[42].opcodes=[],this.rules[42].opcodes[0]={type:2,children:[1,2]},this.rules[42].opcodes[1]={type:6,string:[101,95]},this.rules[42].opcodes[2]={type:4,index:88},this.rules[43].opcodes=[],this.rules[43].opcodes[0]={type:1,children:[1,5,8,11,12]},this.rules[43].opcodes[1]={type:2,children:[2,3,4]},this.rules[43].opcodes[2]={type:4,index:69},this.rules[43].opcodes[3]={type:4,index:46},this.rules[43].opcodes[4]={type:4,index:71},this.rules[43].opcodes[5]={type:2,children:[6,7]},this.rules[43].opcodes[6]={type:4,index:69},this.rules[43].opcodes[7]={type:4,index:46},this.rules[43].opcodes[8]={type:2,children:[9,10]},this.rules[43].opcodes[9]={type:4,index:46},this.rules[43].opcodes[10]={type:4,index:71},this.rules[43].opcodes[11]={type:4,index:46},this.rules[43].opcodes[12]={type:4,index:70},this.rules[44].opcodes=[],this.rules[44].opcodes[0]={type:2,children:[1,2]},this.rules[44].opcodes[1]={type:6,string:[47]},this.rules[44].opcodes[2]={type:4,index:89},this.rules[45].opcodes=[],this.rules[45].opcodes[0]={type:4,index:90},this.rules[46].opcodes=[],this.rules[46].opcodes[0]={type:6,string:[42]},this.rules[47].opcodes=[],this.rules[47].opcodes[0]={type:6,string:[38]},this.rules[48].opcodes=[],this.rules[48].opcodes[0]={type:6,string:[33]},this.rules[49].opcodes=[],this.rules[49].opcodes[0]={type:6,string:[38,38]},this.rules[50].opcodes=[],this.rules[50].opcodes[0]={type:6,string:[33,33]},this.rules[51].opcodes=[],this.rules[51].opcodes[0]={type:6,string:[37,94]},this.rules[52].opcodes=[],this.rules[52].opcodes[0]={type:6,string:[37,36]},this.rules[53].opcodes=[],this.rules[53].opcodes[0]={type:2,children:[1,2]},this.rules[53].opcodes[1]={type:6,string:[37]},this.rules[53].opcodes[2]={type:1,children:[3,8,13]},this.rules[53].opcodes[3]={type:2,children:[4,5,6,7]},this.rules[53].opcodes[4]={type:4,index:76},this.rules[53].opcodes[5]={type:4,index:79},this.rules[53].opcodes[6]={type:6,string:[45]},this.rules[53].opcodes[7]={type:4,index:80},this.rules[53].opcodes[8]={type:2,children:[9,10,11,12]},this.rules[53].opcodes[9]={type:4,index:77},this.rules[53].opcodes[10]={type:4,index:83},this.rules[53].opcodes[11]={type:6,string:[45]},this.rules[53].opcodes[12]={type:4,index:84},this.rules[53].opcodes[13]={type:2,children:[14,15,16,17]},this.rules[53].opcodes[14]={type:4,index:78},this.rules[53].opcodes[15]={type:4,index:81},this.rules[53].opcodes[16]={type:6,string:[45]},this.rules[53].opcodes[17]={type:4,index:82},this.rules[54].opcodes=[],this.rules[54].opcodes[0]={type:2,children:[1,2]},this.rules[54].opcodes[1]={type:6,string:[37]},this.rules[54].opcodes[2]={type:1,children:[3,10,17]},this.rules[54].opcodes[3]={type:2,children:[4,5,6]},this.rules[54].opcodes[4]={type:4,index:76},this.rules[54].opcodes[5]={type:4,index:73},this.rules[54].opcodes[6]={type:3,min:0,max:1/0},this.rules[54].opcodes[7]={type:2,children:[8,9]},this.rules[54].opcodes[8]={type:6,string:[46]},this.rules[54].opcodes[9]={type:4,index:73},this.rules[54].opcodes[10]={type:2,children:[11,12,13]},this.rules[54].opcodes[11]={type:4,index:77},this.rules[54].opcodes[12]={type:4,index:74},this.rules[54].opcodes[13]={type:3,min:0,max:1/0},this.rules[54].opcodes[14]={type:2,children:[15,16]},this.rules[54].opcodes[15]={type:6,string:[46]},this.rules[54].opcodes[16]={type:4,index:74},this.rules[54].opcodes[17]={type:2,children:[18,19,20]},this.rules[54].opcodes[18]={type:4,index:78},this.rules[54].opcodes[19]={type:4,index:75},this.rules[54].opcodes[20]={type:3,min:0,max:1/0},this.rules[54].opcodes[21]={type:2,children:[22,23]},this.rules[54].opcodes[22]={type:6,string:[46]},this.rules[54].opcodes[23]={type:4,index:75},this.rules[55].opcodes=[],this.rules[55].opcodes[0]={type:2,children:[1,2,3,4]},this.rules[55].opcodes[1]={type:4,index:56},this.rules[55].opcodes[2]={type:4,index:57},this.rules[55].opcodes[3]={type:4,index:59},this.rules[55].opcodes[4]={type:4,index:58},this.rules[56].opcodes=[],this.rules[56].opcodes[0]={type:3,min:0,max:1},this.rules[56].opcodes[1]={type:1,children:[2,3]},this.rules[56].opcodes[2]={type:7,string:[37,105]},this.rules[56].opcodes[3]={type:7,string:[37,115]},this.rules[57].opcodes=[],this.rules[57].opcodes[0]={type:6,string:[34]},this.rules[58].opcodes=[],this.rules[58].opcodes[0]={type:6,string:[34]},this.rules[59].opcodes=[],this.rules[59].opcodes[0]={type:3,min:0,max:1/0},this.rules[59].opcodes[1]={type:1,children:[2,3,4]},this.rules[59].opcodes[2]={type:5,min:32,max:33},this.rules[59].opcodes[3]={type:5,min:35,max:126},this.rules[59].opcodes[4]={type:4,index:60},this.rules[60].opcodes=[],this.rules[60].opcodes[0]={type:6,string:[9]},this.rules[61].opcodes=[],this.rules[61].opcodes[0]={type:2,children:[1,2,3]},this.rules[61].opcodes[1]={type:4,index:62},this.rules[61].opcodes[2]={type:4,index:64},this.rules[61].opcodes[3]={type:4,index:63},this.rules[62].opcodes=[],this.rules[62].opcodes[0]={type:6,string:[39]},this.rules[63].opcodes=[],this.rules[63].opcodes[0]={type:6,string:[39]},this.rules[64].opcodes=[],this.rules[64].opcodes[0]={type:3,min:0,max:1/0},this.rules[64].opcodes[1]={type:1,children:[2,3,4]},this.rules[64].opcodes[2]={type:5,min:32,max:38},this.rules[64].opcodes[3]={type:5,min:40,max:126},this.rules[64].opcodes[4]={type:4,index:60},this.rules[65].opcodes=[],this.rules[65].opcodes[0]={type:2,children:[1,2,3]},this.rules[65].opcodes[1]={type:4,index:66},this.rules[65].opcodes[2]={type:4,index:67},this.rules[65].opcodes[3]={type:4,index:68},this.rules[66].opcodes=[],this.rules[66].opcodes[0]={type:6,string:[60]},this.rules[67].opcodes=[],this.rules[67].opcodes[0]={type:3,min:0,max:1/0},this.rules[67].opcodes[1]={type:1,children:[2,3,4]},this.rules[67].opcodes[2]={type:5,min:32,max:61},this.rules[67].opcodes[3]={type:5,min:63,max:126},this.rules[67].opcodes[4]={type:4,index:60},this.rules[68].opcodes=[],this.rules[68].opcodes[0]={type:6,string:[62]},this.rules[69].opcodes=[],this.rules[69].opcodes[0]={type:4,index:72},this.rules[70].opcodes=[],this.rules[70].opcodes[0]={type:4,index:72},this.rules[71].opcodes=[],this.rules[71].opcodes[0]={type:4,index:72},this.rules[72].opcodes=[],this.rules[72].opcodes[0]={type:3,min:1,max:1/0},this.rules[72].opcodes[1]={type:5,min:48,max:57},this.rules[73].opcodes=[],this.rules[73].opcodes[0]={type:4,index:85},this.rules[74].opcodes=[],this.rules[74].opcodes[0]={type:4,index:87},this.rules[75].opcodes=[],this.rules[75].opcodes[0]={type:4,index:86},this.rules[76].opcodes=[],this.rules[76].opcodes[0]={type:1,children:[1,2]},this.rules[76].opcodes[1]={type:6,string:[68]},this.rules[76].opcodes[2]={type:6,string:[100]},this.rules[77].opcodes=[],this.rules[77].opcodes[0]={type:1,children:[1,2]},this.rules[77].opcodes[1]={type:6,string:[88]},this.rules[77].opcodes[2]={type:6,string:[120]},this.rules[78].opcodes=[],this.rules[78].opcodes[0]={type:1,children:[1,2]},this.rules[78].opcodes[1]={type:6,string:[66]},this.rules[78].opcodes[2]={type:6,string:[98]},this.rules[79].opcodes=[],this.rules[79].opcodes[0]={type:4,index:85},this.rules[80].opcodes=[],this.rules[80].opcodes[0]={type:4,index:85},this.rules[81].opcodes=[],this.rules[81].opcodes[0]={type:4,index:86},this.rules[82].opcodes=[],this.rules[82].opcodes[0]={type:4,index:86},this.rules[83].opcodes=[],this.rules[83].opcodes[0]={type:4,index:87},this.rules[84].opcodes=[],this.rules[84].opcodes[0]={type:4,index:87},this.rules[85].opcodes=[],this.rules[85].opcodes[0]={type:3,min:1,max:1/0},this.rules[85].opcodes[1]={type:5,min:48,max:57},this.rules[86].opcodes=[],this.rules[86].opcodes[0]={type:3,min:1,max:1/0},this.rules[86].opcodes[1]={type:5,min:48,max:49},this.rules[87].opcodes=[],this.rules[87].opcodes[0]={type:3,min:1,max:1/0},this.rules[87].opcodes[1]={type:1,children:[2,3,4]},this.rules[87].opcodes[2]={type:5,min:48,max:57},this.rules[87].opcodes[3]={type:5,min:65,max:70},this.rules[87].opcodes[4]={type:5,min:97,max:102},this.rules[88].opcodes=[],this.rules[88].opcodes[0]={type:2,children:[1,4]},this.rules[88].opcodes[1]={type:1,children:[2,3]},this.rules[88].opcodes[2]={type:5,min:97,max:122},this.rules[88].opcodes[3]={type:5,min:65,max:90},this.rules[88].opcodes[4]={type:3,min:0,max:1/0},this.rules[88].opcodes[5]={type:1,children:[6,7,8,9]},this.rules[88].opcodes[6]={type:5,min:97,max:122},this.rules[88].opcodes[7]={type:5,min:65,max:90},this.rules[88].opcodes[8]={type:5,min:48,max:57},this.rules[88].opcodes[9]={type:6,string:[45]},this.rules[89].opcodes=[],this.rules[89].opcodes[0]={type:3,min:0,max:1/0},this.rules[89].opcodes[1]={type:4,index:91},this.rules[90].opcodes=[],this.rules[90].opcodes[0]={type:3,min:1,max:1/0},this.rules[90].opcodes[1]={type:4,index:91},this.rules[91].opcodes=[],this.rules[91].opcodes[0]={type:1,children:[1,2,3,4]},this.rules[91].opcodes[1]={type:6,string:[32]},this.rules[91].opcodes[2]={type:6,string:[9]},this.rules[91].opcodes[3]={type:4,index:92},this.rules[91].opcodes[4]={type:4,index:94},this.rules[92].opcodes=[],this.rules[92].opcodes[0]={type:2,children:[1,2]},this.rules[92].opcodes[1]={type:6,string:[59]},this.rules[92].opcodes[2]={type:3,min:0,max:1/0},this.rules[92].opcodes[3]={type:1,children:[4,5]},this.rules[92].opcodes[4]={type:5,min:32,max:126},this.rules[92].opcodes[5]={type:6,string:[9]},this.rules[93].opcodes=[],this.rules[93].opcodes[0]={type:1,children:[1,2,3]},this.rules[93].opcodes[1]={type:6,string:[13,10]},this.rules[93].opcodes[2]={type:6,string:[10]},this.rules[93].opcodes[3]={type:6,string:[13]},this.rules[94].opcodes=[],this.rules[94].opcodes[0]={type:2,children:[1,5]},this.rules[94].opcodes[1]={type:1,children:[2,3,4]},this.rules[94].opcodes[2]={type:6,string:[13,10]},this.rules[94].opcodes[3]={type:6,string:[10]},this.rules[94].opcodes[4]={type:6,string:[13]},this.rules[94].opcodes[5]={type:1,children:[6,7]},this.rules[94].opcodes[6]={type:6,string:[32]},this.rules[94].opcodes[7]={type:6,string:[9]},this.toString=function(){let e="";return e+=";\n",e+="; ABNF for JavaScript APG 2.0 SABNF\n",e+="; RFC 5234 with some restrictions and additions.\n",e+="; Updated 11/24/2015 for RFC 7405 case-sensitive literal string notation\n",e+=';  - accepts %s"string" as a case-sensitive string\n',e+=';  - accepts %i"string" as a case-insensitive string\n',e+=';  - accepts "string" as a case-insensitive string\n',e+=";\n",e+="; Some restrictions:\n",e+=";   1. Rules must begin at first character of each line.\n",e+=";      Indentations on first rule and rules thereafter are not allowed.\n",e+=";   2. Relaxed line endings. CRLF, LF or CR are accepted as valid line ending.\n",e+=";   3. Prose values, i.e. <prose value>, are accepted as valid grammar syntax.\n",e+=";      However, a working parser cannot be generated from them.\n",e+=";\n",e+="; Super set (SABNF) additions:\n",e+=";   1. Look-ahead (syntactic predicate) operators are accepted as element prefixes.\n",e+=";      & is the positive look-ahead operator, succeeds and backtracks if the look-ahead phrase is found\n",e+=";      ! is the negative look-ahead operator, succeeds and backtracks if the look-ahead phrase is NOT found\n",e+=";      e.g. &%d13 or &rule or !(A / B)\n",e+=";   2. User-Defined Terminals (UDT) of the form, u_name and e_name are accepted.\n",e+=";      'name' is alpha followed by alpha/num/hyphen just like a rule name.\n",e+=";      u_name may be used as an element but no rule definition is given.\n",e+=";      e.g. rule = A / u_myUdt\n",e+=';           A = "a"\n',e+=";      would be a valid grammar.\n",e+=";   3. Case-sensitive, single-quoted strings are accepted.\n",e+=";      e.g. 'abc' would be equivalent to %d97.98.99\n",e+=';      (kept for backward compatibility, but superseded by %s"abc")  \n',e+="; New 12/26/2015\n",e+=";   4. Look-behind operators are accepted as element prefixes.\n",e+=";      && is the positive look-behind operator, succeeds and backtracks if the look-behind phrase is found\n",e+=";      !! is the negative look-behind operator, succeeds and backtracks if the look-behind phrase is NOT found\n",e+=";      e.g. &&%d13 or &&rule or !!(A / B)\n",e+=";   5. Back reference operators, i.e. \\rulename, are accepted.\n",e+=";      A back reference operator acts like a TLS or TBS terminal except that the phrase it attempts\n",e+=";      to match is a phrase previously matched by the rule 'rulename'.\n",e+=";      There are two modes of previous phrase matching - the parent-frame mode and the universal mode.\n",e+=";      In universal mode, \\rulename matches the last match to 'rulename' regardless of where it was found.\n",e+=";      In parent-frame mode, \\rulename matches only the last match found on the parent's frame or parse tree level.\n",e+=";      Back reference modifiers can be used to specify case and mode.\n",e+=";      \\A defaults to case-insensitive and universal mode, e.g. \\A === \\%i%uA\n",e+=";      Modifiers %i and %s determine case-insensitive and case-sensitive mode, respectively.\n",e+=";      Modifiers %u and %p determine universal mode and parent frame mode, respectively.\n",e+=";      Case and mode modifiers can appear in any order, e.g. \\%s%pA === \\%p%sA. \n",e+=";   7. String begin anchor, ABG(%^) matches the beginning of the input string location.\n",e+=";      Returns EMPTY or NOMATCH. Never consumes any characters.\n",e+=";   8. String end anchor, AEN(%$) matches the end of the input string location.\n",e+=";      Returns EMPTY or NOMATCH. Never consumes any characters.\n",e+=";\n",e+="File            = *(BlankLine / Rule / RuleError)\n",e+="BlankLine       = *(%d32/%d9) [comment] LineEnd\n",e+="Rule            = RuleLookup owsp Alternation ((owsp LineEnd)\n",e+="                / (LineEndError LineEnd))\n",e+="RuleLookup      = RuleNameTest owsp DefinedAsTest\n",e+="RuleNameTest    = RuleName/RuleNameError\n",e+="RuleName        = alphanum\n",e+="RuleNameError   = 1*(%d33-60/%d62-126)\n",e+="DefinedAsTest   = DefinedAs / DefinedAsError\n",e+="DefinedAsError  = 1*2%d33-126\n",e+="DefinedAs       = IncAlt / Defined\n",e+="Defined         = %d61\n",e+="IncAlt          = %d61.47\n",e+="RuleError       = 1*(%d32-126 / %d9  / LineContinue) LineEnd\n",e+="LineEndError    = 1*(%d32-126 / %d9  / LineContinue)\n",e+="Alternation     = Concatenation *(owsp AltOp Concatenation)\n",e+="Concatenation   = Repetition *(CatOp Repetition)\n",e+="Repetition      = [Modifier] (Group / Option / BasicElement / BasicElementErr)\n",e+="Modifier        = (Predicate [RepOp])\n",e+="                / RepOp\n",e+="Predicate       = BkaOp\n",e+="                / BknOp\n",e+="                / AndOp\n",e+="                / NotOp\n",e+="BasicElement    = UdtOp\n",e+="                / RnmOp\n",e+="                / TrgOp\n",e+="                / TbsOp\n",e+="                / TlsOp\n",e+="                / ClsOp\n",e+="                / BkrOp\n",e+="                / AbgOp\n",e+="                / AenOp\n",e+="                / ProsVal\n",e+="BasicElementErr = 1*(%d33-40/%d42-46/%d48-92/%d94-126)\n",e+="Group           = GroupOpen  Alternation (GroupClose / GroupError)\n",e+="GroupError      = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\n",e+="GroupOpen       = %d40 owsp\n",e+="GroupClose      = owsp %d41\n",e+="Option          = OptionOpen Alternation (OptionClose / OptionError)\n",e+="OptionError     = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\n",e+="OptionOpen      = %d91 owsp\n",e+="OptionClose     = owsp %d93\n",e+="RnmOp           = alphanum\n",e+="BkrOp           = %d92 [bkrModifier] bkr-name\n",e+="bkrModifier     = (cs [um / pm]) / (ci [um / pm]) / (um [cs /ci]) / (pm [cs / ci])\n",e+="cs              = '%s'\n",e+="ci              = '%i'\n",e+="um              = '%u'\n",e+="pm              = '%p'\n",e+="bkr-name        = uname / ename / rname\n",e+="rname           = alphanum\n",e+="uname           = %d117.95 alphanum\n",e+="ename           = %d101.95 alphanum\n",e+="UdtOp           = udt-empty\n",e+="                / udt-non-empty\n",e+="udt-non-empty   = %d117.95 alphanum\n",e+="udt-empty       = %d101.95 alphanum\n",e+="RepOp           = (rep-min StarOp rep-max)\n",e+="                / (rep-min StarOp)\n",e+="                / (StarOp rep-max)\n",e+="                / StarOp\n",e+="                / rep-min-max\n",e+="AltOp           = %d47 owsp\n",e+="CatOp           = wsp\n",e+="StarOp          = %d42\n",e+="AndOp           = %d38\n",e+="NotOp           = %d33\n",e+="BkaOp           = %d38.38\n",e+="BknOp           = %d33.33\n",e+="AbgOp           = %d37.94\n",e+="AenOp           = %d37.36\n",e+="TrgOp           = %d37 ((Dec dmin %d45 dmax) / (Hex xmin %d45 xmax) / (Bin bmin %d45 bmax))\n",e+="TbsOp           = %d37 ((Dec dString *(%d46 dString)) / (Hex xString *(%d46 xString)) / (Bin bString *(%d46 bString)))\n",e+="TlsOp           = TlsCase TlsOpen TlsString TlsClose\n",e+='TlsCase         = ["%i" / "%s"]\n',e+="TlsOpen         = %d34\n",e+="TlsClose        = %d34\n",e+="TlsString       = *(%d32-33/%d35-126/StringTab)\n",e+="StringTab       = %d9\n",e+="ClsOp           = ClsOpen ClsString ClsClose\n",e+="ClsOpen         = %d39\n",e+="ClsClose        = %d39\n",e+="ClsString       = *(%d32-38/%d40-126/StringTab)\n",e+="ProsVal         = ProsValOpen ProsValString ProsValClose\n",e+="ProsValOpen     = %d60\n",e+="ProsValString   = *(%d32-61/%d63-126/StringTab)\n",e+="ProsValClose    = %d62\n",e+="rep-min         = rep-num\n",e+="rep-min-max     = rep-num\n",e+="rep-max         = rep-num\n",e+="rep-num         = 1*(%d48-57)\n",e+="dString         = dnum\n",e+="xString         = xnum\n",e+="bString         = bnum\n",e+="Dec             = (%d68/%d100)\n",e+="Hex             = (%d88/%d120)\n",e+="Bin             = (%d66/%d98)\n",e+="dmin            = dnum\n",e+="dmax            = dnum\n",e+="bmin            = bnum\n",e+="bmax            = bnum\n",e+="xmin            = xnum\n",e+="xmax            = xnum\n",e+="dnum            = 1*(%d48-57)\n",e+="bnum            = 1*%d48-49\n",e+="xnum            = 1*(%d48-57 / %d65-70 / %d97-102)\n",e+=";\n",e+="; Basics\n",e+="alphanum        = (%d97-122/%d65-90) *(%d97-122/%d65-90/%d48-57/%d45)\n",e+="owsp            = *space\n",e+="wsp             = 1*space\n",e+="space           = %d32\n",e+="                / %d9\n",e+="                / comment\n",e+="                / LineContinue\n",e+="comment         = %d59 *(%d32-126 / %d9)\n",e+="LineEnd         = %d13.10\n",e+="                / %d10\n",e+="                / %d13\n",e+="LineContinue    = (%d13.10 / %d10 / %d13) (%d32 / %d9)\n",";\n; ABNF for JavaScript APG 2.0 SABNF\n; RFC 5234 with some restrictions and additions.\n; Updated 11/24/2015 for RFC 7405 case-sensitive literal string notation\n;  - accepts %s\"string\" as a case-sensitive string\n;  - accepts %i\"string\" as a case-insensitive string\n;  - accepts \"string\" as a case-insensitive string\n;\n; Some restrictions:\n;   1. Rules must begin at first character of each line.\n;      Indentations on first rule and rules thereafter are not allowed.\n;   2. Relaxed line endings. CRLF, LF or CR are accepted as valid line ending.\n;   3. Prose values, i.e. <prose value>, are accepted as valid grammar syntax.\n;      However, a working parser cannot be generated from them.\n;\n; Super set (SABNF) additions:\n;   1. Look-ahead (syntactic predicate) operators are accepted as element prefixes.\n;      & is the positive look-ahead operator, succeeds and backtracks if the look-ahead phrase is found\n;      ! is the negative look-ahead operator, succeeds and backtracks if the look-ahead phrase is NOT found\n;      e.g. &%d13 or &rule or !(A / B)\n;   2. User-Defined Terminals (UDT) of the form, u_name and e_name are accepted.\n;      'name' is alpha followed by alpha/num/hyphen just like a rule name.\n;      u_name may be used as an element but no rule definition is given.\n;      e.g. rule = A / u_myUdt\n;           A = \"a\"\n;      would be a valid grammar.\n;   3. Case-sensitive, single-quoted strings are accepted.\n;      e.g. 'abc' would be equivalent to %d97.98.99\n;      (kept for backward compatibility, but superseded by %s\"abc\")  \n; New 12/26/2015\n;   4. Look-behind operators are accepted as element prefixes.\n;      && is the positive look-behind operator, succeeds and backtracks if the look-behind phrase is found\n;      !! is the negative look-behind operator, succeeds and backtracks if the look-behind phrase is NOT found\n;      e.g. &&%d13 or &&rule or !!(A / B)\n;   5. Back reference operators, i.e. \\rulename, are accepted.\n;      A back reference operator acts like a TLS or TBS terminal except that the phrase it attempts\n;      to match is a phrase previously matched by the rule 'rulename'.\n;      There are two modes of previous phrase matching - the parent-frame mode and the universal mode.\n;      In universal mode, \\rulename matches the last match to 'rulename' regardless of where it was found.\n;      In parent-frame mode, \\rulename matches only the last match found on the parent's frame or parse tree level.\n;      Back reference modifiers can be used to specify case and mode.\n;      \\A defaults to case-insensitive and universal mode, e.g. \\A === \\%i%uA\n;      Modifiers %i and %s determine case-insensitive and case-sensitive mode, respectively.\n;      Modifiers %u and %p determine universal mode and parent frame mode, respectively.\n;      Case and mode modifiers can appear in any order, e.g. \\%s%pA === \\%p%sA. \n;   7. String begin anchor, ABG(%^) matches the beginning of the input string location.\n;      Returns EMPTY or NOMATCH. Never consumes any characters.\n;   8. String end anchor, AEN(%$) matches the end of the input string location.\n;      Returns EMPTY or NOMATCH. Never consumes any characters.\n;\nFile            = *(BlankLine / Rule / RuleError)\nBlankLine       = *(%d32/%d9) [comment] LineEnd\nRule            = RuleLookup owsp Alternation ((owsp LineEnd)\n                / (LineEndError LineEnd))\nRuleLookup      = RuleNameTest owsp DefinedAsTest\nRuleNameTest    = RuleName/RuleNameError\nRuleName        = alphanum\nRuleNameError   = 1*(%d33-60/%d62-126)\nDefinedAsTest   = DefinedAs / DefinedAsError\nDefinedAsError  = 1*2%d33-126\nDefinedAs       = IncAlt / Defined\nDefined         = %d61\nIncAlt          = %d61.47\nRuleError       = 1*(%d32-126 / %d9  / LineContinue) LineEnd\nLineEndError    = 1*(%d32-126 / %d9  / LineContinue)\nAlternation     = Concatenation *(owsp AltOp Concatenation)\nConcatenation   = Repetition *(CatOp Repetition)\nRepetition      = [Modifier] (Group / Option / BasicElement / BasicElementErr)\nModifier        = (Predicate [RepOp])\n                / RepOp\nPredicate       = BkaOp\n                / BknOp\n                / AndOp\n                / NotOp\nBasicElement    = UdtOp\n                / RnmOp\n                / TrgOp\n                / TbsOp\n                / TlsOp\n                / ClsOp\n                / BkrOp\n                / AbgOp\n                / AenOp\n                / ProsVal\nBasicElementErr = 1*(%d33-40/%d42-46/%d48-92/%d94-126)\nGroup           = GroupOpen  Alternation (GroupClose / GroupError)\nGroupError      = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\nGroupOpen       = %d40 owsp\nGroupClose      = owsp %d41\nOption          = OptionOpen Alternation (OptionClose / OptionError)\nOptionError     = 1*(%d33-40/%d42-46/%d48-92/%d94-126) ; same as BasicElementErr\nOptionOpen      = %d91 owsp\nOptionClose     = owsp %d93\nRnmOp           = alphanum\nBkrOp           = %d92 [bkrModifier] bkr-name\nbkrModifier     = (cs [um / pm]) / (ci [um / pm]) / (um [cs /ci]) / (pm [cs / ci])\ncs              = '%s'\nci              = '%i'\num              = '%u'\npm              = '%p'\nbkr-name        = uname / ename / rname\nrname           = alphanum\nuname           = %d117.95 alphanum\nename           = %d101.95 alphanum\nUdtOp           = udt-empty\n                / udt-non-empty\nudt-non-empty   = %d117.95 alphanum\nudt-empty       = %d101.95 alphanum\nRepOp           = (rep-min StarOp rep-max)\n                / (rep-min StarOp)\n                / (StarOp rep-max)\n                / StarOp\n                / rep-min-max\nAltOp           = %d47 owsp\nCatOp           = wsp\nStarOp          = %d42\nAndOp           = %d38\nNotOp           = %d33\nBkaOp           = %d38.38\nBknOp           = %d33.33\nAbgOp           = %d37.94\nAenOp           = %d37.36\nTrgOp           = %d37 ((Dec dmin %d45 dmax) / (Hex xmin %d45 xmax) / (Bin bmin %d45 bmax))\nTbsOp           = %d37 ((Dec dString *(%d46 dString)) / (Hex xString *(%d46 xString)) / (Bin bString *(%d46 bString)))\nTlsOp           = TlsCase TlsOpen TlsString TlsClose\nTlsCase         = [\"%i\" / \"%s\"]\nTlsOpen         = %d34\nTlsClose        = %d34\nTlsString       = *(%d32-33/%d35-126/StringTab)\nStringTab       = %d9\nClsOp           = ClsOpen ClsString ClsClose\nClsOpen         = %d39\nClsClose        = %d39\nClsString       = *(%d32-38/%d40-126/StringTab)\nProsVal         = ProsValOpen ProsValString ProsValClose\nProsValOpen     = %d60\nProsValString   = *(%d32-61/%d63-126/StringTab)\nProsValClose    = %d62\nrep-min         = rep-num\nrep-min-max     = rep-num\nrep-max         = rep-num\nrep-num         = 1*(%d48-57)\ndString         = dnum\nxString         = xnum\nbString         = bnum\nDec             = (%d68/%d100)\nHex             = (%d88/%d120)\nBin             = (%d66/%d98)\ndmin            = dnum\ndmax            = dnum\nbmin            = bnum\nbmax            = bnum\nxmin            = xnum\nxmax            = xnum\ndnum            = 1*(%d48-57)\nbnum            = 1*%d48-49\nxnum            = 1*(%d48-57 / %d65-70 / %d97-102)\n;\n; Basics\nalphanum        = (%d97-122/%d65-90) *(%d97-122/%d65-90/%d48-57/%d45)\nowsp            = *space\nwsp             = 1*space\nspace           = %d32\n                / %d9\n                / comment\n                / LineContinue\ncomment         = %d59 *(%d32-126 / %d9)\nLineEnd         = %d13.10\n                / %d10\n                / %d13\nLineContinue    = (%d13.10 / %d10 / %d13) (%d32 / %d9)\n"}}},2242:function(e,t,r){e.exports=function(){const e=r(247),{ruleAttributes:t,showAttributes:n,showAttributeErrors:o}=r(2243),{ruleDependencies:l,showRuleDependencies:c}=r(2244);class d{constructor(e,t){this.rules=e,this.udts=t,this.ruleCount=e.length,this.udtCount=t.length,this.startRule=0,this.dependenciesComplete=!1,this.attributesComplete=!1,this.isMutuallyRecursive=!1,this.ruleIndexes=this.indexArray(this.ruleCount),this.ruleAlphaIndexes=this.indexArray(this.ruleCount),this.ruleTypeIndexes=this.indexArray(this.ruleCount),this.udtIndexes=this.indexArray(this.udtCount),this.udtAlphaIndexes=this.indexArray(this.udtCount),this.attrsErrorCount=0,this.attrs=[],this.attrsErrors=[],this.attrsWorking=[],this.ruleDeps=[];for(let i=0;i<this.ruleCount;i+=1)this.attrs.push(this.attrGen(this.rules[i])),this.attrsWorking.push(this.attrGen(this.rules[i])),this.ruleDeps.push(this.rdGen(e[i],this.ruleCount,this.udtCount));this.compRulesAlpha=this.compRulesAlpha.bind(this),this.compUdtsAlpha=this.compUdtsAlpha.bind(this),this.compRulesType=this.compRulesType.bind(this),this.compRulesGroup=this.compRulesGroup.bind(this)}attrGen(e){return{left:!1,nested:!1,right:!1,empty:!1,finite:!1,cyclic:!1,leaf:!1,isOpen:!1,isComplete:!1,rule:e}}attrInit(e){e.left=!1,e.nested=!1,e.right=!1,e.empty=!1,e.finite=!1,e.cyclic=!1,e.leaf=!1,e.isOpen=!1,e.isComplete=!1}attrCopy(e,t){e.left=t.left,e.nested=t.nested,e.right=t.right,e.empty=t.empty,e.finite=t.finite,e.cyclic=t.cyclic,e.leaf=t.leaf,e.isOpen=t.isOpen,e.isComplete=t.isComplete,e.rule=t.rule}rdGen(t,r,n){return{rule:t,recursiveType:e.ATTR_N,groupNumber:-1,refersTo:this.falseArray(r),refersToUdt:this.falseArray(n),referencedBy:this.falseArray(r)}}typeToString(t){switch(t){case e.ATTR_N:return" N";case e.ATTR_R:return" R";case e.ATTR_MR:return"MR";default:return"UNKNOWN"}}falseArray(e){const t=[];if(e>0)for(let i=0;i<e;i+=1)t.push(!1);return t}falsifyArray(a){for(let i=0;i<a.length;i+=1)a[i]=!1}indexArray(e){const t=[];if(e>0)for(let i=0;i<e;i+=1)t.push(i);return t}compRulesAlpha(e,t){return this.rules[e].lower<this.rules[t].lower?-1:this.rules[e].lower>this.rules[t].lower?1:0}compUdtsAlpha(e,t){return this.udts[e].lower<this.udts[t].lower?-1:this.udts[e].lower>this.udts[t].lower?1:0}compRulesType(e,t){return this.ruleDeps[e].recursiveType<this.ruleDeps[t].recursiveType?-1:this.ruleDeps[e].recursiveType>this.ruleDeps[t].recursiveType?1:0}compRulesGroup(t,r){if(this.ruleDeps[t].recursiveType===e.ATTR_MR&&this.ruleDeps[r].recursiveType===e.ATTR_MR){if(this.ruleDeps[t].groupNumber<this.ruleDeps[r].groupNumber)return-1;if(this.ruleDeps[t].groupNumber>this.ruleDeps[r].groupNumber)return 1}return 0}}return{attributes:function(e=[],r=[],n=[],o=[]){const c=new d(e,r);return l(c),t(c),c.attrsErrorCount&&o.push({line:0,char:0,msg:`${c.attrsErrorCount} attribute errors`}),c.attrsErrorCount},showAttributes:n,showAttributeErrors:o,showRuleDependencies:c}}()},2243:function(e,t,r){e.exports=function(){const e=r(247);let t=null;function n(e){return!(e.left||e.nested||e.right||e.cyclic)&&e.empty}function o(e){return!!(e.left||e.nested||e.right||e.cyclic)}function l(e,t,r,l){let i=0;const d=t[r],h=d.children.length,m=[];for(i=0;i<h;i+=1)m.push(e.attrGen());for(i=0;i<h;i+=1)c(e,t,d.children[i],m[i]);l.left=function(e,t){for(let i=0;i<t;i+=1){if(e[i].left)return!0;if(!e[i].empty)return!1}return!1}(m,h),l.right=function(e,t){for(let i=t-1;i>=0;i-=1){if(e[i].right)return!0;if(!e[i].empty)return!1}return!1}(m,h),l.nested=function(e,t){let i=0,r=0,l=0;for(i=0;i<t;i+=1)if(e[i].nested)return!0;for(i=0;i<t;i+=1)if(e[i].right&&!e[i].leaf)for(r=i+1;r<t;r+=1)if(!n(e[r]))return!0;for(i=t-1;i>=0;i-=1)if(e[i].left&&!e[i].leaf)for(r=i-1;r>=0;r-=1)if(!n(e[r]))return!0;for(i=0;i<t;i+=1)if(!e[i].empty&&!o(e[i]))for(r=i+1;r<t;r+=1)if(o(e[r]))for(l=r+1;l<t;l+=1)if(!e[l].empty&&!o(e[l]))return!0;return!1}(m,h),l.empty=function(e,t){for(let i=0;i<t;i+=1)if(!e[i].empty)return!1;return!0}(m,h),l.finite=function(e,t){for(let i=0;i<t;i+=1)if(!e[i].finite)return!1;return!0}(m,h),l.cyclic=function(e,t){for(let i=0;i<t;i+=1)if(!e[i].cyclic)return!1;return!0}(m,h)}function c(t,r,n,o){t.attrInit(o);const h=r[n];switch(h.type){case e.ALT:!function(e,t,r,n){let i=0;const o=t[r],l=o.children.length,d=[];for(i=0;i<l;i+=1)d.push(e.attrGen());for(i=0;i<l;i+=1)c(e,t,o.children[i],d[i]);for(n.left=!1,n.right=!1,n.nested=!1,n.empty=!1,n.finite=!1,n.cyclic=!1,i=0;i<l;i+=1)d[i].left&&(n.left=!0),d[i].nested&&(n.nested=!0),d[i].right&&(n.right=!0),d[i].empty&&(n.empty=!0),d[i].finite&&(n.finite=!0),d[i].cyclic&&(n.cyclic=!0)}(t,r,n,o);break;case e.CAT:l(t,r,n,o);break;case e.REP:c(t,r,n+1,o),0===h.min&&(o.empty=!0,o.finite=!0);break;case e.RNM:d(t,r[n].index,o);break;case e.BKR:!function(e,t,r,n){const o=t[r];o.index>=e.ruleCount?(n.empty=e.udts[o.index-e.ruleCount].empty,n.finite=!0):(d(e,o.index,n),n.left=!1,n.nested=!1,n.right=!1,n.cyclic=!1)}(t,r,n,o);break;case e.AND:case e.NOT:case e.BKA:case e.BKN:c(t,r,n+1,o),o.empty=!0;break;case e.TLS:o.empty=!r[n].string.length,o.finite=!0,o.cyclic=!1;break;case e.TBS:case e.TRG:o.empty=!1,o.finite=!0,o.cyclic=!1;break;case e.UDT:o.empty=h.empty,o.finite=!0,o.cyclic=!1;break;case e.ABG:case e.AEN:o.empty=!0,o.finite=!0,o.cyclic=!1;break;default:throw new Error(`unknown opcode type: ${h}`)}}function d(e,t,r){const n=e.attrsWorking[t];n.isComplete?e.attrCopy(r,n):n.isOpen?t===e.startRule?t===e.startRule&&(r.left=!0,r.right=!0,r.cyclic=!0,r.leaf=!0):r.finite=!0:(n.isOpen=!0,c(e,n.rule.opcodes,0,r),n.left=r.left,n.right=r.right,n.nested=r.nested,n.empty=r.empty,n.finite=r.finite,n.cyclic=r.cyclic,n.leaf=!1,n.isOpen=!1,n.isComplete=!0)}const h=e=>e?"t":"f",m=e=>e?"e":"f",f=(r,n,o,l)=>{let c=`${r}:${n}:`;return c+=`${m(o.left)} `,c+=`${h(o.nested)} `,c+=`${h(o.right)} `,c+=`${m(o.cyclic)} `,c+=(o.finite?"t":"e")+" ",c+=`${h(o.empty)}:`,c+=`${t.typeToString(l.recursiveType)}:`,c+=l.recursiveType===e.ATTR_MR?l.groupNumber:"-",c+=`:${o.rule.name}\n`,c},y=()=>{let e="LEGEND - t=true, f=false, e=error\n";return e+="sequence:rule index:left nested right cyclic finite empty:type:group number:rule name\n","LEGEND - t=true, f=false, e=error\nsequence:rule index:left nested right cyclic finite empty:type:group number:rule name\n"},x=e=>{let i=0,r=0,n=null,o=null,l="",{ruleIndexes:c}=t;for(97===e?c=t.ruleAlphaIndexes:116===e&&(c=t.ruleTypeIndexes),i=0;i<t.ruleCount;i+=1)r=c[i],n=t.attrs[r],o=t.ruleDeps[r],l+=f(i,r,n,o);return l};return{ruleAttributes:e=>{t=e;let i=0,r=0;const n=t.attrGen();for(i=0;i<t.ruleCount;i+=1){for(r=0;r<t.ruleCount;r+=1)t.attrInit(t.attrsWorking[r]);t.startRule=i,d(t,i,n),t.attrCopy(t.attrs[i],t.attrsWorking[i])}t.attributesComplete=!0;let o=null;for(i=0;i<t.ruleCount;i+=1)if(o=t.attrs[i],o.left||!o.finite||o.cyclic){const e=t.attrGen(o.rule);t.attrCopy(e,o),t.attrsErrors.push(e),t.attrsErrorCount+=1}},showAttributes:(e="index")=>{if(!t.attributesComplete)throw new Error("rule-attributes.js:showAttributes: attributes not available");let r="";const n="RULE ATTRIBUTES\n";return 97===e.charCodeAt(0)?(r+="alphabetical by rule name\n",r+=n,r+=y(),r+=x(97)):116===e.charCodeAt(0)?(r+="ordered by rule type\n",r+=n,r+=y(),r+=x(116)):(r+="ordered by rule index\n",r+=n,r+=y(),r+=x()),r},showAttributeErrors:()=>{let e=null,r=null,n="";if(n+="RULE ATTRIBUTES WITH ERRORS\n",n+=y(),t.attrsErrorCount)for(let i=0;i<t.attrsErrorCount;i+=1)e=t.attrsErrors[i],r=t.ruleDeps[e.rule.index],n+=f(i,e.rule.index,e,r);else n+="<none>\n";return n}}}()},2244:function(e,t,r){e.exports=(()=>{const e=r(247);let t=null;const n=(t,r,o,l)=>{let i=0,c=0;const d=r[o];l[o]=!0;const h=d.rule.opcodes;for(i=0;i<h.length;i+=1){const o=h[i];if(o.type===e.RNM)for(d.refersTo[o.index]=!0,l[o.index]||n(t,r,o.index,l),c=0;c<t;c+=1)r[o.index].refersTo[c]&&(d.refersTo[c]=!0);else o.type===e.UDT?d.refersToUdt[o.index]=!0:o.type===e.BKR&&(o.index<t?(d.refersTo[o.index]=!0,l[o.index]||n(t,r,o.index,l)):d.refersToUdt[t-o.index]=!0)}},o=(e=null)=>{let i=0,r=0,n=0,o=0;const l=t.ruleCount-1,c=t.udtCount-1;let d="",pre="";const h="=> ";let m=!1,f=null,{ruleIndexes:y}=t,{udtIndexes:x}=t;for(97===e?(y=t.ruleAlphaIndexes,x=t.udtAlphaIndexes):116===e&&(y=t.ruleTypeIndexes,x=t.udtAlphaIndexes),i=0;i<t.ruleCount;i+=1){for(f=t.ruleDeps[y[i]],pre=`${y[i]}:${t.typeToString(f.recursiveType)}:`,t.isMutuallyRecursive&&(pre+=f.groupNumber>-1?f.groupNumber:"-",pre+=":"),pre+=" ",d+=`${pre+t.rules[y[i]].name}\n`,m=!0,n=0,o=d.length,d+=pre,r=0;r<t.ruleCount;r+=1)f.refersTo[y[r]]&&(m?(d+=h,m=!1,d+=t.ruleDeps[y[r]].rule.name):d+=`, ${t.ruleDeps[y[r]].rule.name}`,n+=1),d.length-o>100&&r!==l&&(d+=`\n${pre}${h}`,o=d.length);if(t.udtCount)for(r=0;r<t.udtCount;r+=1)f.refersToUdt[x[r]]&&(m?(d+=h,m=!1,d+=t.udts[x[r]].name):d+=`, ${t.udts[x[r]].name}`,n+=1),d.length-o>100&&r!==c&&(d+=`\n${pre}${h}`,o=d.length);for(0===n&&(d+="=> <none>\n"),!1===m&&(d+="\n"),m=!0,n=0,o=d.length,d+=pre,r=0;r<t.ruleCount;r+=1)f.referencedBy[y[r]]&&(m?(d+="<= ",m=!1,d+=t.ruleDeps[y[r]].rule.name):d+=`, ${t.ruleDeps[y[r]].rule.name}`,n+=1),d.length-o>100&&r!==l&&(d+=`\n${pre}${h}`,o=d.length);0===n&&(d+="<= <none>\n"),!1===m&&(d+="\n"),d+="\n"}return d};return{ruleDependencies:r=>{t=r;let i=0,o=0,l=0,c=null,d=null,h=!1;t.dependenciesComplete=!1;const m=t.falseArray(t.ruleCount);for(i=0;i<t.ruleCount;i+=1)t.falsifyArray(m),n(t.ruleCount,t.ruleDeps,i,m);for(i=0;i<t.ruleCount;i+=1)for(o=0;o<t.ruleCount;o+=1)i!==o&&t.ruleDeps[o].refersTo[i]&&(t.ruleDeps[i].referencedBy[o]=!0);for(i=0;i<t.ruleCount;i+=1)t.ruleDeps[i].recursiveType=e.ATTR_N,t.ruleDeps[i].refersTo[i]&&(t.ruleDeps[i].recursiveType=e.ATTR_R);for(l=-1,i=0;i<t.ruleCount;i+=1)if(c=t.ruleDeps[i],c.recursiveType===e.ATTR_R)for(h=!0,o=0;o<t.ruleCount;o+=1)i!==o&&(d=t.ruleDeps[o],d.recursiveType===e.ATTR_R&&c.refersTo[o]&&d.refersTo[i]&&(h&&(l+=1,c.recursiveType=e.ATTR_MR,c.groupNumber=l,h=!1),d.recursiveType=e.ATTR_MR,d.groupNumber=l));t.isMutuallyRecursive=l>-1,t.ruleAlphaIndexes.sort(t.compRulesAlpha),t.ruleTypeIndexes.sort(t.compRulesAlpha),t.ruleTypeIndexes.sort(t.compRulesType),t.isMutuallyRecursive&&t.ruleTypeIndexes.sort(t.compRulesGroup),t.udtCount&&t.udtAlphaIndexes.sort(t.compUdtsAlpha),t.dependenciesComplete=!0},showRuleDependencies:(e="index")=>{let r="RULE DEPENDENCIES(index:type:[group number:])\n";return r+="=> refers to rule names\n",r+="<= referenced by rule names\n",t.dependenciesComplete?(97===e.charCodeAt(0)?(r+="alphabetical by rule name\n",r+=o(97)):116===e.charCodeAt(0)?(r+="ordered by rule type\n",r+=o(116)):(r+="ordered by rule index\n",r+=o(null)),r):r}}})()},2245:function(e,t){e.exports=function(){const e="show-rules.js";return function(t=[],r=[],n="index"){const o="showRules";let l=[],c=[];const d=[],h=[],m=t,f=r,y=t.length,x=r.length;let i,k="RULE/UDT NAMES";if(!Array.isArray(t)||!t.length)throw new Error(`${e}:${o}: rules arg must be array with length > 0`);if(!Array.isArray(r))throw new Error(`${e}:${o}: udts arg must be array`);for(i=0;i<y;i+=1)d.push(i);if(l=d.slice(0),l.sort((function(e,t){return m[e].lower<m[t].lower?-1:m[e].lower>m[t].lower?1:0})),x){for(i=0;i<x;i+=1)h.push(i);c=h.slice(0),c.sort((function(e,t){return f[e].lower<f[t].lower?-1:f[e].lower>f[t].lower?1:0}))}if(97===n.charCodeAt(0)){for(k+=" - alphabetical by rule/UDT name\n",i=0;i<y;i+=1)k+=`${i}: ${l[i]}: ${m[l[i]].name}\n`;if(x)for(i=0;i<x;i+=1)k+=`${i}: ${c[i]}: ${f[c[i]].name}\n`}else{for(k+=" - ordered by rule/UDT index\n",i=0;i<y;i+=1)k+=`${i}: ${m[i].name}\n`;if(x)for(i=0;i<x;i+=1)k+=`${i}: ${f[i].name}\n`}return k}}()}}]);