(window.webpackJsonp=window.webpackJsonp||[]).push([[892,159,691,713,753,776],{2455:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"GetUploadPresignURL"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"getPresignURLInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getUploadPresignURL"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"uploadURL"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"resourceURL"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:146}};t.loc.source={body:"mutation GetUploadPresignURL($input: getPresignURLInput!) {\n    getUploadPresignURL(input: $input) {\n        uploadURL\n        resourceURL\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.GetUploadPresignURL=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"GetUploadPresignURL")},2477:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredForAddress"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Cred"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"referenceLink"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastUpdate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credContractNFTHolder"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"subgraph"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endpoint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"query"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"metadata"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredMetaData"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"gitcoinPassport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastScoreTimestamp"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:404}};d.loc.source={body:"#import './CredMetaData.gql'\nfragment CredForAddress on Cred {\n  id\n  name\n  type\n  credType\n  credSource\n  referenceLink\n  description\n  lastUpdate\n  credContractNFTHolder {\n    timestamp\n  }\n  chain\n  eligible(address: $address)\n  subgraph {\n    endpoint\n    query\n    expression\n  }\n  metadata {\n    ...CredMetaData\n  }\n  value {\n    gitcoinPassport {\n      score\n      lastScoreTimestamp\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};d.definitions=d.definitions.concat(t(2544).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))),e.exports=d},2484:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"MultiDimensionCred"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MultiDimensionCredConfig"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"dataType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dataSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dataTags"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"abiBytes"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"handlerType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aggregatorDetail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updaterDetail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"handlerPeriodType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"handlerEndBlock"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"handlerEndTimestamp"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subscriberCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dataSchema"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dataDefaultValue"},arguments:[],directives:[]}]}}],loc:{start:0,end:283}};t.loc.source={body:"fragment MultiDimensionCred on MultiDimensionCredConfig {\n  dataType\n  dataSource\n  contractAddress\n  dataTags\n  abiBytes\n  handlerType\n  aggregatorDetail\n  updaterDetail\n  handlerPeriodType\n  handlerEndBlock\n  handlerEndTimestamp\n  subscriberCount\n  dataSchema\n  dataDefaultValue\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2493:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredBasic"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Cred"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"curatorSpace"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"referenceLink"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subgraph"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endpoint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"query"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:293}};t.loc.source={body:"\nfragment CredBasic on Cred {\n    id\n    name\n    description\n    chain\n    credType\n    credSource\n    # curatorAddress\n    curatorSpace{\n      id\n      alias\n      name\n      isVerified\n      thumbnail\n    }\n    referenceLink\n    subgraph{\n      endpoint\n      query\n      expression\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2494:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredQuizFrag"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Cred"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"credQuiz"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"quizzes"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"items"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:130}};t.loc.source={body:"fragment CredQuizFrag on Cred {\n  credQuiz {\n    quizzes {\n      title\n      type\n      items {\n        value\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2498:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"addCredential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutateCredInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"credential"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:97}};t.loc.source={body:"mutation addCredential($input:MutateCredInput!){\n    credential(input:$input){\n        id\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.addCredential=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"addCredential")},2499:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"createcred"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutateCredInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"credential"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:94}};t.loc.source={body:"mutation createcred($input:MutateCredInput!){\n    credential(input:$input){\n        id\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.createcred=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"createcred")},2502:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RefreshCredentialValue"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"RefreshCredentialValueInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"refreshCredentialValue"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"allow"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:150}};t.loc.source={body:"mutation RefreshCredentialValue($input: RefreshCredentialValueInput!) {\n  refreshCredentialValue(input: $input) {\n    value {\n      allow\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RefreshCredentialValue=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RefreshCredentialValue")},2503:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RequestGoogleSheetUpdate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PollCredentialPollerConnectionInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pollCredentialPollerConnection"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[]}]}}],loc:{start:0,end:131}};t.loc.source={body:"mutation RequestGoogleSheetUpdate($input: PollCredentialPollerConnectionInput!) {\n  pollCredentialPollerConnection(input: $input)\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RequestGoogleSheetUpdate=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RequestGoogleSheetUpdate")},2504:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"PrepareParticipate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PrepareParticipateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"prepareParticipate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"allow"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"disallowReason"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nonce"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mintFuncInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"funcName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCoreAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verifyIDs"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"powahs"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"extLinkResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"success"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"data"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"error"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"metaTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"metaSig2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"autoTaskUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metaSpaceAddr"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"forwarderAddr"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metaTxHash"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reqQueueing"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"solanaTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateAuthority"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"explorerUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signedTx"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verifyID"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"aptosTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signatureExpiredAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenName"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenRewardCampaignTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signatureExpiredAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verifyID"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"loyaltyPointsTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"TotalClaimedPoints"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:759}};t.loc.source={body:"mutation PrepareParticipate($input: PrepareParticipateInput!) {\n  prepareParticipate(input: $input) {\n    allow\n    disallowReason\n    signature\n    nonce\n    mintFuncInfo {\n      funcName\n      nftCoreAddress\n      verifyIDs\n      powahs\n      cap\n    }\n    extLinkResp {\n      success\n      data\n      error\n    }\n    metaTxResp {\n      metaSig2\n      autoTaskUrl\n      metaSpaceAddr\n      forwarderAddr\n      metaTxHash\n      reqQueueing\n    }\n    solanaTxResp {\n      mint\n      updateAuthority\n      explorerUrl\n      signedTx\n      verifyID\n    }\n    aptosTxResp {\n      signatureExpiredAt\n      tokenName\n    }\n    tokenRewardCampaignTxResp {\n      signatureExpiredAt\n      verifyID\n    }\n    loyaltyPointsTxResp {\n      TotalClaimedPoints\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.PrepareParticipate=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"PrepareParticipate")},2511:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyCredential"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyCredentialInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyCredential"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[]}]}}],loc:{start:0,end:96}};t.loc.source={body:"mutation VerifyCredential($input: VerifyCredentialInput!) {\n  verifyCredential(input: $input)\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifyCredential=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifyCredential")},2544:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredMetaData"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"CredMetadata"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"visitLink"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"link"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"gitcoinPassport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"config"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"lastScoreTimestamp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"config"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:250}};t.loc.source={body:"fragment CredMetaData on CredMetadata {\n  visitLink {\n    link\n  }\n  gitcoinPassport {\n    score {\n      title\n      type\n      description\n      config\n    }\n    lastScoreTimestamp {\n      title\n      type\n      description\n      config\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2566:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredentialGroupForAddress"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"CredentialGroup"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credentials"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredForAddress"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionRelation"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewards"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardAttrVals"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrTitle"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrVal"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[],directives:[]}]}}],loc:{start:0,end:378}};d.loc.source={body:"#import './CredForAddress.gql'\n\nfragment CredentialGroupForAddress on CredentialGroup {\n  id\n  description\n  credentials {\n    ...CredForAddress\n  }\n  conditionRelation\n  conditions {\n    expression\n    eligible\n  }\n  rewards {\n    expression\n    eligible\n    rewardCount\n    rewardType\n  }\n  rewardAttrVals {\n    attrName\n    attrTitle\n    attrVal\n  }\n  claimedLoyaltyPoints\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};d.definitions=d.definitions.concat(t(2477).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))),e.exports=d},2575:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"ExpressionEntity"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ExprEntity"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cred"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"referenceLink"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastUpdate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"metadata"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"visitLink"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"link"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"attrs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"operatorSymbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"targetValue"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"attrFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}}],loc:{start:0,end:391}};d.loc.source={body:"#import './Credential/CredForAddress.gql'\n\nfragment ExpressionEntity on ExprEntity {\n  cred {\n    id\n    name\n    type\n    credType\n    credSource\n    referenceLink\n    description\n    lastUpdate\n    chain\n    eligible(address: $address)\n    metadata {\n      visitLink {\n        link\n      }\n    }\n  }\n  attrs {\n    attrName\n    operatorSymbol\n    targetValue\n  }\n  attrFormula\n  eligible\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};d.definitions=d.definitions.concat(t(2477).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))),e.exports=d},2576:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyConditionEntity"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"verifyConditionEntityInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyConditionEntity"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[]}]}}],loc:{start:0,end:111}};t.loc.source={body:"mutation VerifyConditionEntity($input: verifyConditionEntityInput!) {\n  verifyConditionEntity(input: $input)\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifyConditionEntity=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifyConditionEntity")},2602:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateAccessToken"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateAccessTokenInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateAccessToken"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"accessToken"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:120}};t.loc.source={body:"mutation UpdateAccessToken($input: UpdateAccessTokenInput!) {\n  updateAccessToken(input: $input) {\n    accessToken\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateAccessToken=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateAccessToken")},2603:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RemoveAccessToken"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"RemoveAccessTokenInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeAccessToken"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:125}};t.loc.source={body:"mutation RemoveAccessToken($input: RemoveAccessTokenInput!) {\n  removeAccessToken(input: $input) {\n    code\n    message\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RemoveAccessToken=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RemoveAccessToken")},2609:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"DeleteSocialAccount"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DeleteSocialAccountInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"deleteSocialAccount"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:131}};t.loc.source={body:"mutation DeleteSocialAccount($input: DeleteSocialAccountInput!) {\n  deleteSocialAccount(input: $input) {\n    code\n    message\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.DeleteSocialAccount=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"DeleteSocialAccount")},2618:function(e,n,t){"use strict";t.d(n,"c",(function(){return o})),t.d(n,"b",(function(){return l})),t.d(n,"a",(function(){return m}));t(706),t(71),t(91),t(16),t(85),t(43),t(99),t(129),t(48),t(36);var d=t(233),r=t.n(d),o=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;"string"==typeof e&&(e=new r.a(e));var t=e.toFixed(n);if(t.includes("."))for(;t.length>0;){if("."===t[t.length-1]){t=t.substr(0,t.length-1);break}if("0"!==t[t.length-1])break;t=t.substr(0,t.length-1)}return t},l=function(e){var n=e;"string"!=typeof n&&(n=(null==e?void 0:e.toString())||"");var t=n.split(".");return t[0]=t[0].replace(/\B(?=(\d{3})+(?!\d))/g,","),t.join(".")},m=function(address){return address.length<=10?address:"".concat(address.substring(0,6),"...").concat(address.substring(address.length-4,address.length))}},2626:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RemoveEthAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateEthAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeEthAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:110}};t.loc.source={body:"mutation RemoveEthAddress($input: UpdateEthAddressInput!) {\n  removeEthAddress(input: $input) {\n    code\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RemoveEthAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RemoveEthAddress")},2627:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RemoveSolanaAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateSolanaAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeSolanaAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:119}};t.loc.source={body:"mutation RemoveSolanaAddress($input: UpdateSolanaAddressInput!) {\n  removeSolanaAddress(input: $input) {\n    code\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RemoveSolanaAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RemoveSolanaAddress")},2628:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RemoveAptosAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateAptosAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeAptosAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:116}};t.loc.source={body:"mutation RemoveAptosAddress($input: UpdateAptosAddressInput!) {\n  removeAptosAddress(input: $input) {\n    code\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RemoveAptosAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RemoveAptosAddress")},2629:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RemoveSeiAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateSeiAddressInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeSeiAddress"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:111}};t.loc.source={body:"mutation RemoveSeiAddress($input: UpdateSeiAddressInput!) {\n  removeSeiAddress(input: $input) {\n    code\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RemoveSeiAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RemoveSeiAddress")},2674:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CampaignDetailFrag"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Campaign"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"CampaignMedia"},directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"useCred"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"formula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"creator"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gasType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isPrivate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requirementInfo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"enableWhitelist"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requireEmail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requireUsername"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"blacklistCountryCodes"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"whitelistRegions"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"distributionType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimEndTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loyaltyPoints"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardContract"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenReward"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"depositedTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardId"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nftHolderSnapshot"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"holderSnapshotBlock"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"spaceStation"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"WhitelistInfoFrag"},directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"WhitelistSubgraphFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"GamificationDetailFrag"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"creds"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredForAddress"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credentialGroups"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredentialGroupForAddress"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"dao"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"DaoSnap"},directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCores"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"capable"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"marketLink"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"rewardInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"discordRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"inviteLink"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"premint"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"price"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalSupply"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"banner"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"loyaltyPoints"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"loyaltyPointsMysteryBox"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"weight"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participantsCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bountyWinnersCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"taskConfig"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participateCondition"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ExpressionEntity"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionalFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardConfigs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ExpressionEntity"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionalFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewards"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ExpressionReward"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardAttrVals"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrTitle"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrVal"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"recurringType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"latestRecurringTime"},arguments:[],directives:[]}]}}],loc:{start:0,end:2238}};d.loc.source={body:"#import './DaoSnap.gql'\n#import './CampaignMedia.gql'\n#import './Credential/CredForAddress.gql'\n#import './Credential/CredentialGroupForAddress.gql'\n#import './WhitelistInfoFrag.gql'\n#import './WhitelistSubgraphFrag.gql'\n#import './GamificationDetailFrag.gql'\n#import './ExpressionEntity.gql'\n#import './ExpressionReward.gql'\n\nfragment CampaignDetailFrag on Campaign {\n  id\n  ...CampaignMedia\n  name\n  numberID\n  type\n  cap\n  info\n  useCred\n  formula\n  status\n  creator\n  thumbnail\n  gasType\n  isPrivate\n  createdAt\n  requirementInfo\n  description\n  enableWhitelist\n  chain\n  startTime\n  endTime\n  requireEmail\n  requireUsername\n  blacklistCountryCodes\n  whitelistRegions\n  rewardType\n  distributionType\n  rewardName\n  claimEndTime\n  loyaltyPoints\n  tokenRewardContract {\n    id\n    address\n    chain\n  }\n  tokenReward {\n    userTokenAmount\n    tokenAddress\n    depositedTokenAmount\n    tokenRewardId\n  }\n  nftHolderSnapshot {\n    holderSnapshotBlock\n  }\n  spaceStation {\n    id\n    address\n    chain\n  }\n  ...WhitelistInfoFrag\n  ...WhitelistSubgraphFrag\n  gamification {\n    ...GamificationDetailFrag\n  }\n  creds {\n    ...CredForAddress\n  }\n  credentialGroups(address: $address) {\n    ...CredentialGroupForAddress\n  }\n  dao {\n    ...DaoSnap\n    nftCores {\n      list {\n        capable\n        marketLink\n        contractAddress\n      }\n    }\n  }\n  rewardInfo {\n    discordRole {\n      guildId\n      guildName\n      roleId\n      roleName\n      inviteLink\n    }\n    premint {\n      startTime\n      endTime\n      chain\n      price\n      totalSupply\n      contractAddress\n      banner\n    }\n    loyaltyPoints {\n      points\n    }\n    loyaltyPointsMysteryBox {\n      points\n      weight\n    }\n  }\n  participants {\n    participantsCount\n    bountyWinnersCount\n  }\n  taskConfig(address: $address) {\n    participateCondition {\n      conditions {\n        ...ExpressionEntity\n      }\n      conditionalFormula\n      eligible\n    }\n    rewardConfigs {\n      conditions {\n        ...ExpressionEntity\n      }\n      conditionalFormula\n      description\n      rewards {\n        ...ExpressionReward\n      }\n      eligible\n      rewardAttrVals {\n        attrName\n        attrTitle\n        attrVal\n      }\n    }\n  }\n  recurringType\n  latestRecurringTime\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}d.definitions=d.definitions.concat(o(t(1370).definitions)),d.definitions=d.definitions.concat(o(t(1371).definitions)),d.definitions=d.definitions.concat(o(t(2477).definitions)),d.definitions=d.definitions.concat(o(t(2566).definitions)),d.definitions=d.definitions.concat(o(t(2748).definitions)),d.definitions=d.definitions.concat(o(t(2749).definitions)),d.definitions=d.definitions.concat(o(t(2750).definitions)),d.definitions=d.definitions.concat(o(t(2575).definitions)),d.definitions=d.definitions.concat(o(t(2752).definitions)),e.exports=d},2675:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"SpaceDetail"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Space"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"links"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildID"},arguments:[],directives:[]}]}}],loc:{start:0,end:111}};t.loc.source={body:"fragment SpaceDetail on Space {\n  id\n  name\n  info\n  thumbnail\n  alias\n  links\n  isVerified\n  discordGuildID\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2679:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"AddTypedCredentialItems"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutateTypedCredItemInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"typedCredentialItems"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:119}};t.loc.source={body:"mutation AddTypedCredentialItems($input:MutateTypedCredItemInput!){\n  typedCredentialItems(input:$input){\n    id\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.AddTypedCredentialItems=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"AddTypedCredentialItems")},2738:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"UpdateSubscription"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UpdateSubscriptionInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"updateSubscription"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:124}};t.loc.source={body:"mutation UpdateSubscription($input: UpdateSubscriptionInput!) {\n    updateSubscription(input: $input) {\n        code\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UpdateSubscription=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"UpdateSubscription")},2744:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"Participate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ParticipateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participated"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:104}};t.loc.source={body:"mutation Participate($input: ParticipateInput!){\n    participate(input:$input){\n    participated\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.Participate=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"Participate")},2745:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"addCampaign"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutateCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimEndTime"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:149}};t.loc.source={body:"mutation addCampaign($input:MutateCampaignInput!){\n    campaign(input:$input){\n        id\n        numberID\n        name\n        claimEndTime\n    }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.addCampaign=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"addCampaign")},2748:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"WhitelistInfoFrag"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Campaign"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"whitelistInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"maxCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"usedCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentPeriodClaimedLoyaltyPoints"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentPeriodMaxLoyaltyPoints"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:225}};t.loc.source={body:"fragment WhitelistInfoFrag on Campaign {\n  id\n  whitelistInfo(address: $address) {\n    address\n    maxCount\n    usedCount\n    claimedLoyaltyPoints\n    currentPeriodClaimedLoyaltyPoints\n    currentPeriodMaxLoyaltyPoints\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2749:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"WhitelistSubgraphFrag"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Campaign"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"whitelistSubgraph"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"query"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endpoint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"variable"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:143}};t.loc.source={body:"\nfragment WhitelistSubgraphFrag on Campaign {\n    id\n    whitelistSubgraph {\n      query\n      endpoint\n      expression\n      variable\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2750:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"GamificationDetailFrag"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Gamification"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nfts"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nft"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"animationURL"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"category"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"powah"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"treasureBack"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"NftCoreInfoFrag"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"traits"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"airdrop"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"token"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"icon"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"merkleTreeUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"index"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"amount"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"amount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"ether"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"proofs"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"forgeConfig"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"minNFTCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"maxNFTCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requiredNFTs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nft"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"category"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"powah"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"capable"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"count"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:801}};d.loc.source={body:"#import './NftCoreInfoFrag.gql'\n\nfragment GamificationDetailFrag on Gamification {\n  id\n  type\n  nfts {\n    nft {\n      id\n      animationURL\n      category\n      powah\n      image\n      name\n      treasureBack\n      nftCore {\n        ...NftCoreInfoFrag\n      }\n      traits{\n        name\n        value\n      }\n    }\n  }\n  airdrop {\n    name\n    contractAddress\n    token {\n      address\n      icon\n      symbol\n    }\n    merkleTreeUrl\n    addressInfo(address: $address) {\n      index\n      amount {\n        amount\n        ether\n      }\n      proofs\n    }\n  }\n  forgeConfig {\n    minNFTCount\n    maxNFTCount\n    requiredNFTs {\n      nft {\n        category\n        powah\n        image\n        name\n        nftCore {\n          capable\n          contractAddress\n        }\n      }\n      count\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};d.definitions=d.definitions.concat(t(2751).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))),e.exports=d},2751:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"NftCoreInfoFrag"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"NFTCore"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"capable"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"dao"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"logo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:173}};t.loc.source={body:"fragment NftCoreInfoFrag on NFTCore {\n    id\n    capable\n    chain\n    contractAddress\n    name\n    symbol\n    dao {\n      id\n      name\n      logo\n      alias\n    }     \n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2752:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"ExpressionReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ExprReward"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"arithmetics"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ExpressionEntity"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"arithmeticFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardVal"},arguments:[],directives:[]}]}}],loc:{start:0,end:181}};d.loc.source={body:"#import './ExpressionEntity.gql'\n\nfragment ExpressionReward on ExprReward {\n  arithmetics {\n    ...ExpressionEntity\n  }\n  arithmeticFormula\n  rewardType\n  rewardCount\n  rewardVal\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};d.definitions=d.definitions.concat(t(2575).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))),e.exports=d},2754:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifyCredentialCondition"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifyCredentialGroupConditionInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifyCondition"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[]}]}}],loc:{start:0,end:122}};t.loc.source={body:"mutation VerifyCredentialCondition(\n  $input: VerifyCredentialGroupConditionInput!\n) {\n  verifyCondition(input: $input)\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifyCredentialCondition=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifyCredentialCondition")},2788:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"addBookmark"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AddBookmarkInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addBookmark"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:107}};t.loc.source={body:"mutation addBookmark($input: AddBookmarkInput!) {\n  addBookmark(input: $input) {\n    code\n    message\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.addBookmark=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"addBookmark")},2923:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"removeBookmark"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"RemoveBookmarkInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeBookmark"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:116}};t.loc.source={body:"mutation removeBookmark($input: RemoveBookmarkInput!) {\n  removeBookmark(input: $input) {\n    code\n    message\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.removeBookmark=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"removeBookmark")},3023:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"CreateReportTicket"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"CreateTicketInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createTicket"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:117}};t.loc.source={body:"mutation CreateReportTicket($input: CreateTicketInput!) {\n  createTicket(input: $input) {\n    code\n    message\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.CreateReportTicket=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"CreateReportTicket")},3109:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"ParticipateSolanaCampaign"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ParticipateSolanaInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participateSolana"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"success"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"failReason"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateAuthority"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"explorerUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signature"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:199}};t.loc.source={body:"mutation ParticipateSolanaCampaign($input: ParticipateSolanaInput!) {\n   participateSolana(input: $input) {\n    success\n    failReason\n    mint\n    updateAuthority\n    explorerUrl\n    signature\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.ParticipateSolanaCampaign=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"ParticipateSolanaCampaign")},3584:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"AddSecondaryAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AddSecondaryAccountInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addSecondaryAccount"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:132}};t.loc.source={body:"mutation AddSecondaryAddress($input: AddSecondaryAccountInput!) {\n  addSecondaryAccount(input: $input) {\n    code\n    message\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.AddSecondaryAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"AddSecondaryAddress")}}]);