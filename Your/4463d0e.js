(window.webpackJsonp=window.webpackJsonp||[]).push([[902,1036],{2541:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"campaignParticipants"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pfirst"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pafter"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"wfirst"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"wafter"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"pDownload"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"bDownload"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"isParent"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},defaultValue:{kind:"BooleanValue",value:!1},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numNFTMinted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[{kind:"Directive",name:{kind:"Name",value:"skip"},arguments:[{kind:"Argument",name:{kind:"Name",value:"if"},value:{kind:"Variable",name:{kind:"Name",value:"isParent"}}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"pfirst"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"pafter"}}},{kind:"Argument",name:{kind:"Name",value:"download"},value:{kind:"Variable",name:{kind:"Name",value:"pDownload"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aptosAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"participantsCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bountyWinners"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"wfirst"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"wafter"}}},{kind:"Argument",name:{kind:"Name",value:"download"},value:{kind:"Variable",name:{kind:"Name",value:"bDownload"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"email"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"solanaAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"aptosAddress"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"bountyWinnersCount"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:1318}};t.loc.source={body:"query campaignParticipants($id: ID!, $pfirst: Int!, $pafter: String!, $wfirst: Int!, $wafter: String!, $pDownload: Boolean!= false, $bDownload: Boolean!= false, $isParent: Boolean = false) {\n  campaign(id: $id) {\n    id\n    numberID\n    numNFTMinted\n    participants @skip(if: $isParent) {\n      participants(first: $pfirst, after: $pafter, download: $pDownload) {\n        # campaign all participants; if campaign is bounty, it will return no winner participants\n        list {\n          username\n          avatar\n          address\n          email\n          solanaAddress\n          aptosAddress\n          discordUserID\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n      participantsCount # campaign all participants count; if campaign is bounty, it will return no winner participants count\n      bountyWinners(first: $wfirst, after: $wafter, download: $bDownload) {\n        # bounty raffle campaign winner list, non-raffle campaign will return null\n        list {\n          username\n          avatar\n          address\n          email\n          solanaAddress\n          aptosAddress\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n      bountyWinnersCount # bounty raffle campaign winner count, non-raffle campaign return 0\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.campaignParticipants=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"campaignParticipants")},2746:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CampaignInfoForEdit"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"formula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isPrivate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gasType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"requireIntegrate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"distributionType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimEndTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numNFTMinted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardContract"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenReward"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"depositedTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasDeposited"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"withdrawnTokenAmount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nftTemplates"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"probability"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"animationURL"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isTemplate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"traits"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"discordRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"inviteLink"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"premint"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"price"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalSupply"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"banner"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"loyaltyPointsMysteryBox"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"weight"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"credentialGroups"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credentials"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credSource"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionRelation"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewards"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isSequencial"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"recurringType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"taskConfig"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participateCondition"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cred"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionalFormula"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardConfigs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cred"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"attrs"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"attrFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewards"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"arithmetics"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cred"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"arithmeticFormula"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionalFormula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardAttrVals"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrTitle"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrVal"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:2328}};t.loc.source={body:"query CampaignInfoForEdit($id: ID!, $address: String!) {\n  campaign(id: $id) {\n    id\n    space {\n      id\n    }\n    nftCore {\n      id\n    }\n    numberID\n    name\n    description\n    thumbnail\n    startTime\n    endTime\n    status\n    formula\n    cap\n    isPrivate\n    gasType\n    type\n    requireIntegrate\n    rewardType\n    distributionType\n    rewardName\n    chain\n    claimEndTime\n    numNFTMinted\n    tokenRewardContract {\n      id\n      address\n      chain\n    }\n    tokenReward {\n      userTokenAmount\n      tokenAddress\n      depositedTokenAmount\n      tokenRewardId\n      hasDeposited\n      withdrawnTokenAmount\n    }\n    nftTemplates {\n      id\n      name\n      image\n      probability\n      animationURL\n      isTemplate\n      traits {\n        name\n        value\n      }\n    }\n    childrenCampaigns {\n      id\n      thumbnail\n      numberID\n      name\n      status\n      type\n    }\n    rewardInfo {\n      discordRole {\n        guildId\n        guildName\n        roleId\n        roleName\n        inviteLink\n      }\n      premint {\n        startTime\n        endTime\n        chain\n        price\n        totalSupply\n        contractAddress\n        banner\n      }\n      loyaltyPointsMysteryBox {\n        points\n        weight\n      }\n    }\n    credentialGroups(address: $address) {\n      id,\n      description,\n      credentials {\n        id\n        name\n        credSource\n      },\n      conditionRelation,\n      conditions {\n        expression\n      },\n      rewards {\n        expression\n        rewardType\n      },\n      claimedLoyaltyPoints,\n    }\n    isSequencial\n    recurringType\n    taskConfig (address: $address){\n      participateCondition {\n        conditions{\n          cred{\n            id\n          }\n          eligible\n        }\n        conditionalFormula\n      }\n      rewardConfigs{\n        conditions{\n          cred{\n            id\n          }\n          attrs{\n            attrName\n          }\n          attrFormula\n          eligible\n        }\n        rewards{\n          arithmetics{\n            cred{\n              id\n              credType\n            }\n            eligible\n          }\n          rewardCount\n          arithmeticFormula\n        }\n        conditionalFormula\n        eligible\n        rewardAttrVals{\n          attrName\n          attrTitle\n          attrVal\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.CampaignInfoForEdit=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"CampaignInfoForEdit")},2747:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CampaignsBySpace"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"campaigns"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenReward"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"tokenAddress"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenRewardContract"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:594}};t.loc.source={body:"query CampaignsBySpace($id: Int!, $input: ListCampaignInput!) {\n    space(id:$id) {\n        id\n        campaigns(input:$input){\n            pageInfo{\n                endCursor\n                hasNextPage\n            }\n            list{\n                numberID\n                id\n                status\n                name\n                thumbnail\n                type\n                tokenReward{\n                    tokenAddress\n                }\n                tokenRewardContract{\n                    id\n                    chain\n                }\n            }\n               \n    }\n}\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.CampaignsBySpace=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"CampaignsBySpace")},2761:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"DiscordGuilds"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListGuildInfoInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"listGuildInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GuildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"GuildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"Channels"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ChannelId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"ChannelName"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"Roles"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"RoleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"RoleName"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"joinAt"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:318}};t.loc.source={body:"query DiscordGuilds($input:ListGuildInfoInput!) {\n  listGuildInfo(input:$input) {\n    pageInfo{\n      hasNextPage\n    }\n    totalCount\n    list {\n      GuildId\n      GuildName\n      Channels {\n        ChannelId\n        ChannelName\n      }\n      Roles {\n        RoleId\n        RoleName\n      }\n      joinAt\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.DiscordGuilds=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"DiscordGuilds")},3009:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceBasic"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasicFrag"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"unclaimedBackfillLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"addressLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rank"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:328}};d.loc.source={body:"#import '../fragments/SpaceBasicFrag.gql'\nquery SpaceBasic($id:Int,$address: String!) {\n  space(id: $id) {\n    ...SpaceBasicFrag\n\n    isAdmin(address: $address)\n\n    discordGuildID\n\n    unclaimedBackfillLoyaltyPoints(address: $address)\n\n    addressLoyaltyPoints(address: $address) {\n      id\n      points\n      rank\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){l(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){l(e,n)})),e.definitions&&e.definitions.forEach((function(e){l(e,n)}))}d.definitions=d.definitions.concat(t(709).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var m={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;l(e,n),m[e.name.value]=n}})),e.exports=d,e.exports.SpaceBasic=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=m[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var c=l;l=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(m[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceBasic")},3010:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceByAddress"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaces"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"listSpaceInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasicFrag"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:288}};d.loc.source={body:"#import '../fragments/SpaceBasicFrag.gql'\nquery SpaceByAddress($address: String!,$listSpaceInput:ListSpaceInput!) {\n    addressInfo(address: $address)  {\n        id\n        spaces(input:$listSpaceInput){\n            list{\n                 ...SpaceBasicFrag\n            }\n        }\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){l(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){l(e,n)})),e.definitions&&e.definitions.forEach((function(e){l(e,n)}))}d.definitions=d.definitions.concat(t(709).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var m={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;l(e,n),m[e.name.value]=n}})),e.exports=d,e.exports.SpaceByAddress=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=m[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var c=l;l=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(m[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceByAddress")},3011:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceDepthInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaceTwitter"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"Name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"FollowerCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"spaceGuild"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"memberCount"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:222}};t.loc.source={body:"query SpaceDepthInfo($id: Int, $alias: String) {\n  space(id: $id, alias: $alias) {\n    id\n    spaceTwitter {\n      Id\n      Name\n      FollowerCount\n    }\n    spaceGuild {\n      id\n      name\n      memberCount\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceDepthInfo=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceDepthInfo")},3021:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"MySpacesQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaces"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]}]}}]}}]}}]}}],loc:{start:0,end:238}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\nquery MySpacesQuery($address: String!, $input: ListSpaceInput!) {\n  addressInfo(address: $address) {\n    id\n    spaces(input: $input) {\n      list {\n        ...SpaceBasic\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){l(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){l(e,n)})),e.definitions&&e.definitions.forEach((function(e){l(e,n)}))}d.definitions=d.definitions.concat(t(903).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)})));var m={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;l(e,n),m[e.name.value]=n}})),e.exports=d,e.exports.MySpacesQuery=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=m[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var c=l;l=new Set,c.forEach((function(e){r.has(e)||(r.add(e),(m[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(d,"MySpacesQuery")},3102:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"nftHolder"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"after"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"block"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftHolderSnapshot"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"holders"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}},{kind:"Argument",name:{kind:"Name",value:"block"},value:{kind:"Variable",name:{kind:"Name",value:"block"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasPreviousPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"holder"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:376}};t.loc.source={body:"query nftHolder($id: ID!, $first: Int!, $after: String!, $block: Int!){\n  campaign(id: $id) {\n    id\n    nftHolderSnapshot{\n      holders(first: $first, after: $after, block: $block) {\n        pageInfo{\n          hasNextPage\n          hasPreviousPage\n          startCursor\n          endCursor\n        }\n        list{\n          id\n          holder\n        }\n      }\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.nftHolder=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"nftHolder")},3103:function(e,n,t){"use strict";t.d(n,"a",(function(){return d}));var d=["1","3","4","5","8","9","10","11","12","13","14","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","49","50","52","54","56","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","81","82","83","84","85","86","87","88","89","90","91","93","94","95","96","98","99","100","105","106","107","108","109","110","111","112","113","114","116","117","121","122","123","125","131","132","170","262"]},3217:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetBasicSpaceInfo"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"links"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isVerified"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"categories"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"chains"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"token"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"backers"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildInfo"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:341}};t.loc.source={body:"query GetBasicSpaceInfo($id: Int, $alias: String, $address: String) {\n  space(id: $id, alias: $alias) {\n    id\n    name\n    thumbnail\n    info\n    alias\n    links\n    isVerified\n    categories\n    isAdmin(address: $address)\n    chains\n    token\n    backers\n    twitterUserID\n    twitterUserName\n    discordGuildID\n    discordGuildInfo\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.GetBasicSpaceInfo=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"GetBasicSpaceInfo")},3460:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceCampaignsQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"campaigns"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"discordRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"inviteLink"},arguments:[],directives:[]}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"isBookmarked"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:835}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\n#import '../../fragments/Space/SpaceCampaignBasic.gql'\nquery SpaceCampaignsQuery(\n  $id: Int\n  $alias: String\n  $address: String!\n  $campaignInput: ListCampaignInput!\n) {\n  space(id: $id, alias: $alias) {\n    ...SpaceBasic\n\n    # isAdmin\n    isAdmin(address: $address)\n\n    # campaigns\n    campaigns(input: $campaignInput) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      \n      list {\n        ...SpaceCampaignBasic\n        childrenCampaigns {\n          id\n          type\n          rewardName\n          rewardInfo {\n            discordRole {\n              guildId\n              guildName\n              roleId\n              roleName\n              inviteLink\n            }\n          }\n        }\n        isBookmarked(address: $address)\n        info\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}d.definitions=d.definitions.concat(l(t(903).definitions)),d.definitions=d.definitions.concat(l(t(2864).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=d,e.exports.SpaceCampaignsQuery=function(e,n){var t={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=o[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=c(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceCampaignsQuery")},3542:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceCategories"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceCategories"},arguments:[],directives:[]}]}}],loc:{start:0,end:45}};t.loc.source={body:"query SpaceCategories {\n    spaceCategories\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceCategories=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceCategories")},3543:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"BotGuildStatus"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"BotGuildStatusInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"botGuildStatus"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasJoined"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:133}};t.loc.source={body:"query BotGuildStatus($input: BotGuildStatusInput!) {\n  botGuildStatus(input: $input) {\n    hasJoined\n    guildId\n    guildName\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.BotGuildStatus=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"BotGuildStatus")},3544:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"UserGuildPermissions"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"UserGuildPermissionsInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userGuildPermissions"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"userDiscordId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasManageRoles"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:160}};t.loc.source={body:"query UserGuildPermissions($input: UserGuildPermissionsInput!) {\n  userGuildPermissions(input: $input) {\n    guildId\n    userDiscordId\n    hasManageRoles\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.UserGuildPermissions=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"UserGuildPermissions")},3547:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GuildByInvitedId"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"GuildByInviteIdInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildByInviteId"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildIcon"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:138}};t.loc.source={body:"query GuildByInvitedId($input: GuildByInviteIdInput!) {\n   guildByInviteId(input: $input) {\n    guildId\n    guildName\n    guildIcon\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.GuildByInvitedId=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"GuildByInvitedId")},3589:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"metrics"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MetricsInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[]}]}}],loc:{start:0,end:65}};t.loc.source={body:"query metrics($input: MetricsInput!) {\n  metrics(input: $input)\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.metrics=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"metrics")},3648:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceBalanceQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceBalance"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"total_quota"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"quotas"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"beginsAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expiresAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalBalanceUSDCents"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentBalanceUSDCents"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"providerSpaceId"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"subsidies"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"providerSpaceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"beginsAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expiresAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"subsidyType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discountPercentage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalBalanceUSDCents"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentBalanceUSDCents"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:470}};t.loc.source={body:"query SpaceBalanceQuery(\n  $id: Int\n) {\n  space(id: $id) {\n    spaceBalance {\n      balance\n      total_quota\n      quotas {\n        beginsAt\n        expiresAt\n        totalBalanceUSDCents\n        currentBalanceUSDCents\n        providerSpaceId\n      }\n      subsidies {\n        chain\n        providerSpaceId\n        beginsAt\n        expiresAt\n        subsidyType\n        discountPercentage\n        totalBalanceUSDCents\n        currentBalanceUSDCents\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceBalanceQuery=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceBalanceQuery")},3649:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CostMetadata"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"chains"}},type:{kind:"NonNullType",type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Chain"}}}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"costMetadata"},arguments:[{kind:"Argument",name:{kind:"Name",value:"chains"},value:{kind:"Variable",name:{kind:"Name",value:"chains"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"gasPrice"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenPriceUSDCents"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimPriceUSDCents"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:149}};t.loc.source={body:"query CostMetadata($chains: [Chain!]!) {\n  costMetadata(chains: $chains) {\n    gasPrice\n    tokenPriceUSDCents\n    chain\n    claimPriceUSDCents\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.CostMetadata=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"CostMetadata")},3710:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceLeaderboard"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"first"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"after"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"order"}},type:{kind:"NamedType",name:{kind:"Name",value:"LoyaltyPointsRankOrder"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loyaltyPointsRanks"},arguments:[{kind:"Argument",name:{kind:"Name",value:"first"},value:{kind:"Variable",name:{kind:"Name",value:"first"}}},{kind:"Argument",name:{kind:"Name",value:"after"},value:{kind:"Variable",name:{kind:"Name",value:"after"}}},{kind:"Argument",name:{kind:"Name",value:"order"},value:{kind:"Variable",name:{kind:"Name",value:"order"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"startCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasPreviousPage"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rank"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserName"},arguments:[],directives:[]}]}}]}}]}}]}}]}}],loc:{start:0,end:583}};t.loc.source={body:"query SpaceLeaderboard($id: Int!, $first: Int, $after: String, $order: LoyaltyPointsRankOrder) {\n  space(id: $id) {\n    id\n    name\n    loyaltyPointsRanks(first: $first, after: $after, order: $order) {\n      pageInfo{\n        startCursor\n        endCursor\n        hasNextPage\n        hasPreviousPage\n      }\n      totalCount\n      list {\n        id\n        rank\n        points\n        space{\n          name\n        }\n        address{\n          username\n          id\n          avatar\n          address\n          twitterUserName\n          discordUserName\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceLeaderboard=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceLeaderboard")},3744:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceAlias"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceAliasExist"},arguments:[{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[]}]}}],loc:{start:0,end:70}};t.loc.source={body:"query SpaceAlias($alias: String!) {\n  spaceAliasExist(alias: $alias)\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceAlias=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceAlias")},3745:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceTokens"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceTokenInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceTokens"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"slug"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:206}};t.loc.source={body:"query SpaceTokens($input: ListSpaceTokenInput!) {\n  spaceTokens(input: $input) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    totalCount\n    list {\n      id\n      symbol\n      slug\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceTokens=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceTokens")},3746:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"TwitterUser"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userId"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"userName"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"twitterUser"},arguments:[{kind:"Argument",name:{kind:"Name",value:"userId"},value:{kind:"Variable",name:{kind:"Name",value:"userId"}}},{kind:"Argument",name:{kind:"Name",value:"userName"},value:{kind:"Variable",name:{kind:"Name",value:"userName"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"UserName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"ProfileImageUrl"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:155}};t.loc.source={body:"query TwitterUser($userId: String, $userName: String) {\n  twitterUser(userId: $userId, userName: $userName) {\n    Id\n    UserName\n    ProfileImageUrl\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.TwitterUser=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"TwitterUser")},4026:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceBalanceContracts"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListSpaceBalanceContractInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceBalanceContracts"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:159}};t.loc.source={body:"query SpaceBalanceContracts($input: ListSpaceBalanceContractInput!) {\n  spaceBalanceContracts(input: $input) {\n    list {\n      address\n      chain\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceBalanceContracts=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceBalanceContracts")},4029:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"PaymentHistory"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SpacePaymentsInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"spaceId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spacePayments"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tx"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"amount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"paymentType"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:311}};t.loc.source={body:"query PaymentHistory($spaceId: Int!, $input: SpacePaymentsInput!) {\n  space(id: $spaceId) {\n    spacePayments(input: $input) {\n      totalCount\n      pageInfo{\n        endCursor\n      }\n      list {\n        status\n        tx\n        chain\n        timestamp\n        amount\n        paymentType\n      }\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.PaymentHistory=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"PaymentHistory")},4032:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"ExpenseStatement"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"SpaceExpensesInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"spaceId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceExpenses"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalClaim"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalSpaceCost"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalQuotaCost"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalSubsidyCost"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalClaimCost"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avgGasPrice"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avgClaimCost"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:364}};t.loc.source={body:"query ExpenseStatement($spaceId: Int!, $input: SpaceExpensesInput!) {\n  space(id: $spaceId) {\n    spaceExpenses(input: $input) {\n      totalCount\n      list {\n        timestamp\n        totalClaim\n        totalSpaceCost\n        totalQuotaCost\n        totalSubsidyCost\n        totalClaimCost\n        avgGasPrice\n        avgClaimCost\n        chain\n      }\n    }\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.ExpenseStatement=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"ExpenseStatement")},4037:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceDetailQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCampaignInput"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"nftCoreInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListNFTCoreInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"campaigns"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isBookmarked"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"nftCores"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"nftCoreInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"unclaimedBackfillLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"addressLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rank"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:2103}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\n#import '../../fragments/Space/SpaceCampaignBasic.gql'\nquery SpaceDetailQuery(\n  $id: Int\n  $alias: String\n  $address: String!\n  $campaignInput: ListCampaignInput!\n  $nftCoreInput: ListNFTCoreInput!\n) {\n  space(id: $id, alias: $alias) {\n    ...SpaceBasic\n\n    # isAdmin\n    isAdmin(address: $address)\n\n    # campaigns\n    campaigns(input: $campaignInput) {\n      list {\n        nftCore {\n          id\n        }\n        ...SpaceCampaignBasic\n        isBookmarked(address: $address)\n        info\n        #     childrenCampaigns {\n        #       ...CampaignSnap\n        #       id\n        #       gamification {\n        #         id\n        #         type\n        #         nfts {\n        #           nft {\n        #             treasureBack\n        #             nftCore {\n        #               id\n        #               contractAddress\n        #               spaceStationAddress\n        #             }\n        #           }\n        #         }\n        #       }\n        #     }\n        #     gamification {\n        #       id\n        #       type\n        #       nfts {\n        #         nft {\n        #           category\n        #           powah\n        #           image\n        #           name\n        #           treasureBack\n        #           nftCore {\n        #             id\n        #             name\n        #             symbol\n        #             spaceStationAddress\n        #             dao {\n        #               id\n        #               name\n        #               logo\n        #               alias\n        #               isVerified\n        #             }\n        #           }\n        #         }\n        #       }\n        #     }\n      }\n      #   pageInfo {\n      #     endCursor\n      #   }\n    }\n\n    # contracts\n    nftCores(input: $nftCoreInput) {\n      list {\n        id\n        name\n        contractAddress\n        info\n        symbol\n        chain\n      }\n    }\n\n    unclaimedBackfillLoyaltyPoints(address: $address)\n\n    addressLoyaltyPoints(address: $address) {\n      id\n      points\n      rank\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}d.definitions=d.definitions.concat(l(t(903).definitions)),d.definitions=d.definitions.concat(l(t(2864).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=d,e.exports.SpaceDetailQuery=function(e,n){var t={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=o[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=c(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceDetailQuery")},4044:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceMembers"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceMembers"},arguments:[{kind:"Argument",name:{kind:"Name",value:"spaceId"},value:{kind:"Variable",name:{kind:"Name",value:"spaceId"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"role"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:123}};t.loc.source={body:"query SpaceMembers($spaceId: Int!) {\n  spaceMembers(spaceId: $spaceId) {\n    username\n    avatar\n    address\n    role\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceMembers=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceMembers")},4069:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceAccessQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isFollowing"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordGuildInfo"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"unclaimedBackfillLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"addressLoyaltyPoints"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"points"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rank"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:380}};t.loc.source={body:"query SpaceAccessQuery(\n  $id: Int,\n  $alias: String,\n  $address: String!,\n) {\n  space(id: $id, alias: $alias) {\n    id\n    isFollowing\n    discordGuildID\n    discordGuildInfo\n    status\n\n    # isAdmin\n    isAdmin(address: $address)\n\n    unclaimedBackfillLoyaltyPoints(address: $address)\n\n    addressLoyaltyPoints(address: $address) {\n      id\n      points\n      rank\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.SpaceAccessQuery=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"SpaceAccessQuery")},4231:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceDataQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCampaignInput"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"nftCoreInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListNFTCoreInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"spaceBalance"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"total_quota"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"quotas"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"beginsAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expiresAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalBalanceUSDCents"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"currentBalanceUSDCents"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"providerSpaceId"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"discordGuildID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"twitterUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"campaigns"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nftCores"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"nftCoreInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:1338}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\n#import '../../fragments/Space/SpaceCampaignBasic.gql'\nquery SpaceDataQuery(\n  $id: Int\n  $alias: String\n  $address: String!\n  $campaignInput: ListCampaignInput!\n  $nftCoreInput: ListNFTCoreInput!\n) {\n  space(id: $id, alias: $alias) {\n    ...SpaceBasic\n\n    spaceBalance {\n      balance\n      total_quota\n      quotas {\n        beginsAt\n        expiresAt\n        totalBalanceUSDCents\n        currentBalanceUSDCents\n        providerSpaceId\n      }\n    }\n    # social media ids\n    discordGuildID\n    twitterUserID\n\n    # isAdmin\n    isAdmin(address: $address)\n    metrics\n\n    # campaigns\n    campaigns(input: $campaignInput) {\n      list {\n        nftCore {\n          id\n        }\n        ...SpaceCampaignBasic\n        info\n        metrics\n        childrenCampaigns {\n          nftCore {\n            id\n          }\n          ...SpaceCampaignBasic\n          info\n          metrics\n          gamification {\n            id\n            type\n          }\n        }\n        gamification {\n          id\n          type\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      totalCount\n    }\n\n    # contracts\n    nftCores(input: $nftCoreInput) {\n      list {\n        id\n        name\n        contractAddress\n        info\n        symbol\n        chain\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}d.definitions=d.definitions.concat(l(t(903).definitions)),d.definitions=d.definitions.concat(l(t(2864).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=d,e.exports.SpaceDataQuery=function(e,n){var t={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=o[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=c(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceDataQuery")},4232:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CampaignDataQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ID"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"distributionType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numNFTMinted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftHolderSnapshot"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"holderSnapshotBlock"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"isAdmin"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"isBookmarked"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nfts"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nft"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"treasureBack"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaceStationAddress"},arguments:[],directives:[]}]}}]}}]}}]}},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"distributionType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numNFTMinted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nfts"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nft"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"treasureBack"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"spaceStationAddress"},arguments:[],directives:[]}]}}]}}]}}]}}]}}]}}]}}],loc:{start:0,end:1123}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\n#import '../../fragments/Space/SpaceCampaignBasic.gql'\nquery CampaignDataQuery($id: ID!, $address: String!) {\n  campaign(id: $id) {\n    nftCore {\n      id\n    }\n    ...SpaceCampaignBasic\n    info\n    distributionType\n    numNFTMinted\n    metrics\n    rewardType\n    chain\n    type\n    nftHolderSnapshot{\n      holderSnapshotBlock\n    }\n    space {\n      ...SpaceBasic\n      isAdmin(address: $address)\n    }\n    isBookmarked(address: $address)\n    gamification {\n      id\n      type\n      nfts {\n        nft {\n          treasureBack\n          nftCore {\n            id\n            contractAddress\n            spaceStationAddress\n          }\n        }\n      }\n    }\n    childrenCampaigns {\n      nftCore {\n        id\n      }\n      ...SpaceCampaignBasic\n      info\n      distributionType\n      numNFTMinted\n      metrics\n      gamification {\n        id\n        type\n        nfts {\n          nft {\n            treasureBack\n            nftCore {\n              id\n              contractAddress\n              spaceStationAddress\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}d.definitions=d.definitions.concat(l(t(903).definitions)),d.definitions=d.definitions.concat(l(t(2864).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=d,e.exports.CampaignDataQuery=function(e,n){var t={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=o[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=c(e,n);d&&t.definitions.push(d)})),t}(d,"CampaignDataQuery")},4263:function(e,n,t){var d={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpaceCampaignsMetricQuery"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"alias"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ListCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}},{kind:"Argument",name:{kind:"Name",value:"alias"},value:{kind:"Variable",name:{kind:"Name",value:"alias"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"campaigns"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"campaignInput"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"list"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"childrenCampaigns"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"nftCore"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]}]}},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignBasic"},directives:[]},{kind:"Field",name:{kind:"Name",value:"info"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metrics"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"pageInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"hasNextPage"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endCursor"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"totalCount"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:818}};d.loc.source={body:"#import '../../fragments/Space/SpaceBasic.gql'\n#import '../../fragments/Space/SpaceCampaignBasic.gql'\nquery SpaceCampaignsMetricQuery(\n  $id: Int\n  $alias: String\n  $address: String!\n  $campaignInput: ListCampaignInput!\n) {\n  space(id: $id, alias: $alias) {\n    id\n    \n    # campaigns\n    campaigns(input: $campaignInput) {\n      list {\n        nftCore {\n          id\n        }\n        ...SpaceCampaignBasic\n        info\n        metrics\n        childrenCampaigns {\n          nftCore {\n            id\n          }\n          ...SpaceCampaignBasic\n          info\n          metrics\n          gamification {\n            id\n            type\n          }\n        }\n        gamification {\n          id\n          type\n        }\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      totalCount\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function l(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}function m(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){m(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){m(e,n)})),e.definitions&&e.definitions.forEach((function(e){m(e,n)}))}d.definitions=d.definitions.concat(l(t(903).definitions)),d.definitions=d.definitions.concat(l(t(2864).definitions));var o={};function c(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}d.definitions.forEach((function(e){if(e.name){var n=new Set;m(e,n),o[e.name.value]=n}})),e.exports=d,e.exports.SpaceCampaignsMetricQuery=function(e,n){var t={kind:e.kind,definitions:[c(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=o[n]||new Set,r=new Set,l=new Set;for(d.forEach((function(e){l.add(e)}));l.size>0;){var m=l;l=new Set,m.forEach((function(e){r.has(e)||(r.add(e),(o[e]||new Set).forEach((function(e){l.add(e)})))}))}return r.forEach((function(n){var d=c(e,n);d&&t.definitions.push(d)})),t}(d,"SpaceCampaignsMetricQuery")},4475:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getSpaceTier"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"id"}},type:{kind:"NamedType",name:{kind:"Name",value:"Int"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"id"},value:{kind:"Variable",name:{kind:"Name",value:"id"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tierInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"level"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"levelScoreThreshold"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"taskList"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"taskName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"scores"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"taskType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isCompleted"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"completedCnt"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"taskRecordList"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"taskName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"taskDetail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardScore"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"createdAt"},arguments:[],directives:[]}]}}]}}]}}]}}],loc:{start:0,end:407}};t.loc.source={body:"query getSpaceTier($id: Int) {\n  space(id: $id) {\n    id\n    alias\n    tierInfo {\n      level\n      score\n      levelScoreThreshold\n      taskList {\n        id\n        cap\n        taskName\n        description\n        scores\n        taskType\n        isCompleted\n        completedCnt\n      }\n      taskRecordList {\n        taskName\n        taskDetail\n        rewardScore\n        createdAt\n      }\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.getSpaceTier=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"getSpaceTier")},5056:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"IsChannelMember"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"channelId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressInfo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"hasDiscord"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"discordUserID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isChannelMember"},arguments:[{kind:"Argument",name:{kind:"Name",value:"channelId"},value:{kind:"Variable",name:{kind:"Name",value:"channelId"}}}],directives:[]}]}}]}}],loc:{start:0,end:200}};t.loc.source={body:"query IsChannelMember($address: String!, $channelId: String!) {\n  addressInfo(address: $address) {\n    id\n    address\n    hasDiscord\n    discordUserID\n    isChannelMember(channelId: $channelId)\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function l(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.IsChannelMember=function(e,n){var t={kind:e.kind,definitions:[l(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,m=new Set,o=new Set;for(d.forEach((function(e){o.add(e)}));o.size>0;){var c=o;o=new Set,c.forEach((function(e){m.has(e)||(m.add(e),(r[e]||new Set).forEach((function(e){o.add(e)})))}))}return m.forEach((function(n){var d=l(e,n);d&&t.definitions.push(d)})),t}(t,"IsChannelMember")}}]);