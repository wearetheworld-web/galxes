(window.webpackJsonp=window.webpackJsonp||[]).push([[904,1038],{2455:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"GetUploadPresignURL"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"getPresignURLInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getUploadPresignURL"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"uploadURL"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"resourceURL"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:146}};t.loc.source={body:"mutation GetUploadPresignURL($input: getPresignURLInput!) {\n    getUploadPresignURL(input: $input) {\n        uploadURL\n        resourceURL\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.GetUploadPresignURL=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"GetUploadPresignURL")},2477:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredForAddress"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Cred"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credSource"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"referenceLink"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastUpdate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credContractNFTHolder"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[]},{kind:"Field",name:{kind:"Name",value:"subgraph"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"endpoint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"query"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"metadata"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredMetaData"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"gitcoinPassport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"lastScoreTimestamp"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:404}};d.loc.source={body:"#import './CredMetaData.gql'\nfragment CredForAddress on Cred {\n  id\n  name\n  type\n  credType\n  credSource\n  referenceLink\n  description\n  lastUpdate\n  credContractNFTHolder {\n    timestamp\n  }\n  chain\n  eligible(address: $address)\n  subgraph {\n    endpoint\n    query\n    expression\n  }\n  metadata {\n    ...CredMetaData\n  }\n  value {\n    gitcoinPassport {\n      score\n      lastScoreTimestamp\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};d.definitions=d.definitions.concat(t(2544).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))),e.exports=d},2504:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"PrepareParticipate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PrepareParticipateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"prepareParticipate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"allow"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"disallowReason"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signature"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nonce"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"mintFuncInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"funcName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"nftCoreAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verifyIDs"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"powahs"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"extLinkResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"success"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"data"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"error"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"metaTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"metaSig2"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"autoTaskUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metaSpaceAddr"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"forwarderAddr"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"metaTxHash"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"reqQueueing"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"solanaTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"mint"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"updateAuthority"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"explorerUrl"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"signedTx"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verifyID"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"aptosTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signatureExpiredAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenName"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenRewardCampaignTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signatureExpiredAt"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"verifyID"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"loyaltyPointsTxResp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"TotalClaimedPoints"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:759}};t.loc.source={body:"mutation PrepareParticipate($input: PrepareParticipateInput!) {\n  prepareParticipate(input: $input) {\n    allow\n    disallowReason\n    signature\n    nonce\n    mintFuncInfo {\n      funcName\n      nftCoreAddress\n      verifyIDs\n      powahs\n      cap\n    }\n    extLinkResp {\n      success\n      data\n      error\n    }\n    metaTxResp {\n      metaSig2\n      autoTaskUrl\n      metaSpaceAddr\n      forwarderAddr\n      metaTxHash\n      reqQueueing\n    }\n    solanaTxResp {\n      mint\n      updateAuthority\n      explorerUrl\n      signedTx\n      verifyID\n    }\n    aptosTxResp {\n      signatureExpiredAt\n      tokenName\n    }\n    tokenRewardCampaignTxResp {\n      signatureExpiredAt\n      verifyID\n    }\n    loyaltyPointsTxResp {\n      TotalClaimedPoints\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.PrepareParticipate=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"PrepareParticipate")},2544:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredMetaData"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"CredMetadata"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"visitLink"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"link"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"gitcoinPassport"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"score"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"config"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"lastScoreTimestamp"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"title"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"config"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:250}};t.loc.source={body:"fragment CredMetaData on CredMetadata {\n  visitLink {\n    link\n  }\n  gitcoinPassport {\n    score {\n      title\n      type\n      description\n      config\n    }\n    lastScoreTimestamp {\n      title\n      type\n      description\n      config\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},2566:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"CredentialGroupForAddress"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"CredentialGroup"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"credentials"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredForAddress"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"conditionRelation"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"conditions"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewards"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"expression"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"eligible"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardType"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardAttrVals"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"attrName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrTitle"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"attrVal"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"claimedLoyaltyPoints"},arguments:[],directives:[]}]}}],loc:{start:0,end:378}};d.loc.source={body:"#import './CredForAddress.gql'\n\nfragment CredentialGroupForAddress on CredentialGroup {\n  id\n  description\n  credentials {\n    ...CredForAddress\n  }\n  conditionRelation\n  conditions {\n    expression\n    eligible\n  }\n  rewards {\n    expression\n    eligible\n    rewardCount\n    rewardType\n  }\n  rewardAttrVals {\n    attrName\n    attrTitle\n    attrVal\n  }\n  claimedLoyaltyPoints\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};d.definitions=d.definitions.concat(t(2477).definitions.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))),e.exports=d},2744:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"Participate"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ParticipateInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participate"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participated"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:104}};t.loc.source={body:"mutation Participate($input: ParticipateInput!){\n    participate(input:$input){\n    participated\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.Participate=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"Participate")},2745:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"addCampaign"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutateCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"claimEndTime"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:149}};t.loc.source={body:"mutation addCampaign($input:MutateCampaignInput!){\n    campaign(input:$input){\n        id\n        numberID\n        name\n        claimEndTime\n    }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.addCampaign=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"addCampaign")},2863:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"deleteCampaign"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutateCampaignInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"campaign"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:114}};t.loc.source={body:"mutation deleteCampaign($input: MutateCampaignInput!){\n  campaign(input: $input){\n    id\n    name\n    status\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.deleteCampaign=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"deleteCampaign")},2864:function(e,n,t){var d={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"SpaceCampaignBasic"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Campaign"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"description"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"formula"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gasType"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"isPrivate"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"loyaltyPoints"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardContract"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"tokenReward"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"userTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"depositedTokenAmount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tokenRewardId"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"numberID"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"rewardName"},arguments:[],directives:[]},{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceCampaignMedia"},directives:[]},{kind:"Field",name:{kind:"Name",value:"space"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"SpaceBasic"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"credentialGroups"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"CredentialGroupForAddress"},directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"rewardInfo"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"discordRole"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"roleName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"inviteLink"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"premint"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"startTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"endTime"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"price"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"totalSupply"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contractAddress"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"banner"},arguments:[],directives:[]}]}}]}},{kind:"Field",name:{kind:"Name",value:"participants"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"participantsCount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"bountyWinnersCount"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"recurringType"},arguments:[],directives:[]}]}}],loc:{start:0,end:940}};d.loc.source={body:"#import './SpaceBasic.gql'\n#import './SpaceCampaignMedia.gql'\n#import '../Credential/CredentialGroupForAddress.gql'\n\nfragment SpaceCampaignBasic on Campaign {\n  id\n  name\n  description\n  thumbnail\n  startTime\n  endTime\n  status\n  formula\n  cap\n  gasType\n  isPrivate\n  type\n  loyaltyPoints\n  tokenRewardContract {\n    id\n    address\n    chain\n  }\n  tokenReward {\n    userTokenAmount\n    tokenAddress\n    depositedTokenAmount\n    tokenRewardId\n  }\n  numberID\n  chain\n  rewardName\n  ...SpaceCampaignMedia\n  space {\n    ...SpaceBasic\n  }\n  credentialGroups(address: $address) {\n    ...CredentialGroupForAddress\n  }\n  rewardInfo {\n    discordRole {\n      guildId\n      guildName\n      roleId\n      roleName\n      inviteLink\n    }\n    premint {\n      startTime\n      endTime\n      chain\n      price\n      totalSupply\n      contractAddress\n      banner\n    }\n  }\n  participants {\n    participantsCount\n    bountyWinnersCount\n  }\n  recurringType\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};var r={};function o(defs){return defs.filter((function(e){if("FragmentDefinition"!==e.kind)return!0;var n=e.name.value;return!r[n]&&(r[n]=!0,!0)}))}d.definitions=d.definitions.concat(o(t(903).definitions)),d.definitions=d.definitions.concat(o(t(3094).definitions)),d.definitions=d.definitions.concat(o(t(2566).definitions)),e.exports=d},3023:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"CreateReportTicket"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"CreateTicketInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createTicket"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:117}};t.loc.source={body:"mutation CreateReportTicket($input: CreateTicketInput!) {\n  createTicket(input: $input) {\n    code\n    message\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.CreateReportTicket=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"CreateReportTicket")},3094:function(e,n){var t={kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"SpaceCampaignMedia"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Campaign"}},directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"thumbnail"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"gamification"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"type"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:104}};t.loc.source={body:"\n\nfragment SpaceCampaignMedia on Campaign { \n    thumbnail\n    gamification{\n      id\n      type\n    }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};e.exports=t},3378:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"VerifySpaceDiscord"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"VerifySpaceDiscordInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"verifySpaceDiscord"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"spaceId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"guildInfo"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:146}};t.loc.source={body:"mutation VerifySpaceDiscord($input: VerifySpaceDiscordInput!) {\n  verifySpaceDiscord(input: $input) {\n    spaceId\n    guildId\n    guildInfo\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.VerifySpaceDiscord=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"VerifySpaceDiscord")},3743:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"space"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"MutateSpaceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"space"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"alias"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:91}};t.loc.source={body:"mutation space($input: MutateSpaceInput!) {\n  space(input: $input) {\n    id\n    alias\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.space=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"space")},3747:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"DeleteSpaceDiscord"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DeleteSpaceDiscordInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"deleteSpaceDiscord"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:129}};t.loc.source={body:"mutation DeleteSpaceDiscord($input: DeleteSpaceDiscordInput!) {\n  deleteSpaceDiscord(input: $input) {\n    code\n    message\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.DeleteSpaceDiscord=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"DeleteSpaceDiscord")},3998:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"createChannel"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"CreateGuildChannelInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"createGuildChannel"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ChannelId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"ChannelName"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:133}};t.loc.source={body:"mutation createChannel($input: CreateGuildChannelInput!) {\n  createGuildChannel(input: $input) {\n    ChannelId\n    ChannelName\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.createChannel=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"createChannel")},4025:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"DepositNotify"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"DepositSpaceBalanceInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"depositSpaceBalance"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"status"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"tx"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"chain"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"amount"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"paymentType"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:173}};t.loc.source={body:"mutation DepositNotify($input: DepositSpaceBalanceInput!) {\n  depositSpaceBalance(input: $input) {\n    status\n    tx\n    chain\n    timestamp\n    amount\n    paymentType\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.DepositNotify=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"DepositNotify")},4045:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"AddSpaceMember"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addSpaceMember"},arguments:[{kind:"Argument",name:{kind:"Name",value:"spaceId"},value:{kind:"Variable",name:{kind:"Name",value:"spaceId"}}},{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"role"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:168}};t.loc.source={body:"mutation AddSpaceMember($spaceId: Int!, $address: String!) {\n  addSpaceMember(spaceId: $spaceId, address: $address) {\n    username\n    avatar\n    address\n    role\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.AddSpaceMember=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"AddSpaceMember")},4046:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RemoveSpaceMember"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"removeSpaceMember"},arguments:[{kind:"Argument",name:{kind:"Name",value:"spaceId"},value:{kind:"Variable",name:{kind:"Name",value:"spaceId"}}},{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"role"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:174}};t.loc.source={body:"mutation RemoveSpaceMember($spaceId: Int!, $address: String!) {\n  removeSpaceMember(spaceId: $spaceId, address: $address) {\n    username\n    avatar\n    address\n    role\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.RemoveSpaceMember=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"RemoveSpaceMember")},4047:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"TransferSpaceOwnership"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"spaceId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"toAddress"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"transferSpaceOwnership"},arguments:[{kind:"Argument",name:{kind:"Name",value:"spaceId"},value:{kind:"Variable",name:{kind:"Name",value:"spaceId"}}},{kind:"Argument",name:{kind:"Name",value:"toAddress"},value:{kind:"Variable",name:{kind:"Name",value:"toAddress"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"username"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"avatar"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"address"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"role"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:190}};t.loc.source={body:"mutation TransferSpaceOwnership($spaceId: Int!, $toAddress: String!) {\n  transferSpaceOwnership(spaceId: $spaceId, toAddress: $toAddress) {\n    username\n    avatar\n    address\n    role\n  }\n}",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.TransferSpaceOwnership=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"TransferSpaceOwnership")},4493:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"joinExclusiveChannel"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"JoinExclusiveChannelInput"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"joinExclusiveChannel"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"code"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"message"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:135}};t.loc.source={body:"mutation joinExclusiveChannel($input: JoinExclusiveChannelInput!) {\n  joinExclusiveChannel(input: $input) {\n    code\n    message\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function d(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){d(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){d(e,n)})),e.definitions&&e.definitions.forEach((function(e){d(e,n)}))}var r={};function o(e,n){for(var i=0;i<e.definitions.length;i++){var element=e.definitions[i];if(element.name&&element.name.value==n)return element}}t.definitions.forEach((function(e){if(e.name){var n=new Set;d(e,n),r[e.name.value]=n}})),e.exports=t,e.exports.joinExclusiveChannel=function(e,n){var t={kind:e.kind,definitions:[o(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var d=r[n]||new Set,l=new Set,m=new Set;for(d.forEach((function(e){m.add(e)}));m.size>0;){var c=m;m=new Set,c.forEach((function(e){l.has(e)||(l.add(e),(r[e]||new Set).forEach((function(e){m.add(e)})))}))}return l.forEach((function(n){var d=o(e,n);d&&t.definitions.push(d)})),t}(t,"joinExclusiveChannel")}}]);